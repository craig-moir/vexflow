{"version":3,"file":"vexflow-bravura.js","mappings":"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","sources":["webpack://Vex/webpack/universalModuleDefinition","webpack://Vex/webpack/bootstrap","webpack://Vex/webpack/runtime/define property getters","webpack://Vex/webpack/runtime/global","webpack://Vex/webpack/runtime/hasOwnProperty shorthand","webpack://Vex/webpack/runtime/make namespace object","webpack://Vex/./src/typeguard.ts","webpack://Vex/./src/util.ts","webpack://Vex/./src/fraction.ts","webpack://Vex/./src/boundingbox.ts","webpack://Vex/./src/boundingboxcomputation.ts","webpack://Vex/./src/font.ts","webpack://Vex/./src/registry.ts","webpack://Vex/./src/element.ts","webpack://Vex/./src/tables.ts","webpack://Vex/./src/glyph.ts","webpack://Vex/./src/modifier.ts","webpack://Vex/./src/music.ts","webpack://Vex/./src/accidental.ts","webpack://Vex/./src/stem.ts","webpack://Vex/./src/textformatter.ts","webpack://Vex/./src/annotation.ts","webpack://Vex/./src/articulation.ts","webpack://Vex/./src/rendercontext.ts","webpack://Vex/./src/tickable.ts","webpack://Vex/./src/note.ts","webpack://Vex/./src/stavemodifier.ts","webpack://Vex/./src/stavebarline.ts","webpack://Vex/./src/chordsymbol.ts","webpack://Vex/./src/barnote.ts","webpack://Vex/./src/bend.ts","webpack://Vex/./src/dot.ts","webpack://Vex/./src/frethandfinger.ts","webpack://Vex/./src/notehead.ts","webpack://Vex/./src/stemmablenote.ts","webpack://Vex/./src/stavenote.ts","webpack://Vex/./src/stavetie.ts","webpack://Vex/./src/tabtie.ts","webpack://Vex/./src/voice.ts","webpack://Vex/./src/gracenotegroup.ts","webpack://Vex/./src/notesubgroup.ts","webpack://Vex/./src/tickcontext.ts","webpack://Vex/./src/ornament.ts","webpack://Vex/./src/parenthesis.ts","webpack://Vex/./src/web.ts","webpack://Vex/./src/canvascontext.ts","webpack://Vex/./src/svgcontext.ts","webpack://Vex/./src/renderer.ts","webpack://Vex/./src/textnote.ts","webpack://Vex/./src/stavevolta.ts","webpack://Vex/./src/stringnumber.ts","webpack://Vex/./src/strokes.ts","webpack://Vex/./src/vibrato.ts","webpack://Vex/./src/modifiercontext.ts","webpack://Vex/./src/clef.ts","webpack://Vex/./src/keysignature.ts","webpack://Vex/./src/staverepetition.ts","webpack://Vex/./src/stavesection.ts","webpack://Vex/./src/stavetempo.ts","webpack://Vex/./src/stavetext.ts","webpack://Vex/./src/timesigglyph.ts","webpack://Vex/./src/timesignature.ts","webpack://Vex/./src/stave.ts","webpack://Vex/./src/staveconnector.ts","webpack://Vex/./src/formatter.ts","webpack://Vex/./src/tuplet.ts","webpack://Vex/./src/beam.ts","webpack://Vex/./src/clefnote.ts","webpack://Vex/./src/crescendo.ts","webpack://Vex/./src/curve.ts","webpack://Vex/./src/parser.ts","webpack://Vex/./src/easyscore.ts","webpack://Vex/./src/ghostnote.ts","webpack://Vex/./src/glyphnote.ts","webpack://Vex/./src/gracenote.ts","webpack://Vex/./src/keysignote.ts","webpack://Vex/./src/multimeasurerest.ts","webpack://Vex/./src/pedalmarking.ts","webpack://Vex/./src/repeatnote.ts","webpack://Vex/./src/staveline.ts","webpack://Vex/./src/system.ts","webpack://Vex/./src/tabnote.ts","webpack://Vex/./src/tabstave.ts","webpack://Vex/./src/textbracket.ts","webpack://Vex/./src/textdynamics.ts","webpack://Vex/./src/timesignote.ts","webpack://Vex/./src/vibratobracket.ts","webpack://Vex/./src/factory.ts","webpack://Vex/./src/gracetabnote.ts","webpack://Vex/./src/keymanager.ts","webpack://Vex/./src/stavehairpin.ts","webpack://Vex/./src/tabslide.ts","webpack://Vex/./src/tremolo.ts","webpack://Vex/./src/tuning.ts","webpack://Vex/./src/flow.ts","webpack://Vex/./src/version.ts","webpack://Vex/./src/fonts/bravura_glyphs.ts","webpack://Vex/./src/fonts/bravura_metrics.ts","webpack://Vex/./src/fonts/custom_glyphs.ts","webpack://Vex/./src/fonts/custom_metrics.ts","webpack://Vex/./src/fonts/petalumascript_glyphs.ts","webpack://Vex/./src/fonts/robotoslab_glyphs.ts","webpack://Vex/./src/vex.ts","webpack://Vex/./src/fonts/load_bravura.ts","webpack://Vex/./src/fonts/load_custom.ts","webpack://Vex/./entry/vexflow-bravura.ts","webpack://Vex/./src/fonts/textfonts.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Vex\"] = factory();\n\telse\n\t\troot[\"Vex\"] = factory();\n})((typeof window !== 'undefined' ? window : typeof globalThis !== 'undefined' ? globalThis : this), function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Ron B. Yeh\n// MIT License\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * Use instead of `instanceof` as a more flexible type guard.\n * @param obj check if this object's CATEGORY matches the provided category.\n * @param category a string representing a category of VexFlow objects.\n * @param checkAncestors defaults to `true`, so we walk up the prototype chain to look for a matching `CATEGORY`.\n *        If `false`, we do not check the superclass or other ancestors.\n * @returns true if `obj` has a static `CATEGORY` property that matches `category`.\n */\nexport function isCategory(obj, category, checkAncestors = true) {\n    // obj is undefined, a number, a primitive string, or null.\n    if (typeof obj !== 'object' || obj === null) {\n        return false;\n    }\n    // `obj.constructor` is a reference to the constructor function that created the `obj` instance.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\n    let constructorFcn = obj.constructor;\n    // Check if the object's static .CATEGORY matches the provided category.\n    if (checkAncestors) {\n        // Walk up the prototype chain to look for a matching obj.constructor.CATEGORY.\n        while (obj !== null) {\n            constructorFcn = obj.constructor;\n            if ('CATEGORY' in constructorFcn && constructorFcn.CATEGORY === category) {\n                return true;\n            }\n            obj = Object.getPrototypeOf(obj);\n        }\n        return false;\n    }\n    else {\n        // Do not walk up the prototype chain. Just check this particular object's static .CATEGORY string.\n        return 'CATEGORY' in constructorFcn && constructorFcn.CATEGORY === category;\n    }\n}\nexport const isAccidental = (obj) => isCategory(obj, Category.Accidental);\nexport const isAnnotation = (obj) => isCategory(obj, Category.Annotation);\nexport const isBarline = (obj) => isCategory(obj, Category.Barline);\nexport const isDot = (obj) => isCategory(obj, Category.Dot);\nexport const isGraceNote = (obj) => isCategory(obj, Category.GraceNote);\nexport const isGraceNoteGroup = (obj) => isCategory(obj, Category.GraceNoteGroup);\nexport const isNote = (obj) => isCategory(obj, Category.Note);\nexport const isRenderContext = (obj) => isCategory(obj, Category.RenderContext);\nexport const isStaveNote = (obj) => isCategory(obj, Category.StaveNote);\nexport const isStemmableNote = (obj) => isCategory(obj, Category.StemmableNote);\nexport const isTabNote = (obj) => isCategory(obj, Category.TabNote);\n// 'const' enums are erased by the TypeScript compiler. The string values are inlined at all the use sites.\n// See: https://www.typescriptlang.org/docs/handbook/enums.html#const-enums\nexport var Category;\n(function (Category) {\n    Category[\"Accidental\"] = \"Accidental\";\n    Category[\"Annotation\"] = \"Annotation\";\n    Category[\"Articulation\"] = \"Articulation\";\n    Category[\"Barline\"] = \"Barline\";\n    Category[\"BarNote\"] = \"BarNote\";\n    Category[\"Beam\"] = \"Beam\";\n    Category[\"Bend\"] = \"Bend\";\n    Category[\"ChordSymbol\"] = \"ChordSymbol\";\n    Category[\"Clef\"] = \"Clef\";\n    Category[\"ClefNote\"] = \"ClefNote\";\n    Category[\"Crescendo\"] = \"Crescendo\";\n    Category[\"Curve\"] = \"Curve\";\n    Category[\"Dot\"] = \"Dot\";\n    Category[\"Element\"] = \"Element\";\n    Category[\"Fraction\"] = \"Fraction\";\n    Category[\"FretHandFinger\"] = \"FretHandFinger\";\n    Category[\"GhostNote\"] = \"GhostNote\";\n    Category[\"Glyph\"] = \"Glyph\";\n    Category[\"GlyphNote\"] = \"GlyphNote\";\n    Category[\"GraceNote\"] = \"GraceNote\";\n    Category[\"GraceNoteGroup\"] = \"GraceNoteGroup\";\n    Category[\"GraceTabNote\"] = \"GraceTabNote\";\n    Category[\"KeySignature\"] = \"KeySignature\";\n    Category[\"KeySigNote\"] = \"KeySigNote\";\n    Category[\"Modifier\"] = \"Modifier\";\n    Category[\"MultiMeasureRest\"] = \"MultiMeasureRest\";\n    Category[\"Note\"] = \"Note\";\n    Category[\"NoteHead\"] = \"NoteHead\";\n    Category[\"NoteSubGroup\"] = \"NoteSubGroup\";\n    Category[\"Ornament\"] = \"Ornament\";\n    Category[\"Parenthesis\"] = \"Parenthesis\";\n    Category[\"PedalMarking\"] = \"PedalMarking\";\n    Category[\"RenderContext\"] = \"RenderContext\";\n    Category[\"RepeatNote\"] = \"RepeatNote\";\n    Category[\"Repetition\"] = \"Repetition\";\n    Category[\"Stave\"] = \"Stave\";\n    Category[\"StaveConnector\"] = \"StaveConnector\";\n    Category[\"StaveHairpin\"] = \"StaveHairpin\";\n    Category[\"StaveLine\"] = \"StaveLine\";\n    Category[\"StaveModifier\"] = \"StaveModifier\";\n    Category[\"StaveNote\"] = \"StaveNote\";\n    Category[\"StaveSection\"] = \"StaveSection\";\n    Category[\"StaveTempo\"] = \"StaveTempo\";\n    Category[\"StaveText\"] = \"StaveText\";\n    Category[\"StaveTie\"] = \"StaveTie\";\n    Category[\"Stem\"] = \"Stem\";\n    Category[\"StemmableNote\"] = \"StemmableNote\";\n    Category[\"StringNumber\"] = \"StringNumber\";\n    Category[\"Stroke\"] = \"Stroke\";\n    Category[\"System\"] = \"System\";\n    Category[\"TabNote\"] = \"TabNote\";\n    Category[\"TabSlide\"] = \"TabSlide\";\n    Category[\"TabStave\"] = \"TabStave\";\n    Category[\"TabTie\"] = \"TabTie\";\n    Category[\"TextBracket\"] = \"TextBracket\";\n    Category[\"TextDynamics\"] = \"TextDynamics\";\n    Category[\"TextNote\"] = \"TextNote\";\n    Category[\"Tickable\"] = \"Tickable\";\n    Category[\"TimeSignature\"] = \"TimeSignature\";\n    Category[\"TimeSigNote\"] = \"TimeSigNote\";\n    Category[\"Tremolo\"] = \"Tremolo\";\n    Category[\"Tuplet\"] = \"Tuplet\";\n    Category[\"Vibrato\"] = \"Vibrato\";\n    Category[\"VibratoBracket\"] = \"VibratoBracket\";\n    Category[\"Voice\"] = \"Voice\";\n    Category[\"Volta\"] = \"Volta\";\n})(Category || (Category = {}));\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n// Note: Keep this module free of imports to reduce the chance of circular dependencies.\n/** `RuntimeError` will be thrown by VexFlow classes in case of error. */\nexport class RuntimeError extends Error {\n    constructor(code, message = '') {\n        super('[RuntimeError] ' + code + ': ' + message);\n        this.code = code;\n    }\n}\n/** VexFlow can be used outside of the browser (e.g., Node) where `window` may not be defined. */\n// eslint-disable-next-line\nexport function globalObject() {\n    if (typeof globalThis !== 'undefined') {\n        return globalThis;\n    }\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    return Function('return this')();\n}\n/**\n * Check that `x` is of type `T` and not `undefined`.\n * If `x` is `undefined`, throw a RuntimeError with the optionally provided error code and message.\n */\nexport function defined(x, code = 'undefined', message = '') {\n    if (x === undefined) {\n        throw new RuntimeError(code, message);\n    }\n    return x;\n}\n/** Default log function sends all arguments to console. */\n// eslint-disable-next-line\nexport function log(block, ...args) {\n    if (!args)\n        return;\n    const line = Array.prototype.slice.call(args).join(' ');\n    globalObject().console.log(block + ': ' + line);\n}\n/** Dump warning to console. */\n// eslint-disable-next-line\nexport function warn(...args) {\n    const line = args.join(' ');\n    const err = new Error();\n    globalObject().console.log('Warning: ', line, err.stack);\n}\n/** Round number to nearest fractional value (`.5`, `.25`, etc.) */\nfunction roundN(x, n) {\n    return x % n >= n / 2 ? parseInt(`${x / n}`, 10) * n + n : parseInt(`${x / n}`, 10) * n;\n}\n/** Locate the mid point between stave lines. Returns a fractional line if a space. */\nexport function midLine(a, b) {\n    let mid_line = b + (a - b) / 2;\n    if (mid_line % 2 > 0) {\n        mid_line = roundN(mid_line * 10, 5) / 10;\n    }\n    return mid_line;\n}\n/**\n * Used by various classes (e.g., SVGContext) to provide a\n * unique prefix to element names (or other keys in shared namespaces).\n */\nexport function prefix(text) {\n    return `vf-${text}`;\n}\n/**\n * Convert an arbitrary angle in radians to the equivalent one in the range [0, pi).\n */\nexport function normalizeAngle(a) {\n    a = a % (2 * Math.PI);\n    if (a < 0) {\n        a += 2 * Math.PI;\n    }\n    return a;\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n//\n// Author: Joshua Koo / @zz85\n// Author: @incompleteopus\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\n/** Fraction represents a rational number. */\nexport class Fraction {\n    /** Set the numerator and denominator. */\n    constructor(numerator, denominator) {\n        this.numerator = 1;\n        this.denominator = 1;\n        this.set(numerator, denominator);\n    }\n    static get CATEGORY() {\n        return Category.Fraction;\n    }\n    /**\n     * GCD: Greatest common divisor using the Euclidean algorithm.\n     * Note: GCD(0, 0) => 0 and GCD(0, n) => n.\n     */\n    static GCD(a, b) {\n        if (typeof a !== 'number' || Number.isNaN(a) || typeof b !== 'number' || Number.isNaN(b)) {\n            throw new RuntimeError('BadArgument', `Invalid numbers: ${a}, ${b}`);\n        }\n        let t;\n        while (b !== 0) {\n            t = b;\n            b = a % b;\n            a = t;\n        }\n        return a;\n    }\n    /** LCM: Lowest common multiple. */\n    static LCM(a, b) {\n        return (a * b) / Fraction.GCD(a, b);\n    }\n    /** Lowest common multiple for more than two numbers. */\n    static LCMM(args) {\n        if (args.length === 0) {\n            return 0;\n        }\n        else if (args.length === 1) {\n            return args[0];\n        }\n        else if (args.length === 2) {\n            return Fraction.LCM(args[0], args[1]);\n        }\n        else {\n            // args.shift() removes the first number.\n            // LCM the first number with the rest of the numbers.\n            return Fraction.LCM(args.shift(), Fraction.LCMM(args));\n        }\n    }\n    /** Set the numerator and denominator. */\n    set(numerator = 1, denominator = 1) {\n        this.numerator = numerator;\n        this.denominator = denominator;\n        return this;\n    }\n    /** Return the value of the fraction. */\n    value() {\n        return this.numerator / this.denominator;\n    }\n    /** Simplify numerator and denominator using GCD. */\n    simplify() {\n        let u = this.numerator;\n        let d = this.denominator;\n        const gcd = Fraction.GCD(u, d);\n        u /= gcd;\n        d /= gcd;\n        if (d < 0) {\n            d = -d;\n            u = -u;\n        }\n        return this.set(u, d);\n    }\n    /** Add value of another fraction. */\n    add(param1 = 0, param2 = 1) {\n        const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n        const lcm = Fraction.LCM(this.denominator, otherDenominator);\n        const a = lcm / this.denominator;\n        const b = lcm / otherDenominator;\n        const u = this.numerator * a + otherNumerator * b;\n        return this.set(u, lcm);\n    }\n    /** Substract value of another fraction. */\n    subtract(param1 = 0, param2 = 1) {\n        const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n        const lcm = Fraction.LCM(this.denominator, otherDenominator);\n        const a = lcm / this.denominator;\n        const b = lcm / otherDenominator;\n        const u = this.numerator * a - otherNumerator * b;\n        return this.set(u, lcm);\n    }\n    /** Multiply by value of another fraction. */\n    multiply(param1 = 1, param2 = 1) {\n        const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n        return this.set(this.numerator * otherNumerator, this.denominator * otherDenominator);\n    }\n    /** Divide by value of another Fraction. */\n    divide(param1 = 1, param2 = 1) {\n        const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n        return this.set(this.numerator * otherDenominator, this.denominator * otherNumerator);\n    }\n    /** Simplify both sides and check if they are equal. */\n    equals(compare) {\n        const a = Fraction.__staticFractionA.copy(compare).simplify();\n        const b = Fraction.__staticFractionB.copy(this).simplify();\n        return a.numerator === b.numerator && a.denominator === b.denominator;\n    }\n    /** Greater than operator. */\n    greaterThan(compare) {\n        const a = Fraction.__staticFractionB.copy(this);\n        a.subtract(compare);\n        return a.numerator > 0;\n    }\n    /** Greater than or equals operator. */\n    greaterThanEquals(compare) {\n        const a = Fraction.__staticFractionB.copy(this);\n        a.subtract(compare);\n        return a.numerator >= 0;\n    }\n    /** Less than operator. */\n    lessThan(compare) {\n        return !this.greaterThanEquals(compare);\n    }\n    /** Less than or equals operator. */\n    lessThanEquals(compare) {\n        return !this.greaterThan(compare);\n    }\n    /** Return a new copy with current values. */\n    clone() {\n        return new Fraction(this.numerator, this.denominator);\n    }\n    /** Copy value of another fraction. */\n    copy(other) {\n        if (typeof other === 'number') {\n            return this.set(other, 1);\n        }\n        else {\n            return this.set(other.numerator, other.denominator);\n        }\n    }\n    /** Return the integer component (eg. 5/2 => 2). */\n    quotient() {\n        return Math.floor(this.numerator / this.denominator);\n    }\n    /** Return the remainder component (eg. 5/2 => 1). */\n    remainder() {\n        return this.numerator % this.denominator;\n    }\n    /** Calculate absolute value. */\n    makeAbs() {\n        this.denominator = Math.abs(this.denominator);\n        this.numerator = Math.abs(this.numerator);\n        return this;\n    }\n    /** Return a raw string representation (eg. \"5/2\"). */\n    toString() {\n        return `${this.numerator}/${this.denominator}`;\n    }\n    /** Return a simplified string respresentation. */\n    toSimplifiedString() {\n        return Fraction.__staticFractionTmp.copy(this).simplify().toString();\n    }\n    /** Return string representation in mixed form. */\n    toMixedString() {\n        let s = '';\n        const q = this.quotient();\n        const f = Fraction.__staticFractionTmp.copy(this);\n        if (q < 0) {\n            f.makeAbs();\n        }\n        if (q !== 0) {\n            s += q;\n            if (f.numerator !== 0) {\n                s += ` ${f.toSimplifiedString()}`;\n            }\n        }\n        else if (f.numerator === 0) {\n            s = '0';\n        }\n        else {\n            s = f.toSimplifiedString();\n        }\n        return s;\n    }\n    /** Parse a fraction string. */\n    parse(str) {\n        const i = str.split('/');\n        const n = parseInt(i[0], 10);\n        const d = i[1] ? parseInt(i[1], 10) : 1;\n        return this.set(n, d);\n    }\n}\n// Cached objects for comparisons.\nFraction.__staticFractionA = new Fraction();\nFraction.__staticFractionB = new Fraction();\nFraction.__staticFractionTmp = new Fraction();\n/** Helper function to extract the numerator and denominator from another fraction. */\nfunction getNumeratorAndDenominator(n, d = 1) {\n    if (typeof n === 'number') {\n        // Both params are numbers, so we return them as [numerator, denominator].\n        return [n, d];\n    }\n    else {\n        // First param is a Fraction object. We ignore the second param.\n        return [n.numerator, n.denominator];\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nexport class BoundingBox {\n    constructor(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this.w = w;\n        this.h = h;\n    }\n    /**\n     * Create a new copy.\n     */\n    static copy(that) {\n        return new BoundingBox(that.x, that.y, that.w, that.h);\n    }\n    /** Get x position. */\n    getX() {\n        return this.x;\n    }\n    /** Get y position. */\n    getY() {\n        return this.y;\n    }\n    /** Get width. */\n    getW() {\n        return this.w;\n    }\n    /** Get height. */\n    getH() {\n        return this.h;\n    }\n    /** Set x position. */\n    setX(x) {\n        this.x = x;\n        return this;\n    }\n    /** Set y position. */\n    setY(y) {\n        this.y = y;\n        return this;\n    }\n    /** Set width. */\n    setW(w) {\n        this.w = w;\n        return this;\n    }\n    /** Set height. */\n    setH(h) {\n        this.h = h;\n        return this;\n    }\n    /** Move to position. */\n    move(x, y) {\n        this.x += x;\n        this.y += y;\n        return this;\n    }\n    /** Clone. */\n    clone() {\n        return BoundingBox.copy(this);\n    }\n    /**\n     * Merge my box with given box. Creates a bigger bounding box unless\n     * the given box is contained in this one.\n     */\n    mergeWith(boundingBox) {\n        const that = boundingBox;\n        const new_x = this.x < that.x ? this.x : that.x;\n        const new_y = this.y < that.y ? this.y : that.y;\n        const new_w = Math.max(this.x + this.w, that.x + that.w) - new_x;\n        const new_h = Math.max(this.y + this.h, that.y + that.h) - new_y;\n        this.x = new_x;\n        this.y = new_y;\n        this.w = new_w;\n        this.h = new_h;\n        return this;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n/**\n * BoundingBoxComputation computes metrics for a bounding box by continuously\n * taking canvas path commands.\n *\n * Warning: This class is merely a crutch to get bounding box information without\n * explicit metadata. This is likely to get deprecated following SMuFL support.\n *\n * based on: https://github.com/canvg/canvg/blob/master/src/BoundingBox.ts (MIT License)\n */\nexport class BoundingBoxComputation {\n    constructor() {\n        this.x1 = Number.NaN;\n        this.y1 = Number.NaN;\n        this.x2 = Number.NaN;\n        this.y2 = Number.NaN;\n    }\n    /** Get calculated X1. */\n    getX1() {\n        return this.x1;\n    }\n    /** Get calculated Y1. */\n    getY1() {\n        return this.y1;\n    }\n    /** Get calculated width. */\n    width() {\n        return this.x2 - this.x1;\n    }\n    /** Get calculated height. */\n    height() {\n        return this.y2 - this.y1;\n    }\n    /** Add point to BoundingBox. */\n    addPoint(x, y) {\n        if (isNaN(this.x1) || x < this.x1)\n            this.x1 = x;\n        if (isNaN(this.x2) || x > this.x2)\n            this.x2 = x;\n        if (isNaN(this.y1) || y < this.y1)\n            this.y1 = y;\n        if (isNaN(this.y2) || y > this.y2)\n            this.y2 = y;\n    }\n    /** Add X to BoundingBox. */\n    addX(x) {\n        this.addPoint(x, this.y1);\n    }\n    /** Add Y to BoundingBox. */\n    addY(y) {\n        this.addPoint(this.x1, y);\n    }\n    /** Add quadratic curve to BoundingBox. */\n    addQuadraticCurve(p0x, p0y, p1x, p1y, p2x, p2y) {\n        this.addPoint(p0x, p0y);\n        this.addPoint(p2x, p2y);\n        const p01x = p1x - p0x;\n        const p12x = p2x - p1x;\n        let denom = p01x - p12x;\n        if (denom != 0) {\n            const t = p01x / denom;\n            if (t > 0 && t < 1) {\n                const it = 1 - t;\n                this.addX(it * it * p0x + 2 * it * t * p1x + t * t * p2x);\n            }\n        }\n        const p01y = p1y - p0y;\n        const p12y = p2y - p1y;\n        denom = p01y - p12y;\n        if (denom != 0) {\n            const t = p01y / denom;\n            if (t > 0 && t < 1) {\n                const it = 1 - t;\n                this.addY(it * it * p0y + 2 * it * t * p1y + t * t * p2y);\n            }\n        }\n    }\n    /** Add bezier curve to BoundingBox. */\n    addBezierCurve(p0x, p0y, p1x, p1y, p2x, p2y, p3x, p3y) {\n        // from http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n        const p0 = [p0x, p0y];\n        const p1 = [p1x, p1y];\n        const p2 = [p2x, p2y];\n        const p3 = [p3x, p3y];\n        let i;\n        this.addPoint(p0[0], p0[1]);\n        this.addPoint(p3[0], p3[1]);\n        const f = (t, i) => Math.pow(1 - t, 3) * p0[i] +\n            3 * Math.pow(1 - t, 2) * t * p1[i] +\n            3 * (1 - t) * Math.pow(t, 2) * p2[i] +\n            Math.pow(t, 3) * p3[i];\n        for (i = 0; i <= 1; i++) {\n            const b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n            const a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n            const c = 3 * p1[i] - 3 * p0[i];\n            if (a === 0) {\n                if (b === 0)\n                    continue;\n                const t = -c / b;\n                if (0 < t && t < 1) {\n                    if (i === 0)\n                        this.addX(f(t, i));\n                    if (i === 1)\n                        this.addY(f(t, i));\n                }\n                continue;\n            }\n            const b2ac = Math.pow(b, 2) - 4 * c * a;\n            if (b2ac < 0)\n                continue;\n            const t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n            if (0 < t1 && t1 < 1) {\n                if (i === 0)\n                    this.addX(f(t1, i));\n                if (i === 1)\n                    this.addY(f(t1, i));\n            }\n            const t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n            if (0 < t2 && t2 < 1) {\n                if (i === 0)\n                    this.addX(f(t2, i));\n                if (i === 1)\n                    this.addY(f(t2, i));\n            }\n        }\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { defined } from './util';\nexport var FontWeight;\n(function (FontWeight) {\n    FontWeight[\"NORMAL\"] = \"normal\";\n    FontWeight[\"BOLD\"] = \"bold\";\n})(FontWeight || (FontWeight = {}));\nexport var FontStyle;\n(function (FontStyle) {\n    FontStyle[\"NORMAL\"] = \"normal\";\n    FontStyle[\"ITALIC\"] = \"italic\";\n})(FontStyle || (FontStyle = {}));\n// Internal <span></span> element for parsing CSS font shorthand strings.\nlet fontParser;\nconst Fonts = {};\nexport class Font {\n    /**\n     * Use `Font.load(fontName)` to get a Font object.\n     * Do not call this constructor directly.\n     */\n    constructor(fontName) {\n        this.name = fontName;\n    }\n    /**\n     * @param fontSize a font size to convert. Can be specified as a CSS length string (e.g., '16pt', '1em')\n     * or as a number (the unit is assumed to be 'pt'). See `Font.scaleToPxFrom` for the supported\n     * units (e.g., pt, em, %).\n     * @returns the number of pixels that is equivalent to `fontSize`\n     */\n    static convertSizeToPixelValue(fontSize = Font.SIZE) {\n        var _a;\n        if (typeof fontSize === 'number') {\n            // Assume the numeric fontSize is specified in pt.\n            return fontSize * Font.scaleToPxFrom.pt;\n        }\n        else {\n            const value = parseFloat(fontSize);\n            if (isNaN(value)) {\n                return 0;\n            }\n            const unit = fontSize.replace(/[\\d.\\s]/g, '').toLowerCase(); // Extract the unit by removing all numbers, dots, spaces.\n            const conversionFactor = (_a = Font.scaleToPxFrom[unit]) !== null && _a !== void 0 ? _a : 1;\n            return value * conversionFactor;\n        }\n    }\n    /**\n     * @param fontSize a font size to convert. Can be specified as a CSS length string (e.g., '16pt', '1em')\n     * or as a number (the unit is assumed to be 'pt'). See `Font.scaleToPxFrom` for the supported\n     * units (e.g., pt, em, %).\n     * @returns the number of points that is equivalent to `fontSize`\n     */\n    static convertSizeToPointValue(fontSize = Font.SIZE) {\n        var _a;\n        if (typeof fontSize === 'number') {\n            // Assume the numeric fontSize is specified in pt.\n            return fontSize;\n        }\n        else {\n            const value = parseFloat(fontSize);\n            if (isNaN(value)) {\n                return 0;\n            }\n            const unit = fontSize.replace(/[\\d.\\s]/g, '').toLowerCase(); // Extract the unit by removing all numbers, dots, spaces.\n            const conversionFactor = ((_a = Font.scaleToPxFrom[unit]) !== null && _a !== void 0 ? _a : 1) / Font.scaleToPxFrom.pt;\n            return value * conversionFactor;\n        }\n    }\n    /**\n     * @param f\n     * @param size\n     * @param weight\n     * @param style\n     * @returns the `size` field will include the units (e.g., '12pt', '16px').\n     */\n    static validate(f, size, weight, style) {\n        // If f is a string but all other arguments are undefined, we assume that\n        // f is CSS font shorthand (e.g., 'italic bold 10pt Arial').\n        if (typeof f === 'string' && size === undefined && weight === undefined && style === undefined) {\n            return Font.fromCSSString(f);\n        }\n        let family;\n        if (typeof f === 'object') {\n            // f is a FontInfo object, so we extract its fields.\n            family = f.family;\n            size = f.size;\n            weight = f.weight;\n            style = f.style;\n        }\n        else {\n            // f is a string representing the font family name or undefined.\n            family = f;\n        }\n        family = family !== null && family !== void 0 ? family : Font.SANS_SERIF;\n        size = size !== null && size !== void 0 ? size : Font.SIZE + 'pt';\n        weight = weight !== null && weight !== void 0 ? weight : FontWeight.NORMAL;\n        style = style !== null && style !== void 0 ? style : FontStyle.NORMAL;\n        if (weight === '') {\n            weight = FontWeight.NORMAL;\n        }\n        if (style === '') {\n            style = FontStyle.NORMAL;\n        }\n        // If size is a number, we assume the unit is `pt`.\n        if (typeof size === 'number') {\n            size = `${size}pt`;\n        }\n        // If weight is a number (e.g., 900), turn it into a string representation of that number.\n        if (typeof weight === 'number') {\n            weight = weight.toString();\n        }\n        // At this point, `family`, `size`, `weight`, and `style` are all strings.\n        return { family, size, weight, style };\n    }\n    /**\n     * @param cssFontShorthand a string formatted as CSS font shorthand (e.g., 'italic bold 15pt Arial').\n     */\n    static fromCSSString(cssFontShorthand) {\n        // Let the browser parse this string for us.\n        // First, create a span element.\n        // Then, set its style.font and extract it back out.\n        if (!fontParser) {\n            fontParser = document.createElement('span');\n        }\n        fontParser.style.font = cssFontShorthand;\n        const { fontFamily, fontSize, fontWeight, fontStyle } = fontParser.style;\n        return { family: fontFamily, size: fontSize, weight: fontWeight, style: fontStyle };\n    }\n    /**\n     * @returns a CSS font shorthand string of the form `italic bold 16pt Arial`.\n     */\n    static toCSSString(fontInfo) {\n        var _a;\n        if (!fontInfo) {\n            return '';\n        }\n        let style;\n        const st = fontInfo.style;\n        if (st === FontStyle.NORMAL || st === '' || st === undefined) {\n            style = ''; // no space! Omit the style section.\n        }\n        else {\n            style = st.trim() + ' ';\n        }\n        let weight;\n        const wt = fontInfo.weight;\n        if (wt === FontWeight.NORMAL || wt === '' || wt === undefined) {\n            weight = ''; // no space! Omit the weight section.\n        }\n        else if (typeof wt === 'number') {\n            weight = wt + ' ';\n        }\n        else {\n            weight = wt.trim() + ' ';\n        }\n        let size;\n        const sz = fontInfo.size;\n        if (sz === undefined) {\n            size = Font.SIZE + 'pt ';\n        }\n        else if (typeof sz === 'number') {\n            size = sz + 'pt ';\n        }\n        else {\n            // size is already a string.\n            size = sz.trim() + ' ';\n        }\n        const family = (_a = fontInfo.family) !== null && _a !== void 0 ? _a : Font.SANS_SERIF;\n        return `${style}${weight}${size}${family}`;\n    }\n    /**\n     * @param fontSize a number representing a font size, or a string font size with units.\n     * @param scaleFactor multiply the size by this factor.\n     * @returns size * scaleFactor (e.g., 16pt * 3 = 48pt, 8px * 0.5 = 4px, 24 * 2 = 48).\n     * If the fontSize argument was a number, the return value will be a number.\n     * If the fontSize argument was a string, the return value will be a string.\n     */\n    static scaleSize(fontSize, scaleFactor) {\n        if (typeof fontSize === 'number') {\n            return (fontSize * scaleFactor);\n        }\n        else {\n            const value = parseFloat(fontSize);\n            const unit = fontSize.replace(/[\\d.\\s]/g, ''); // Remove all numbers, dots, spaces.\n            return `${value * scaleFactor}${unit}`;\n        }\n    }\n    /**\n     * @param weight a string (e.g., 'bold') or a number (e.g., 600 / semi-bold in the OpenType spec).\n     * @returns true if the font weight indicates bold.\n     */\n    static isBold(weight) {\n        if (!weight) {\n            return false;\n        }\n        else if (typeof weight === 'number') {\n            return weight >= 600;\n        }\n        else {\n            // a string can be 'bold' or '700'\n            const parsedWeight = parseInt(weight, 10);\n            if (isNaN(parsedWeight)) {\n                return weight.toLowerCase() === 'bold';\n            }\n            else {\n                return parsedWeight >= 600;\n            }\n        }\n    }\n    /**\n     * @param style\n     * @returns true if the font style indicates 'italic'.\n     */\n    static isItalic(style) {\n        if (!style) {\n            return false;\n        }\n        else {\n            return style.toLowerCase() === FontStyle.ITALIC;\n        }\n    }\n    /**\n     * @param fontName\n     * @param woffURL The absolute or relative URL to the woff file.\n     * @param includeWoff2 If true, we assume that a woff2 file is in\n     * the same folder as the woff file, and will append a `2` to the url.\n     */\n    // Support distributions of the typescript compiler that do not yet include the FontFace API declarations.\n    // eslint-disable-next-line\n    // @ts-ignore\n    static loadWebFont(fontName, woffURL, includeWoff2 = true) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const woff2URL = includeWoff2 ? `url(${woffURL}2) format('woff2'), ` : '';\n            const woff1URL = `url(${woffURL}) format('woff')`;\n            const woffURLs = woff2URL + woff1URL;\n            // eslint-disable-next-line\n            // @ts-ignore\n            const fontFace = new FontFace(fontName, woffURLs);\n            yield fontFace.load();\n            // eslint-disable-next-line\n            // @ts-ignore\n            document.fonts.add(fontFace);\n            return fontFace;\n        });\n    }\n    /**\n     * Load the web fonts that are used by ChordSymbol. For example, `flow.html` calls:\n     *   `await Vex.Flow.Font.loadWebFonts();`\n     * Alternatively, you may load web fonts with a stylesheet link (e.g., from Google Fonts),\n     * and a @font-face { font-family: ... } rule in your CSS.\n     * If you do not load either of these fonts, ChordSymbol will fall back to Times or Arial,\n     * depending on the current music engraving font.\n     *\n     * You can customize `Font.WEB_FONT_HOST` and `Font.WEB_FONT_FILES` to load different fonts\n     * for your app.\n     */\n    static loadWebFonts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const host = Font.WEB_FONT_HOST;\n            const files = Font.WEB_FONT_FILES;\n            for (const fontName in files) {\n                const fontPath = files[fontName];\n                Font.loadWebFont(fontName, host + fontPath);\n            }\n        });\n    }\n    /**\n     * @param fontName\n     * @param data optionally set the Font object's `.data` property.\n     *   This is usually done when setting up a font for the first time.\n     * @param metrics optionally set the Font object's `.metrics` property.\n     *   This is usually done when setting up a font for the first time.\n     * @returns a Font object with the given `fontName`.\n     *   Reuse an existing Font object if a matching one is found.\n     */\n    static load(fontName, data, metrics) {\n        let font = Fonts[fontName];\n        if (!font) {\n            font = new Font(fontName);\n            Fonts[fontName] = font;\n        }\n        if (data) {\n            font.setData(data);\n        }\n        if (metrics) {\n            font.setMetrics(metrics);\n        }\n        return font;\n    }\n    getName() {\n        return this.name;\n    }\n    getData() {\n        return defined(this.data, 'FontError', 'Missing font data');\n    }\n    getMetrics() {\n        return defined(this.metrics, 'FontError', 'Missing metrics');\n    }\n    setData(data) {\n        this.data = data;\n    }\n    setMetrics(metrics) {\n        this.metrics = metrics;\n    }\n    hasData() {\n        return this.data !== undefined;\n    }\n    getResolution() {\n        return this.getData().resolution;\n    }\n    getGlyphs() {\n        return this.getData().glyphs;\n    }\n    /**\n     * Use the provided key to look up a value in this font's metrics file (e.g., bravura_metrics.ts, petaluma_metrics.ts).\n     * @param key is a string separated by periods (e.g., stave.endPaddingMax, clef.lineCount.'5'.shiftY).\n     * @param defaultValue is returned if the lookup fails.\n     * @returns the retrieved value (or `defaultValue` if the lookup fails).\n     */\n    // eslint-disable-next-line\n    lookupMetric(key, defaultValue) {\n        const keyParts = key.split('.');\n        // Start with the top level font metrics object, and keep looking deeper into the object (via each part of the period-delimited key).\n        let currObj = this.getMetrics();\n        for (let i = 0; i < keyParts.length; i++) {\n            const keyPart = keyParts[i];\n            const value = currObj[keyPart];\n            if (value === undefined) {\n                // If the key lookup fails, we fall back to the defaultValue.\n                return defaultValue;\n            }\n            // The most recent lookup succeeded, so we drill deeper into the object.\n            currObj = value;\n        }\n        // After checking every part of the key (i.e., the loop completed), return the most recently retrieved value.\n        return currObj;\n    }\n    /** For debugging. */\n    toString() {\n        return '[' + this.name + ' Font]';\n    }\n}\n//////////////////////////////////////////////////////////////////////////////////////////////////\n// STATIC MEMBERS\n/** Default sans-serif font family. */\nFont.SANS_SERIF = 'Arial, sans-serif';\n/** Default serif font family. */\nFont.SERIF = 'Times New Roman, serif';\n/** Default font size in `pt`. */\nFont.SIZE = 10;\n// CSS Font Sizes: 36pt == 48px == 3em == 300% == 0.5in\n/** Given a length (for units: pt, px, em, %, in, mm, cm) what is the scale factor to convert it to px? */\nFont.scaleToPxFrom = {\n    pt: 4 / 3,\n    px: 1,\n    em: 16,\n    '%': 4 / 25,\n    in: 96,\n    mm: 96 / 25.4,\n    cm: 96 / 2.54,\n};\n/**\n * Customize this field to specify a different CDN for delivering web fonts.\n * Alternative: https://cdn.jsdelivr.net/npm/vexflow-fonts@1.0.3/\n * Or you can use your own host.\n */\nFont.WEB_FONT_HOST = 'https://unpkg.com/vexflow-fonts@1.0.3/';\n/**\n * These font files will be loaded from the CDN specified by `Font.WEB_FONT_HOST` when\n * `await Font.loadWebFonts()` is called. Customize this field to specify a different\n * set of fonts to load. See: `Font.loadWebFonts()`.\n */\nFont.WEB_FONT_FILES = {\n    'Roboto Slab': 'robotoslab/RobotoSlab-Medium_2.001.woff',\n    PetalumaScript: 'petaluma/PetalumaScript_1.10_FS.woff',\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n//\n// ## Description\n//\n// This file implements a registry for VexFlow elements. It allows users\n// to track, query, and manage some subset of generated elements, and\n// dynamically get and set attributes.\n//\n// There are two ways to register with a registry:\n//\n// 1) Explicitly call `registry.register(elem:Element, id?:string)`, or,\n// 2) Call `Registry.enableDefaultRegistry(registry)` when ready, and all future\n//    elements will automatically register with it.\n//\n// Once an element is registered, selected attributes are tracked and indexed by\n// the registry. This allows fast look up of elements by attributes like id, type,\n// and class.\nimport { RuntimeError } from './util';\n// Indexes are represented as maps of maps of maps. This allows\n// for both multi-labeling (e.g., an element can have multiple classes)\n// and efficient lookup.\nclass Index {\n    constructor() {\n        this.id = {};\n        this.type = {};\n        this.class = {};\n    }\n}\nexport class Registry {\n    constructor() {\n        this.index = new Index();\n    }\n    static getDefaultRegistry() {\n        return Registry.defaultRegistry;\n    }\n    // If you call `enableDefaultRegistry`, any new elements will auto-register with\n    // the provided registry as soon as they're constructed.\n    static enableDefaultRegistry(registry) {\n        Registry.defaultRegistry = registry;\n    }\n    static disableDefaultRegistry() {\n        Registry.defaultRegistry = undefined;\n    }\n    clear() {\n        this.index = new Index();\n        return this;\n    }\n    setIndexValue(name, value, id, elem) {\n        const index = this.index;\n        if (!index[name][value]) {\n            index[name][value] = {};\n        }\n        index[name][value][id] = elem;\n    }\n    // Updates the indexes for element 'id'. If an element's attribute changes\n    // from A -> B, make sure to remove the element from A.\n    updateIndex({ id, name, value, oldValue }) {\n        const elem = this.getElementById(id);\n        if (oldValue !== undefined && this.index[name][oldValue]) {\n            delete this.index[name][oldValue][id];\n        }\n        if (value && elem) {\n            this.setIndexValue(name, value, elem.getAttribute('id'), elem);\n        }\n    }\n    /**\n     * Register element `elem` with this registry.\n     * This adds the element to its index and watches it for attribute changes.\n     * @param elem\n     * @param id\n     * @returns this\n     */\n    register(elem, id) {\n        id = id || elem.getAttribute('id');\n        if (!id) {\n            throw new RuntimeError(\"Can't add element without `id` attribute to registry\");\n        }\n        // Manually add id to index, then update other indexes.\n        elem.setAttribute('id', id);\n        this.setIndexValue('id', id, id, elem);\n        this.updateIndex({ id, name: 'type', value: elem.getAttribute('type'), oldValue: undefined });\n        elem.onRegister(this);\n        return this;\n    }\n    getElementById(id) {\n        var _a, _b;\n        return (_b = (_a = this.index.id) === null || _a === void 0 ? void 0 : _a[id]) === null || _b === void 0 ? void 0 : _b[id]; // return undefined if the id is not found.\n    }\n    getElementsByAttribute(attribute, value) {\n        const index_attr = this.index[attribute];\n        if (index_attr) {\n            const index_attr_val = index_attr[value];\n            if (index_attr_val) {\n                const keys = Object.keys(index_attr_val);\n                return keys.map((k) => index_attr_val[k]);\n            }\n        }\n        return [];\n    }\n    getElementsByType(type) {\n        return this.getElementsByAttribute('type', type);\n    }\n    getElementsByClass(className) {\n        return this.getElementsByAttribute('class', className);\n    }\n    // This is called by the element when an attribute value changes. If an indexed\n    // attribute changes, then update the local index.\n    onUpdate(info) {\n        const allowedNames = ['id', 'type', 'class'];\n        if (allowedNames.includes(info.name)) {\n            this.updateIndex(info);\n        }\n        return this;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n// MIT License\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Registry } from './registry';\nimport { Category } from './typeguard';\nimport { defined } from './util';\n/**\n * Element implements a generic base class for VexFlow, with implementations\n * of general functions and properties that can be inherited by all VexFlow elements.\n */\nexport class Element {\n    constructor() {\n        var _a;\n        this.children = [];\n        this.attrs = {\n            id: Element.newID(),\n            el: undefined,\n            type: this.getCategory(),\n            classes: {},\n        };\n        this.rendered = false;\n        // If a default registry exist, then register with it right away.\n        (_a = Registry.getDefaultRegistry()) === null || _a === void 0 ? void 0 : _a.register(this);\n    }\n    static get CATEGORY() {\n        return Category.Element;\n    }\n    static newID() {\n        return `auto${Element.ID++}`;\n    }\n    addChildElement(child) {\n        this.children.push(child);\n        return this;\n    }\n    getCategory() {\n        return this.constructor.CATEGORY;\n    }\n    /**\n     * Set the element style used to render.\n     *\n     * Example:\n     * ```typescript\n     * element.setStyle({ fillStyle: 'red', strokeStyle: 'red' });\n     * element.draw();\n     * ```\n     * Note: If the element draws additional sub-elements (ie.: Modifiers in a Stave),\n     * the style can be applied to all of them by means of the context:\n     * ```typescript\n     * element.setStyle({ fillStyle: 'red', strokeStyle: 'red' });\n     * element.getContext().setFillStyle('red');\n     * element.getContext().setStrokeStyle('red');\n     * element.draw();\n     * ```\n     * or using drawWithStyle:\n     * ```typescript\n     * element.setStyle({ fillStyle: 'red', strokeStyle: 'red' });\n     * element.drawWithStyle();\n     * ```\n     */\n    setStyle(style) {\n        this.style = style;\n        return this;\n    }\n    /** Set the element & associated children style used for rendering. */\n    setGroupStyle(style) {\n        this.style = style;\n        this.children.forEach((child) => child.setGroupStyle(style));\n        return this;\n    }\n    /** Get the element style used for rendering. */\n    getStyle() {\n        return this.style;\n    }\n    /** Apply the element style to `context`. */\n    applyStyle(context = this.context, style = this.getStyle()) {\n        if (!style)\n            return this;\n        if (!context)\n            return this;\n        context.save();\n        if (style.shadowColor)\n            context.setShadowColor(style.shadowColor);\n        if (style.shadowBlur)\n            context.setShadowBlur(style.shadowBlur);\n        if (style.fillStyle)\n            context.setFillStyle(style.fillStyle);\n        if (style.strokeStyle)\n            context.setStrokeStyle(style.strokeStyle);\n        if (style.lineWidth)\n            context.setLineWidth(style.lineWidth);\n        return this;\n    }\n    /** Restore the style of `context`. */\n    restoreStyle(context = this.context, style = this.getStyle()) {\n        if (!style)\n            return this;\n        if (!context)\n            return this;\n        context.restore();\n        return this;\n    }\n    /**\n     * Draw the element and all its sub-elements (ie.: Modifiers in a Stave)\n     * with the element style.\n     */\n    drawWithStyle() {\n        this.checkContext();\n        this.applyStyle();\n        this.draw();\n        this.restoreStyle();\n    }\n    /** Check if it has a class label (An element can have multiple class labels).  */\n    hasClass(className) {\n        return this.attrs.classes[className] === true;\n    }\n    /** Add a class label (An element can have multiple class labels).  */\n    addClass(className) {\n        var _a;\n        this.attrs.classes[className] = true;\n        (_a = this.registry) === null || _a === void 0 ? void 0 : _a.onUpdate({\n            id: this.attrs.id,\n            name: 'class',\n            value: className,\n            oldValue: undefined,\n        });\n        return this;\n    }\n    /** Remove a class label (An element can have multiple class labels).  */\n    removeClass(className) {\n        var _a;\n        delete this.attrs.classes[className];\n        (_a = this.registry) === null || _a === void 0 ? void 0 : _a.onUpdate({\n            id: this.attrs.id,\n            name: 'class',\n            value: undefined,\n            oldValue: className,\n        });\n        return this;\n    }\n    /** Call back from registry after the element is registered. */\n    onRegister(registry) {\n        this.registry = registry;\n        return this;\n    }\n    /** Return the rendered status. */\n    isRendered() {\n        return this.rendered;\n    }\n    /** Set the rendered status. */\n    setRendered(rendered = true) {\n        this.rendered = rendered;\n        return this;\n    }\n    /** Return the element attributes. */\n    getAttributes() {\n        return this.attrs;\n    }\n    /** Return an attribute. */\n    // eslint-disable-next-line\n    getAttribute(name) {\n        return this.attrs[name];\n    }\n    /** Set an attribute. */\n    // eslint-disable-next-line\n    setAttribute(name, value) {\n        var _a;\n        const oldID = this.attrs.id;\n        const oldValue = this.attrs[name];\n        this.attrs[name] = value;\n        // Register with old id to support id changes.\n        (_a = this.registry) === null || _a === void 0 ? void 0 : _a.onUpdate({ id: oldID, name, value, oldValue });\n        return this;\n    }\n    /** Get the boundingBox. */\n    getBoundingBox() {\n        return this.boundingBox;\n    }\n    /** Return the context. */\n    getContext() {\n        return this.context;\n    }\n    /** Set the context. */\n    setContext(context) {\n        this.context = context;\n        return this;\n    }\n    /** Validate and return the context. */\n    checkContext() {\n        return defined(this.context, 'NoContext', 'No rendering context attached to instance.');\n    }\n    //////////////////////////////////////////////////////////////////////////////////////////////////\n    // Font Handling\n    /**\n     * Provide a CSS compatible font string (e.g., 'bold 16px Arial').\n     */\n    set font(f) {\n        this.setFont(f);\n    }\n    /** Returns the CSS compatible font string. */\n    get font() {\n        return Font.toCSSString(this.textFont);\n    }\n    /**\n     * Set the element's font family, size, weight, style (e.g., `Arial`, `10pt`, `bold`, `italic`).\n     * @param font is 1) a `FontInfo` object or\n     *                2) a string formatted as CSS font shorthand (e.g., 'bold 10pt Arial') or\n     *                3) a string representing the font family (at least one of `size`, `weight`, or `style` must also be provided).\n     * @param size a string specifying the font size and unit (e.g., '16pt'), or a number (the unit is assumed to be 'pt').\n     * @param weight is a string (e.g., 'bold', 'normal') or a number (100, 200, ... 900).\n     * @param style is a string (e.g., 'italic', 'normal').\n     * If no arguments are provided, then the font is set to the default font.\n     * Each Element subclass may specify its own default by overriding the static `TEXT_FONT` property.\n     */\n    setFont(font, size, weight, style) {\n        // Allow subclasses to override `TEXT_FONT`.\n        const defaultTextFont = this.constructor.TEXT_FONT;\n        const fontIsObject = typeof font === 'object';\n        const fontIsString = typeof font === 'string';\n        const fontIsUndefined = font === undefined;\n        const sizeWeightStyleAreUndefined = size === undefined && weight === undefined && style === undefined;\n        if (fontIsObject) {\n            // `font` is case 1) a FontInfo object\n            this.textFont = Object.assign(Object.assign({}, defaultTextFont), font);\n        }\n        else if (fontIsString && sizeWeightStyleAreUndefined) {\n            // `font` is case 2) CSS font shorthand.\n            this.textFont = Font.fromCSSString(font);\n        }\n        else if (fontIsUndefined && sizeWeightStyleAreUndefined) {\n            // All arguments are undefined. Do not check for `arguments.length === 0`,\n            // which fails on the edge case: `setFont(undefined)`.\n            // TODO: See if we can remove this case entirely without introducing a visual diff.\n            // The else case below seems like it should be equivalent to this case.\n            this.textFont = Object.assign({}, defaultTextFont);\n        }\n        else {\n            // `font` is case 3) a font family string (e.g., 'Times New Roman').\n            // The other parameters represent the size, weight, and style.\n            // It is okay for `font` to be undefined while one or more of the other arguments is provided.\n            // Following CSS conventions, unspecified params are reset to the default.\n            this.textFont = Font.validate(font !== null && font !== void 0 ? font : defaultTextFont.family, size !== null && size !== void 0 ? size : defaultTextFont.size, weight !== null && weight !== void 0 ? weight : defaultTextFont.weight, style !== null && style !== void 0 ? style : defaultTextFont.style);\n        }\n        return this;\n    }\n    getFont() {\n        if (!this.textFont) {\n            this.resetFont();\n        }\n        return Font.toCSSString(this.textFont);\n    }\n    /**\n     * Reset the text font to the style indicated by the static `TEXT_FONT` property.\n     * Subclasses can call this to initialize `textFont` for the first time.\n     */\n    resetFont() {\n        this.setFont();\n    }\n    /** Return a copy of the current FontInfo object. */\n    get fontInfo() {\n        if (!this.textFont) {\n            this.resetFont();\n        }\n        // We can cast to Required<FontInfo> here, because\n        // we just called resetFont() above to ensure this.textFont is set.\n        return Object.assign({}, this.textFont);\n    }\n    set fontInfo(fontInfo) {\n        this.setFont(fontInfo);\n    }\n    /** Change the font size, while keeping everything else the same. */\n    setFontSize(size) {\n        const fontInfo = this.fontInfo;\n        this.setFont(fontInfo.family, size, fontInfo.weight, fontInfo.style);\n        return this;\n    }\n    /**\n     * @returns a CSS font-size string (e.g., '18pt', '12px', '1em').\n     * See Element.fontSizeInPixels or Element.fontSizeInPoints if you need to get a number for calculation purposes.\n     */\n    getFontSize() {\n        return this.fontSize;\n    }\n    /**\n     * The size is 1) a string of the form '10pt' or '16px', compatible with the CSS font-size property.\n     *          or 2) a number, which is interpreted as a point size (i.e. 12 == '12pt').\n     */\n    set fontSize(size) {\n        this.setFontSize(size);\n    }\n    /**\n     * @returns a CSS font-size string (e.g., '18pt', '12px', '1em').\n     */\n    get fontSize() {\n        let size = this.fontInfo.size;\n        if (typeof size === 'number') {\n            size = `${size}pt`;\n        }\n        return size;\n    }\n    /**\n     * @returns the font size in `pt`.\n     */\n    get fontSizeInPoints() {\n        return Font.convertSizeToPointValue(this.fontSize);\n    }\n    /**\n     * @returns the font size in `px`.\n     */\n    get fontSizeInPixels() {\n        return Font.convertSizeToPixelValue(this.fontSize);\n    }\n    /**\n     * @returns a CSS font-style string (e.g., 'italic').\n     */\n    get fontStyle() {\n        return this.fontInfo.style;\n    }\n    set fontStyle(style) {\n        const fontInfo = this.fontInfo;\n        this.setFont(fontInfo.family, fontInfo.size, fontInfo.weight, style);\n    }\n    /**\n     * @returns a CSS font-weight string (e.g., 'bold').\n     * As in CSS, font-weight is always returned as a string, even if it was set as a number.\n     */\n    get fontWeight() {\n        return this.fontInfo.weight + '';\n    }\n    set fontWeight(weight) {\n        const fontInfo = this.fontInfo;\n        this.setFont(fontInfo.family, fontInfo.size, weight, fontInfo.style);\n    }\n}\nElement.ID = 1000;\n/**\n * Default font for text. This is not related to music engraving. Instead, see `Flow.setMusicFont(...fontNames)`\n * to customize the font for musical symbols placed on the score.\n */\nElement.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: Font.SIZE,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.NORMAL,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\nimport { Fraction } from './fraction';\nimport { Glyph } from './glyph';\nimport { RuntimeError } from './util';\nconst RESOLUTION = 16384;\n/**\n * Map duration numbers to 'ticks', the unit of duration used throughout VexFlow.\n * For example, a quarter note is 4, so it maps to RESOLUTION / 4 = 4096 ticks.\n */\nconst durations = {\n    '1/2': RESOLUTION * 2,\n    1: RESOLUTION / 1,\n    2: RESOLUTION / 2,\n    4: RESOLUTION / 4,\n    8: RESOLUTION / 8,\n    16: RESOLUTION / 16,\n    32: RESOLUTION / 32,\n    64: RESOLUTION / 64,\n    128: RESOLUTION / 128,\n    256: RESOLUTION / 256,\n};\nconst durationAliases = {\n    w: '1',\n    h: '2',\n    q: '4',\n    // This is the default duration used to render bars (BarNote). Bars no longer\n    // consume ticks, so this should be a no-op.\n    // TODO(0xfe): This needs to be cleaned up.\n    b: '256',\n};\nconst keySignatures = {\n    C: { num: 0 },\n    Am: { num: 0 },\n    F: { acc: 'b', num: 1 },\n    Dm: { acc: 'b', num: 1 },\n    Bb: { acc: 'b', num: 2 },\n    Gm: { acc: 'b', num: 2 },\n    Eb: { acc: 'b', num: 3 },\n    Cm: { acc: 'b', num: 3 },\n    Ab: { acc: 'b', num: 4 },\n    Fm: { acc: 'b', num: 4 },\n    Db: { acc: 'b', num: 5 },\n    Bbm: { acc: 'b', num: 5 },\n    Gb: { acc: 'b', num: 6 },\n    Ebm: { acc: 'b', num: 6 },\n    Cb: { acc: 'b', num: 7 },\n    Abm: { acc: 'b', num: 7 },\n    G: { acc: '#', num: 1 },\n    Em: { acc: '#', num: 1 },\n    D: { acc: '#', num: 2 },\n    Bm: { acc: '#', num: 2 },\n    A: { acc: '#', num: 3 },\n    'F#m': { acc: '#', num: 3 },\n    E: { acc: '#', num: 4 },\n    'C#m': { acc: '#', num: 4 },\n    B: { acc: '#', num: 5 },\n    'G#m': { acc: '#', num: 5 },\n    'F#': { acc: '#', num: 6 },\n    'D#m': { acc: '#', num: 6 },\n    'C#': { acc: '#', num: 7 },\n    'A#m': { acc: '#', num: 7 },\n};\nconst clefs = {\n    treble: { line_shift: 0 },\n    bass: { line_shift: 6 },\n    tenor: { line_shift: 4 },\n    alto: { line_shift: 3 },\n    soprano: { line_shift: 1 },\n    percussion: { line_shift: 0 },\n    'mezzo-soprano': { line_shift: 2 },\n    'baritone-c': { line_shift: 5 },\n    'baritone-f': { line_shift: 5 },\n    subbass: { line_shift: 7 },\n    french: { line_shift: -1 },\n};\nconst notesInfo = {\n    C: { index: 0, int_val: 0 },\n    CN: { index: 0, int_val: 0, accidental: 'n' },\n    'C#': { index: 0, int_val: 1, accidental: '#' },\n    'C##': { index: 0, int_val: 2, accidental: '##' },\n    CB: { index: 0, int_val: 11, accidental: 'b' },\n    CBB: { index: 0, int_val: 10, accidental: 'bb' },\n    D: { index: 1, int_val: 2 },\n    DN: { index: 1, int_val: 2, accidental: 'n' },\n    'D#': { index: 1, int_val: 3, accidental: '#' },\n    'D##': { index: 1, int_val: 4, accidental: '##' },\n    DB: { index: 1, int_val: 1, accidental: 'b' },\n    DBB: { index: 1, int_val: 0, accidental: 'bb' },\n    E: { index: 2, int_val: 4 },\n    EN: { index: 2, int_val: 4, accidental: 'n' },\n    'E#': { index: 2, int_val: 5, accidental: '#' },\n    'E##': { index: 2, int_val: 6, accidental: '##' },\n    EB: { index: 2, int_val: 3, accidental: 'b' },\n    EBB: { index: 2, int_val: 2, accidental: 'bb' },\n    F: { index: 3, int_val: 5 },\n    FN: { index: 3, int_val: 5, accidental: 'n' },\n    'F#': { index: 3, int_val: 6, accidental: '#' },\n    'F##': { index: 3, int_val: 7, accidental: '##' },\n    FB: { index: 3, int_val: 4, accidental: 'b' },\n    FBB: { index: 3, int_val: 3, accidental: 'bb' },\n    G: { index: 4, int_val: 7 },\n    GN: { index: 4, int_val: 7, accidental: 'n' },\n    'G#': { index: 4, int_val: 8, accidental: '#' },\n    'G##': { index: 4, int_val: 9, accidental: '##' },\n    GB: { index: 4, int_val: 6, accidental: 'b' },\n    GBB: { index: 4, int_val: 5, accidental: 'bb' },\n    A: { index: 5, int_val: 9 },\n    AN: { index: 5, int_val: 9, accidental: 'n' },\n    'A#': { index: 5, int_val: 10, accidental: '#' },\n    'A##': { index: 5, int_val: 11, accidental: '##' },\n    AB: { index: 5, int_val: 8, accidental: 'b' },\n    ABB: { index: 5, int_val: 7, accidental: 'bb' },\n    B: { index: 6, int_val: 11 },\n    BN: { index: 6, int_val: 11, accidental: 'n' },\n    'B#': { index: 6, int_val: 12, accidental: '#' },\n    'B##': { index: 6, int_val: 13, accidental: '##' },\n    BB: { index: 6, int_val: 10, accidental: 'b' },\n    BBB: { index: 6, int_val: 9, accidental: 'bb' },\n    R: { index: 6, rest: true },\n    X: {\n        index: 6,\n        accidental: '',\n        octave: 4,\n        code: 'noteheadXBlack',\n        shift_right: 5.5,\n    },\n};\nconst validNoteTypes = {\n    n: { name: 'note' },\n    r: { name: 'rest' },\n    h: { name: 'harmonic' },\n    m: { name: 'muted' },\n    s: { name: 'slash' },\n    g: { name: 'ghost' },\n    d: { name: 'diamond' },\n    x: { name: 'x' },\n    ci: { name: 'circled' },\n    cx: { name: 'circle x' },\n    sf: { name: 'slashed' },\n    sb: { name: 'slashed backward' },\n    sq: { name: 'square' },\n    tu: { name: 'triangle up' },\n    td: { name: 'triangle down' },\n};\nconst accidentals = {\n    '#': { code: 'accidentalSharp', parenRightPaddingAdjustment: -1 },\n    '##': { code: 'accidentalDoubleSharp', parenRightPaddingAdjustment: -1 },\n    b: { code: 'accidentalFlat', parenRightPaddingAdjustment: -2 },\n    bb: { code: 'accidentalDoubleFlat', parenRightPaddingAdjustment: -2 },\n    n: { code: 'accidentalNatural', parenRightPaddingAdjustment: -1 },\n    '{': { code: 'accidentalParensLeft', parenRightPaddingAdjustment: -1 },\n    '}': { code: 'accidentalParensRight', parenRightPaddingAdjustment: -1 },\n    db: { code: 'accidentalThreeQuarterTonesFlatZimmermann', parenRightPaddingAdjustment: -1 },\n    d: { code: 'accidentalQuarterToneFlatStein', parenRightPaddingAdjustment: 0 },\n    '++': { code: 'accidentalThreeQuarterTonesSharpStein', parenRightPaddingAdjustment: -1 },\n    '+': { code: 'accidentalQuarterToneSharpStein', parenRightPaddingAdjustment: -1 },\n    '+-': { code: 'accidentalKucukMucennebSharp', parenRightPaddingAdjustment: -1 },\n    bs: { code: 'accidentalBakiyeFlat', parenRightPaddingAdjustment: -1 },\n    bss: { code: 'accidentalBuyukMucennebFlat', parenRightPaddingAdjustment: -1 },\n    o: { code: 'accidentalSori', parenRightPaddingAdjustment: -1 },\n    k: { code: 'accidentalKoron', parenRightPaddingAdjustment: -1 },\n    bbs: { code: 'vexAccidentalMicrotonal1', parenRightPaddingAdjustment: -1 },\n    '++-': { code: 'vexAccidentalMicrotonal2', parenRightPaddingAdjustment: -1 },\n    ashs: { code: 'vexAccidentalMicrotonal3', parenRightPaddingAdjustment: -1 },\n    afhf: { code: 'vexAccidentalMicrotonal4', parenRightPaddingAdjustment: -1 },\n    accSagittal5v7KleismaUp: { code: 'accSagittal5v7KleismaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v7KleismaDown: { code: 'accSagittal5v7KleismaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5CommaUp: { code: 'accSagittal5CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5CommaDown: { code: 'accSagittal5CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal7CommaUp: { code: 'accSagittal7CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal7CommaDown: { code: 'accSagittal7CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal25SmallDiesisUp: { code: 'accSagittal25SmallDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal25SmallDiesisDown: { code: 'accSagittal25SmallDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal35MediumDiesisUp: { code: 'accSagittal35MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal35MediumDiesisDown: { code: 'accSagittal35MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal11MediumDiesisUp: { code: 'accSagittal11MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal11MediumDiesisDown: { code: 'accSagittal11MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal11LargeDiesisUp: { code: 'accSagittal11LargeDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal11LargeDiesisDown: { code: 'accSagittal11LargeDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal35LargeDiesisUp: { code: 'accSagittal35LargeDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal35LargeDiesisDown: { code: 'accSagittal35LargeDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp25SDown: { code: 'accSagittalSharp25SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat25SUp: { code: 'accSagittalFlat25SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7CDown: { code: 'accSagittalSharp7CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7CUp: { code: 'accSagittalFlat7CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5CDown: { code: 'accSagittalSharp5CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5CUp: { code: 'accSagittalFlat5CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v7kDown: { code: 'accSagittalSharp5v7kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v7kUp: { code: 'accSagittalFlat5v7kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp: { code: 'accSagittalSharp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat: { code: 'accSagittalFlat', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v7kUp: { code: 'accSagittalSharp5v7kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v7kDown: { code: 'accSagittalFlat5v7kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5CUp: { code: 'accSagittalSharp5CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5CDown: { code: 'accSagittalFlat5CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7CUp: { code: 'accSagittalSharp7CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7CDown: { code: 'accSagittalFlat7CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp25SUp: { code: 'accSagittalSharp25SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat25SDown: { code: 'accSagittalFlat25SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp35MUp: { code: 'accSagittalSharp35MUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat35MDown: { code: 'accSagittalFlat35MDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp11MUp: { code: 'accSagittalSharp11MUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat11MDown: { code: 'accSagittalFlat11MDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp11LUp: { code: 'accSagittalSharp11LUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat11LDown: { code: 'accSagittalFlat11LDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp35LUp: { code: 'accSagittalSharp35LUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat35LDown: { code: 'accSagittalFlat35LDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp25SDown: { code: 'accSagittalDoubleSharp25SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat25SUp: { code: 'accSagittalDoubleFlat25SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp7CDown: { code: 'accSagittalDoubleSharp7CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat7CUp: { code: 'accSagittalDoubleFlat7CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp5CDown: { code: 'accSagittalDoubleSharp5CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat5CUp: { code: 'accSagittalDoubleFlat5CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp5v7kDown: { code: 'accSagittalDoubleSharp5v7kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat5v7kUp: { code: 'accSagittalDoubleFlat5v7kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp: { code: 'accSagittalDoubleSharp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat: { code: 'accSagittalDoubleFlat', parenRightPaddingAdjustment: -1 },\n    accSagittal7v11KleismaUp: { code: 'accSagittal7v11KleismaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal7v11KleismaDown: { code: 'accSagittal7v11KleismaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal17CommaUp: { code: 'accSagittal17CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal17CommaDown: { code: 'accSagittal17CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal55CommaUp: { code: 'accSagittal55CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal55CommaDown: { code: 'accSagittal55CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal7v11CommaUp: { code: 'accSagittal7v11CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal7v11CommaDown: { code: 'accSagittal7v11CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5v11SmallDiesisUp: { code: 'accSagittal5v11SmallDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v11SmallDiesisDown: { code: 'accSagittal5v11SmallDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v11SDown: { code: 'accSagittalSharp5v11SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v11SUp: { code: 'accSagittalFlat5v11SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7v11CDown: { code: 'accSagittalSharp7v11CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7v11CUp: { code: 'accSagittalFlat7v11CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp55CDown: { code: 'accSagittalSharp55CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat55CUp: { code: 'accSagittalFlat55CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp17CDown: { code: 'accSagittalSharp17CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat17CUp: { code: 'accSagittalFlat17CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7v11kDown: { code: 'accSagittalSharp7v11kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7v11kUp: { code: 'accSagittalFlat7v11kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7v11kUp: { code: 'accSagittalSharp7v11kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7v11kDown: { code: 'accSagittalFlat7v11kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp17CUp: { code: 'accSagittalSharp17CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat17CDown: { code: 'accSagittalFlat17CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp55CUp: { code: 'accSagittalSharp55CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat55CDown: { code: 'accSagittalFlat55CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7v11CUp: { code: 'accSagittalSharp7v11CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7v11CDown: { code: 'accSagittalFlat7v11CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v11SUp: { code: 'accSagittalSharp5v11SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v11SDown: { code: 'accSagittalFlat5v11SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp5v11SDown: { code: 'accSagittalDoubleSharp5v11SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat5v11SUp: { code: 'accSagittalDoubleFlat5v11SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp7v11CDown: { code: 'accSagittalDoubleSharp7v11CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat7v11CUp: { code: 'accSagittalDoubleFlat7v11CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp55CDown: { code: 'accSagittalDoubleSharp55CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat55CUp: { code: 'accSagittalDoubleFlat55CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp17CDown: { code: 'accSagittalDoubleSharp17CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat17CUp: { code: 'accSagittalDoubleFlat17CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp7v11kDown: { code: 'accSagittalDoubleSharp7v11kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat7v11kUp: { code: 'accSagittalDoubleFlat7v11kUp', parenRightPaddingAdjustment: -1 },\n    accSagittal23CommaUp: { code: 'accSagittal23CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal23CommaDown: { code: 'accSagittal23CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5v19CommaUp: { code: 'accSagittal5v19CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v19CommaDown: { code: 'accSagittal5v19CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5v23SmallDiesisUp: { code: 'accSagittal5v23SmallDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v23SmallDiesisDown: { code: 'accSagittal5v23SmallDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v23SDown: { code: 'accSagittalSharp5v23SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v23SUp: { code: 'accSagittalFlat5v23SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v19CDown: { code: 'accSagittalSharp5v19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v19CUp: { code: 'accSagittalFlat5v19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp23CDown: { code: 'accSagittalSharp23CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat23CUp: { code: 'accSagittalFlat23CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp23CUp: { code: 'accSagittalSharp23CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat23CDown: { code: 'accSagittalFlat23CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v19CUp: { code: 'accSagittalSharp5v19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v19CDown: { code: 'accSagittalFlat5v19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v23SUp: { code: 'accSagittalSharp5v23SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v23SDown: { code: 'accSagittalFlat5v23SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp5v23SDown: { code: 'accSagittalDoubleSharp5v23SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat5v23SUp: { code: 'accSagittalDoubleFlat5v23SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp5v19CDown: { code: 'accSagittalDoubleSharp5v19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat5v19CUp: { code: 'accSagittalDoubleFlat5v19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp23CDown: { code: 'accSagittalDoubleSharp23CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat23CUp: { code: 'accSagittalDoubleFlat23CUp', parenRightPaddingAdjustment: -1 },\n    accSagittal19SchismaUp: { code: 'accSagittal19SchismaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal19SchismaDown: { code: 'accSagittal19SchismaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal17KleismaUp: { code: 'accSagittal17KleismaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal17KleismaDown: { code: 'accSagittal17KleismaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal143CommaUp: { code: 'accSagittal143CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal143CommaDown: { code: 'accSagittal143CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal11v49CommaUp: { code: 'accSagittal11v49CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal11v49CommaDown: { code: 'accSagittal11v49CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal19CommaUp: { code: 'accSagittal19CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal19CommaDown: { code: 'accSagittal19CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal7v19CommaUp: { code: 'accSagittal7v19CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal7v19CommaDown: { code: 'accSagittal7v19CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal49SmallDiesisUp: { code: 'accSagittal49SmallDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal49SmallDiesisDown: { code: 'accSagittal49SmallDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal23SmallDiesisUp: { code: 'accSagittal23SmallDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal23SmallDiesisDown: { code: 'accSagittal23SmallDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5v13MediumDiesisUp: { code: 'accSagittal5v13MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v13MediumDiesisDown: { code: 'accSagittal5v13MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal11v19MediumDiesisUp: { code: 'accSagittal11v19MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal11v19MediumDiesisDown: { code: 'accSagittal11v19MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal49MediumDiesisUp: { code: 'accSagittal49MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal49MediumDiesisDown: { code: 'accSagittal49MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5v49MediumDiesisUp: { code: 'accSagittal5v49MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v49MediumDiesisDown: { code: 'accSagittal5v49MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal49LargeDiesisUp: { code: 'accSagittal49LargeDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal49LargeDiesisDown: { code: 'accSagittal49LargeDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal11v19LargeDiesisUp: { code: 'accSagittal11v19LargeDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal11v19LargeDiesisDown: { code: 'accSagittal11v19LargeDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5v13LargeDiesisUp: { code: 'accSagittal5v13LargeDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v13LargeDiesisDown: { code: 'accSagittal5v13LargeDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp23SDown: { code: 'accSagittalSharp23SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat23SUp: { code: 'accSagittalFlat23SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp49SDown: { code: 'accSagittalSharp49SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat49SUp: { code: 'accSagittalFlat49SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7v19CDown: { code: 'accSagittalSharp7v19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7v19CUp: { code: 'accSagittalFlat7v19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp19CDown: { code: 'accSagittalSharp19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat19CUp: { code: 'accSagittalFlat19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp11v49CDown: { code: 'accSagittalSharp11v49CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat11v49CUp: { code: 'accSagittalFlat11v49CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp143CDown: { code: 'accSagittalSharp143CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat143CUp: { code: 'accSagittalFlat143CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp17kDown: { code: 'accSagittalSharp17kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat17kUp: { code: 'accSagittalFlat17kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp19sDown: { code: 'accSagittalSharp19sDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat19sUp: { code: 'accSagittalFlat19sUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp19sUp: { code: 'accSagittalSharp19sUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat19sDown: { code: 'accSagittalFlat19sDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp17kUp: { code: 'accSagittalSharp17kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat17kDown: { code: 'accSagittalFlat17kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp143CUp: { code: 'accSagittalSharp143CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat143CDown: { code: 'accSagittalFlat143CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp11v49CUp: { code: 'accSagittalSharp11v49CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat11v49CDown: { code: 'accSagittalFlat11v49CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp19CUp: { code: 'accSagittalSharp19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat19CDown: { code: 'accSagittalFlat19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7v19CUp: { code: 'accSagittalSharp7v19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7v19CDown: { code: 'accSagittalFlat7v19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp49SUp: { code: 'accSagittalSharp49SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat49SDown: { code: 'accSagittalFlat49SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp23SUp: { code: 'accSagittalSharp23SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat23SDown: { code: 'accSagittalFlat23SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v13MUp: { code: 'accSagittalSharp5v13MUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v13MDown: { code: 'accSagittalFlat5v13MDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp11v19MUp: { code: 'accSagittalSharp11v19MUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat11v19MDown: { code: 'accSagittalFlat11v19MDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp49MUp: { code: 'accSagittalSharp49MUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat49MDown: { code: 'accSagittalFlat49MDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v49MUp: { code: 'accSagittalSharp5v49MUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v49MDown: { code: 'accSagittalFlat5v49MDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp49LUp: { code: 'accSagittalSharp49LUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat49LDown: { code: 'accSagittalFlat49LDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp11v19LUp: { code: 'accSagittalSharp11v19LUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat11v19LDown: { code: 'accSagittalFlat11v19LDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v13LUp: { code: 'accSagittalSharp5v13LUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v13LDown: { code: 'accSagittalFlat5v13LDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp23SDown: { code: 'accSagittalDoubleSharp23SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat23SUp: { code: 'accSagittalDoubleFlat23SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp49SDown: { code: 'accSagittalDoubleSharp49SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat49SUp: { code: 'accSagittalDoubleFlat49SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp7v19CDown: { code: 'accSagittalDoubleSharp7v19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat7v19CUp: { code: 'accSagittalDoubleFlat7v19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp19CDown: { code: 'accSagittalDoubleSharp19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat19CUp: { code: 'accSagittalDoubleFlat19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp11v49CDown: { code: 'accSagittalDoubleSharp11v49CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat11v49CUp: { code: 'accSagittalDoubleFlat11v49CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp143CDown: { code: 'accSagittalDoubleSharp143CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat143CUp: { code: 'accSagittalDoubleFlat143CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp17kDown: { code: 'accSagittalDoubleSharp17kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat17kUp: { code: 'accSagittalDoubleFlat17kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp19sDown: { code: 'accSagittalDoubleSharp19sDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat19sUp: { code: 'accSagittalDoubleFlat19sUp', parenRightPaddingAdjustment: -1 },\n    accSagittalShaftUp: { code: 'accSagittalShaftUp', parenRightPaddingAdjustment: -1 },\n    accSagittalShaftDown: { code: 'accSagittalShaftDown', parenRightPaddingAdjustment: -1 },\n    accSagittalAcute: { code: 'accSagittalAcute', parenRightPaddingAdjustment: -1 },\n    accSagittalGrave: { code: 'accSagittalGrave', parenRightPaddingAdjustment: -1 },\n    accSagittal1MinaUp: { code: 'accSagittal1MinaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal1MinaDown: { code: 'accSagittal1MinaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal2MinasUp: { code: 'accSagittal2MinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal2MinasDown: { code: 'accSagittal2MinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal1TinaUp: { code: 'accSagittal1TinaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal1TinaDown: { code: 'accSagittal1TinaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal2TinasUp: { code: 'accSagittal2TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal2TinasDown: { code: 'accSagittal2TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal3TinasUp: { code: 'accSagittal3TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal3TinasDown: { code: 'accSagittal3TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal4TinasUp: { code: 'accSagittal4TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal4TinasDown: { code: 'accSagittal4TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5TinasUp: { code: 'accSagittal5TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5TinasDown: { code: 'accSagittal5TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal6TinasUp: { code: 'accSagittal6TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal6TinasDown: { code: 'accSagittal6TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal7TinasUp: { code: 'accSagittal7TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal7TinasDown: { code: 'accSagittal7TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal8TinasUp: { code: 'accSagittal8TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal8TinasDown: { code: 'accSagittal8TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal9TinasUp: { code: 'accSagittal9TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal9TinasDown: { code: 'accSagittal9TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFractionalTinaUp: { code: 'accSagittalFractionalTinaUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFractionalTinaDown: { code: 'accSagittalFractionalTinaDown', parenRightPaddingAdjustment: -1 },\n    accidentalNarrowReversedFlat: { code: 'accidentalNarrowReversedFlat', parenRightPaddingAdjustment: -1 },\n    accidentalNarrowReversedFlatAndFlat: {\n        code: 'accidentalNarrowReversedFlatAndFlat',\n        parenRightPaddingAdjustment: -1,\n    },\n    accidentalWilsonPlus: { code: 'accidentalWilsonPlus', parenRightPaddingAdjustment: -1 },\n    accidentalWilsonMinus: { code: 'accidentalWilsonMinus', parenRightPaddingAdjustment: -1 },\n};\n// Helps determine the layout of accidentals.\nconst accidentalColumns = {\n    1: {\n        a: [1],\n        b: [1],\n    },\n    2: {\n        a: [1, 2],\n    },\n    3: {\n        a: [1, 3, 2],\n        b: [1, 2, 1],\n        second_on_bottom: [1, 2, 3],\n    },\n    4: {\n        a: [1, 3, 4, 2],\n        b: [1, 2, 3, 1],\n        spaced_out_tetrachord: [1, 2, 1, 2],\n    },\n    5: {\n        a: [1, 3, 5, 4, 2],\n        b: [1, 2, 4, 3, 1],\n        spaced_out_pentachord: [1, 2, 3, 2, 1],\n        very_spaced_out_pentachord: [1, 2, 1, 2, 1],\n    },\n    6: {\n        a: [1, 3, 5, 6, 4, 2],\n        b: [1, 2, 4, 5, 3, 1],\n        spaced_out_hexachord: [1, 3, 2, 1, 3, 2],\n        very_spaced_out_hexachord: [1, 2, 1, 2, 1, 2],\n    },\n};\nconst articulations = {\n    'a.': { code: 'augmentationDot', between_lines: true },\n    av: {\n        aboveCode: 'articStaccatissimoAbove',\n        belowCode: 'articStaccatissimoBelow',\n        between_lines: true,\n    },\n    'a>': {\n        aboveCode: 'articAccentAbove',\n        belowCode: 'articAccentBelow',\n        between_lines: true,\n    },\n    'a-': {\n        aboveCode: 'articTenutoAbove',\n        belowCode: 'articTenutoBelow',\n        between_lines: true,\n    },\n    'a^': {\n        aboveCode: 'articMarcatoAbove',\n        belowCode: 'articMarcatoBelow',\n        between_lines: false,\n    },\n    'a+': { code: 'pluckedLeftHandPizzicato', between_lines: false },\n    ao: {\n        aboveCode: 'pluckedSnapPizzicatoAbove',\n        belowCode: 'pluckedSnapPizzicatoBelow',\n        between_lines: false,\n    },\n    ah: { code: 'stringsHarmonic', between_lines: false },\n    'a@': { aboveCode: 'fermataAbove', belowCode: 'fermataBelow', between_lines: false },\n    'a@a': { code: 'fermataAbove', between_lines: false },\n    'a@u': { code: 'fermataBelow', between_lines: false },\n    'a@s': { aboveCode: 'fermataShortAbove', belowCode: 'fermataShortBelow', between_lines: false },\n    'a@as': { code: 'fermataShortAbove', between_lines: false },\n    'a@us': { code: 'fermataShortBelow', between_lines: false },\n    'a@l': { aboveCode: 'fermataLongAbove', belowCode: 'fermataLongBelow', between_lines: false },\n    'a@al': { code: 'fermataLongAbove', between_lines: false },\n    'a@ul': { code: 'fermataLongBelow', between_lines: false },\n    'a@vl': { aboveCode: 'fermataVeryLongAbove', belowCode: 'fermataVeryLongBelow', between_lines: false },\n    'a@avl': { code: 'fermataVeryLongAbove', between_lines: false },\n    'a@uvl': { code: 'fermataVeryLongBelow', between_lines: false },\n    'a|': { code: 'stringsUpBow', between_lines: false },\n    am: { code: 'stringsDownBow', between_lines: false },\n    'a,': { code: 'pictChokeCymbal', between_lines: false }, // Choked\n};\nconst ornaments = {\n    mordent: { code: 'ornamentShortTrill' },\n    mordent_inverted: { code: 'ornamentMordent' },\n    turn: { code: 'ornamentTurn' },\n    turn_inverted: { code: 'ornamentTurnSlash' },\n    tr: { code: 'ornamentTrill' },\n    upprall: { code: 'ornamentPrecompSlideTrillDAnglebert' },\n    downprall: { code: 'ornamentPrecompDoubleCadenceUpperPrefix' },\n    prallup: { code: 'ornamentPrecompTrillSuffixDandrieu' },\n    pralldown: { code: 'ornamentPrecompTrillLowerSuffix' },\n    upmordent: { code: 'ornamentPrecompSlideTrillBach' },\n    downmordent: { code: 'ornamentPrecompDoubleCadenceUpperPrefixTurn' },\n    lineprall: { code: 'ornamentPrecompAppoggTrill' },\n    prallprall: { code: 'ornamentTremblement' },\n    scoop: { code: 'brassScoop' },\n    doit: { code: 'brassDoitMedium' },\n    fall: { code: 'brassFallLipShort' },\n    doitLong: { code: 'brassLiftMedium' },\n    fallLong: { code: 'brassFallRoughMedium' },\n    bend: { code: 'brassBend' },\n    plungerClosed: { code: 'brassMuteClosed' },\n    plungerOpen: { code: 'brassMuteOpen' },\n    flip: { code: 'brassFlip' },\n    jazzTurn: { code: 'brassJazzTurn' },\n    smear: { code: 'brassSmear' },\n};\nexport class Tables {\n    /**\n     * @returns the `Font` object at the head of the music font stack.\n     */\n    static currentMusicFont() {\n        if (Tables.MUSIC_FONT_STACK.length === 0) {\n            throw new RuntimeError('NoFonts', 'The font stack is empty. See: await Flow.fetchMusicFont(...); Flow.setMusicFont(...).');\n        }\n        else {\n            return Tables.MUSIC_FONT_STACK[0];\n        }\n    }\n    static clefProperties(clef) {\n        if (!clef || !(clef in clefs))\n            throw new RuntimeError('BadArgument', 'Invalid clef: ' + clef);\n        return clefs[clef];\n    }\n    /**\n     * @param keyOctaveGlyph a string in the format \"key/octave\" (e.g., \"c/5\") or \"key/octave/custom-note-head-code\" (e.g., \"g/5/t3\").\n     * @param clef\n     * @param params a struct with one option, `octave_shift` for clef ottavation (0 = default; 1 = 8va; -1 = 8vb, etc.).\n     * @returns properties for the specified note.\n     */\n    // eslint-disable-next-line\n    static keyProperties(keyOctaveGlyph, clef = 'treble', params) {\n        let options = { octave_shift: 0, duration: '4' };\n        if (typeof params === 'object') {\n            options = Object.assign(Object.assign({}, options), params);\n        }\n        const duration = Tables.sanitizeDuration(options.duration);\n        const pieces = keyOctaveGlyph.split('/');\n        if (pieces.length < 2) {\n            throw new RuntimeError('BadArguments', `First argument must be note/octave or note/octave/glyph-code: ${keyOctaveGlyph}`);\n        }\n        const key = pieces[0].toUpperCase();\n        const value = notesInfo[key];\n        if (!value)\n            throw new RuntimeError('BadArguments', 'Invalid key name: ' + key);\n        if (value.octave)\n            pieces[1] = value.octave.toString();\n        let octave = parseInt(pieces[1], 10);\n        // Octave_shift is the shift to compensate for clef 8va/8vb.\n        octave += -1 * options.octave_shift;\n        const baseIndex = octave * 7 - 4 * 7;\n        let line = (baseIndex + value.index) / 2;\n        line += Tables.clefProperties(clef).line_shift;\n        let stroke = 0;\n        if (line <= 0 && (line * 2) % 2 === 0)\n            stroke = 1; // stroke up\n        if (line >= 6 && (line * 2) % 2 === 0)\n            stroke = -1; // stroke down\n        // Integer value for note arithmetic.\n        const int_value = typeof value.int_val !== 'undefined' ? octave * 12 + value.int_val : undefined;\n        // If the user specified a glyph, overwrite the glyph code.\n        const code = value.code;\n        const shift_right = value.shift_right;\n        let customNoteHeadProps = {};\n        if (pieces.length > 2 && pieces[2]) {\n            const glyphName = pieces[2].toUpperCase();\n            customNoteHeadProps = { code: this.codeNoteHead(glyphName, duration) } || {};\n        }\n        return Object.assign({ key,\n            octave,\n            line,\n            int_value, accidental: value.accidental, code,\n            stroke,\n            shift_right, displaced: false }, customNoteHeadProps);\n    }\n    static integerToNote(integer) {\n        if (typeof integer === 'undefined' || integer < 0 || integer > 11) {\n            throw new RuntimeError('BadArguments', `integerToNote() requires an integer in the range [0, 11]: ${integer}`);\n        }\n        const table = {\n            0: 'C',\n            1: 'C#',\n            2: 'D',\n            3: 'D#',\n            4: 'E',\n            5: 'F',\n            6: 'F#',\n            7: 'G',\n            8: 'G#',\n            9: 'A',\n            10: 'A#',\n            11: 'B',\n        };\n        const noteValue = table[integer];\n        if (!noteValue) {\n            throw new RuntimeError('BadArguments', `Unknown note value for integer: ${integer}`);\n        }\n        return noteValue;\n    }\n    static tabToGlyph(fret, scale = 1.0) {\n        let glyph = undefined;\n        let width = 0;\n        let shift_y = 0;\n        if (fret.toUpperCase() === 'X') {\n            const glyphMetrics = new Glyph('accidentalDoubleSharp', Tables.TABLATURE_FONT_SCALE).getMetrics();\n            glyph = 'accidentalDoubleSharp';\n            if (glyphMetrics.width == undefined || glyphMetrics.height == undefined)\n                throw new RuntimeError('InvalidMetrics', 'Width and height required');\n            width = glyphMetrics.width;\n            shift_y = -glyphMetrics.height / 2;\n        }\n        else {\n            width = Tables.textWidth(fret);\n        }\n        return {\n            text: fret,\n            code: glyph,\n            getWidth: () => width * scale,\n            shift_y,\n        };\n    }\n    // Used by annotation.ts and bend.ts. Clearly this implementation only works for the default font size.\n    // TODO: The actual width depends on the font family, size, weight, style.\n    static textWidth(text) {\n        return 7 * text.toString().length;\n    }\n    static articulationCodes(artic) {\n        return articulations[artic];\n    }\n    static accidentalCodes(acc) {\n        return accidentals[acc];\n    }\n    static ornamentCodes(acc) {\n        return ornaments[acc];\n    }\n    static keySignature(spec) {\n        const keySpec = keySignatures[spec];\n        if (!keySpec) {\n            throw new RuntimeError('BadKeySignature', `Bad key signature spec: '${spec}'`);\n        }\n        if (!keySpec.acc) {\n            return [];\n        }\n        const accidentalList = {\n            b: [2, 0.5, 2.5, 1, 3, 1.5, 3.5],\n            '#': [0, 1.5, -0.5, 1, 2.5, 0.5, 2],\n        };\n        const notes = accidentalList[keySpec.acc];\n        const acc_list = [];\n        for (let i = 0; i < keySpec.num; ++i) {\n            const line = notes[i];\n            acc_list.push({ type: keySpec.acc, line });\n        }\n        return acc_list;\n    }\n    static getKeySignatures() {\n        return keySignatures;\n    }\n    static hasKeySignature(spec) {\n        return spec in keySignatures;\n    }\n    /**\n     * Convert duration aliases to the number based duration.\n     * If the input isn't an alias, simply return the input.\n     * @param duration\n     * @returns Example: 'q' -> '4', '8' -> '8'\n     */\n    static sanitizeDuration(duration) {\n        const durationNumber = durationAliases[duration];\n        if (durationNumber !== undefined) {\n            duration = durationNumber;\n        }\n        if (durations[duration] === undefined) {\n            throw new RuntimeError('BadArguments', `The provided duration is not valid: ${duration}`);\n        }\n        return duration;\n    }\n    /** Convert the `duration` to a fraction. */\n    static durationToFraction(duration) {\n        return new Fraction().parse(Tables.sanitizeDuration(duration));\n    }\n    /** Convert the `duration` to a number. */\n    static durationToNumber(duration) {\n        return Tables.durationToFraction(duration).value();\n    }\n    /* Convert the `duration` to total ticks. */\n    static durationToTicks(duration) {\n        duration = Tables.sanitizeDuration(duration);\n        const ticks = durations[duration];\n        if (ticks === undefined) {\n            throw new RuntimeError('InvalidDuration');\n        }\n        return ticks;\n    }\n    static codeNoteHead(type, duration) {\n        let code = '';\n        switch (type) {\n            /* Diamond */\n            case 'D0':\n                code = 'noteheadDiamondWhole';\n                break;\n            case 'D1':\n                code = 'noteheadDiamondHalf';\n                break;\n            case 'D2':\n                code = 'noteheadDiamondBlack';\n                break;\n            case 'D3':\n                code = 'noteheadDiamondBlack';\n                break;\n            /* Triangle */\n            case 'T0':\n                code = 'noteheadTriangleUpWhole';\n                break;\n            case 'T1':\n                code = 'noteheadTriangleUpHalf';\n                break;\n            case 'T2':\n                code = 'noteheadTriangleUpBlack';\n                break;\n            case 'T3':\n                code = 'noteheadTriangleUpBlack';\n                break;\n            /* Cross */\n            case 'X0':\n                code = 'noteheadXWhole';\n                break;\n            case 'X1':\n                code = 'noteheadXHalf';\n                break;\n            case 'X2':\n                code = 'noteheadXBlack';\n                break;\n            case 'X3':\n                code = 'noteheadCircleX';\n                break;\n            /* Square */\n            case 'S1':\n                code = 'noteheadSquareWhite';\n                break;\n            case 'S2':\n                code = 'noteheadSquareBlack';\n                break;\n            /* Rectangle */\n            case 'R1':\n                code = 'vexNoteHeadRectWhite'; // no smufl code\n                break;\n            case 'R2':\n                code = 'vexNoteHeadRectBlack'; // no smufl code\n                break;\n            case 'DO':\n                code = 'noteheadTriangleUpBlack';\n                break;\n            case 'RE':\n                code = 'noteheadMoonBlack';\n                break;\n            case 'MI':\n                code = 'noteheadDiamondBlack';\n                break;\n            case 'FA':\n                code = 'noteheadTriangleLeftBlack';\n                break;\n            case 'FAUP':\n                code = 'noteheadTriangleRightBlack';\n                break;\n            case 'SO':\n                code = 'noteheadBlack';\n                break;\n            case 'LA':\n                code = 'noteheadSquareBlack';\n                break;\n            case 'TI':\n                code = 'noteheadTriangleRoundDownBlack';\n                break;\n            case 'D':\n            case 'H': // left for backwards compatibility\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadDiamondDoubleWhole';\n                        break;\n                    case '1':\n                        code = 'noteheadDiamondWhole';\n                        break;\n                    case '2':\n                        code = 'noteheadDiamondHalf';\n                        break;\n                    default:\n                        code = 'noteheadDiamondBlack';\n                        break;\n                }\n                break;\n            case 'N':\n            case 'G':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadDoubleWhole';\n                        break;\n                    case '1':\n                        code = 'noteheadWhole';\n                        break;\n                    case '2':\n                        code = 'noteheadHalf';\n                        break;\n                    default:\n                        code = 'noteheadBlack';\n                        break;\n                }\n                break;\n            case 'M': // left for backwards compatibility\n            case 'X':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadXDoubleWhole';\n                        break;\n                    case '1':\n                        code = 'noteheadXWhole';\n                        break;\n                    case '2':\n                        code = 'noteheadXHalf';\n                        break;\n                    default:\n                        code = 'noteheadXBlack';\n                        break;\n                }\n                break;\n            case 'CX':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadCircleXDoubleWhole';\n                        break;\n                    case '1':\n                        code = 'noteheadCircleXWhole';\n                        break;\n                    case '2':\n                        code = 'noteheadCircleXHalf';\n                        break;\n                    default:\n                        code = 'noteheadCircleX';\n                        break;\n                }\n                break;\n            case 'CI':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadCircledDoubleWhole';\n                        break;\n                    case '1':\n                        code = 'noteheadCircledWhole';\n                        break;\n                    case '2':\n                        code = 'noteheadCircledHalf';\n                        break;\n                    default:\n                        code = 'noteheadCircledBlack';\n                        break;\n                }\n                break;\n            case 'SQ':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadDoubleWholeSquare';\n                        break;\n                    case '1':\n                        code = 'noteheadSquareWhite';\n                        break;\n                    case '2':\n                        code = 'noteheadSquareWhite';\n                        break;\n                    default:\n                        code = 'noteheadSquareBlack';\n                        break;\n                }\n                break;\n            case 'TU':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadTriangleUpDoubleWhole';\n                        break;\n                    case '1':\n                        code = 'noteheadTriangleUpWhole';\n                        break;\n                    case '2':\n                        code = 'noteheadTriangleUpHalf';\n                        break;\n                    default:\n                        code = 'noteheadTriangleUpBlack';\n                        break;\n                }\n                break;\n            case 'TD':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadTriangleDownDoubleWhole';\n                        break;\n                    case '1':\n                        code = 'noteheadTriangleDownWhole';\n                        break;\n                    case '2':\n                        code = 'noteheadTriangleDownHalf';\n                        break;\n                    default:\n                        code = 'noteheadTriangleDownBlack';\n                        break;\n                }\n                break;\n            case 'SF':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadSlashedDoubleWhole1';\n                        break;\n                    case '1':\n                        code = 'noteheadSlashedWhole1';\n                        break;\n                    case '2':\n                        code = 'noteheadSlashedHalf1';\n                        break;\n                    default:\n                        code = 'noteheadSlashedBlack1';\n                }\n                break;\n            case 'SB':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadSlashedDoubleWhole2';\n                        break;\n                    case '1':\n                        code = 'noteheadSlashedWhole2';\n                        break;\n                    case '2':\n                        code = 'noteheadSlashedHalf2';\n                        break;\n                    default:\n                        code = 'noteheadSlashedBlack2';\n                }\n                break;\n        }\n        return code;\n    }\n    // Return a glyph given duration and type. The type can be a custom glyph code from customNoteHeads.\n    // The default type is a regular note ('n').\n    // eslint-disable-next-line\n    static getGlyphProps(duration, type = 'n') {\n        duration = Tables.sanitizeDuration(duration);\n        // Lookup duration for default glyph head code\n        const code = durationCodes[duration];\n        if (code === undefined) {\n            return undefined;\n        }\n        // Get glyph properties for 'type' from duration string (note, rest, harmonic, muted, slash)\n        let glyphTypeProperties = code.type[type];\n        // Try and get it from the custom list of note heads\n        const codeNoteHead = Tables.codeNoteHead(type.toUpperCase(), duration);\n        if (codeNoteHead != '')\n            glyphTypeProperties = Object.assign(Object.assign({}, glyphTypeProperties), { code_head: codeNoteHead, code: codeNoteHead });\n        const code_head = glyphTypeProperties.code_head;\n        // The default implementation of getWidth() calls Glyph.getWidth(code_head, scale).\n        // This can be overridden by an individual glyph type (see slash noteheads below: Tables.SLASH_NOTEHEAD_WIDTH).\n        const getWidth = (scale = Tables.NOTATION_FONT_SCALE) => Glyph.getWidth(code_head, scale);\n        // Merge duration props for 'duration' with the note head properties.\n        return Object.assign(Object.assign(Object.assign({}, code.common), { getWidth: getWidth }), glyphTypeProperties);\n    }\n}\nTables.SOFTMAX_FACTOR = 100;\nTables.STEM_WIDTH = 1.5;\nTables.STEM_HEIGHT = 35;\nTables.STAVE_LINE_THICKNESS = 1;\nTables.RENDER_PRECISION_PLACES = 3;\nTables.RESOLUTION = RESOLUTION;\n/**\n * Customize this by calling Flow.setMusicFont(...fontNames);\n */\nTables.MUSIC_FONT_STACK = [];\nTables.NOTATION_FONT_SCALE = 39;\nTables.TABLATURE_FONT_SCALE = 39;\nTables.SLASH_NOTEHEAD_WIDTH = 15;\nTables.STAVE_LINE_DISTANCE = 10;\n// HACK:\n// Since text origins are positioned at the baseline, we must\n// compensate for the ascender of the text. Of course, 1 staff space is\n// a very poor approximation.\n//\n// This will be deprecated in the future. This is a temporary solution until\n// we have more robust text metrics.\nTables.TEXT_HEIGHT_OFFSET_HACK = 1;\nTables.accidentalMap = accidentals;\nTables.accidentalColumnsTable = accidentalColumns;\nTables.unicode = {\n    // ♯ accidental sharp\n    sharp: String.fromCharCode(0x266f),\n    // ♭ accidental flat\n    flat: String.fromCharCode(0x266d),\n    // ♮ accidental natural\n    natural: String.fromCharCode(0x266e),\n    // △ major seventh\n    triangle: String.fromCharCode(0x25b3),\n    // ø half-diminished\n    'o-with-slash': String.fromCharCode(0x00f8),\n    // ° diminished\n    degrees: String.fromCharCode(0x00b0),\n    // ○ diminished\n    circle: String.fromCharCode(0x25cb),\n};\n/* The list of valid note types. Used by note.ts during parseNoteStruct(). */\nTables.validTypes = validNoteTypes;\n// Default time signature.\nTables.TIME4_4 = {\n    num_beats: 4,\n    beat_value: 4,\n    resolution: RESOLUTION,\n};\n// 1/2, 1, 2, 4, 8, 16, 32, 64, 128\n// NOTE: There is no 256 here! However, there are other mentions of 256 in this file.\n// For example, in durations has a 256 key, and sanitizeDuration() can return 256.\n// The sanitizeDuration() bit may need to be removed by 0xfe.\n// eslint-disable-next-line\nconst durationCodes = {\n    '1/2': {\n        common: {\n            stem: false,\n            stem_offset: 0,\n            flag: false,\n            stem_up_extension: -Tables.STEM_HEIGHT,\n            stem_down_extension: -Tables.STEM_HEIGHT,\n            tabnote_stem_up_extension: -Tables.STEM_HEIGHT,\n            tabnote_stem_down_extension: -Tables.STEM_HEIGHT,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        type: {\n            r: {\n                // Breve rest\n                code_head: 'restDoubleWhole',\n                rest: true,\n                position: 'B/5',\n                dot_shiftY: 0.5,\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('restDoubleWhole', scale);\n                // },\n            },\n            s: {\n                // Breve note slash -\n                // Drawn with canvas primitives\n                getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n                position: 'B/4',\n            },\n        },\n    },\n    1: {\n        common: {\n            stem: false,\n            stem_offset: 0,\n            flag: false,\n            stem_up_extension: -Tables.STEM_HEIGHT,\n            stem_down_extension: -Tables.STEM_HEIGHT,\n            tabnote_stem_up_extension: -Tables.STEM_HEIGHT,\n            tabnote_stem_down_extension: -Tables.STEM_HEIGHT,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        type: {\n            r: {\n                // Whole rest\n                code_head: 'restWhole',\n                leger_code_head: 'restWholeLegerLine',\n                rest: true,\n                position: 'D/5',\n                dot_shiftY: 0.5,\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('restWhole', scale);\n                // },\n            },\n            s: {\n                // Whole note slash\n                // Drawn with canvas primitives\n                getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n                position: 'B/4',\n            },\n        },\n    },\n    2: {\n        common: {\n            stem: true,\n            stem_offset: 0,\n            flag: false,\n            stem_up_extension: 0,\n            stem_down_extension: 0,\n            tabnote_stem_up_extension: 0,\n            tabnote_stem_down_extension: 0,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        type: {\n            r: {\n                // Half rest\n                code_head: 'restHalf',\n                leger_code_head: 'restHalfLegerLine',\n                stem: false,\n                rest: true,\n                position: 'B/4',\n                dot_shiftY: -0.5,\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('restHalf', scale);\n                // },\n            },\n            s: {\n                // Half note slash\n                // Drawn with canvas primitives\n                getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n                position: 'B/4',\n            },\n        },\n    },\n    4: {\n        common: {\n            stem: true,\n            stem_offset: 0,\n            flag: false,\n            stem_up_extension: 0,\n            stem_down_extension: 0,\n            tabnote_stem_up_extension: 0,\n            tabnote_stem_down_extension: 0,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        type: {\n            r: {\n                // Quarter rest\n                code_head: 'restQuarter',\n                stem: false,\n                rest: true,\n                position: 'B/4',\n                dot_shiftY: -0.5,\n                line_above: 1.5,\n                line_below: 1.5,\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('restQuarter', scale);\n                // },\n            },\n            s: {\n                // Quarter slash\n                // Drawn with canvas primitives\n                getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n                position: 'B/4',\n            },\n        },\n    },\n    8: {\n        common: {\n            stem: true,\n            stem_offset: 0,\n            flag: true,\n            beam_count: 1,\n            stem_beam_extension: 0,\n            code_flag_upstem: 'flag8thUp',\n            code_flag_downstem: 'flag8thDown',\n            stem_up_extension: 0,\n            stem_down_extension: 0,\n            tabnote_stem_up_extension: 0,\n            tabnote_stem_down_extension: 0,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        type: {\n            r: {\n                // Eighth rest\n                code_head: 'rest8th',\n                stem: false,\n                flag: false,\n                rest: true,\n                position: 'B/4',\n                dot_shiftY: -0.5,\n                line_above: 1.0,\n                line_below: 1.0,\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('rest8th', scale);\n                // },\n            },\n            s: {\n                // Eighth slash\n                // Drawn with canvas primitives\n                getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n                position: 'B/4',\n            },\n        },\n    },\n    16: {\n        common: {\n            beam_count: 2,\n            stem_beam_extension: 0,\n            stem: true,\n            stem_offset: 0,\n            flag: true,\n            code_flag_upstem: 'flag16thUp',\n            code_flag_downstem: 'flag16thDown',\n            stem_up_extension: 0,\n            stem_down_extension: 0,\n            tabnote_stem_up_extension: 0,\n            tabnote_stem_down_extension: 0,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        type: {\n            r: {\n                // Sixteenth rest\n                code_head: 'rest16th',\n                stem: false,\n                flag: false,\n                rest: true,\n                position: 'B/4',\n                dot_shiftY: -0.5,\n                line_above: 1.0,\n                line_below: 2.0,\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('rest16th', scale);\n                // },\n            },\n            s: {\n                // Sixteenth slash\n                // Drawn with canvas primitives\n                getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n                position: 'B/4',\n            },\n        },\n    },\n    32: {\n        common: {\n            beam_count: 3,\n            stem_beam_extension: 7.5,\n            stem: true,\n            stem_offset: 0,\n            flag: true,\n            code_flag_upstem: 'flag32ndUp',\n            code_flag_downstem: 'flag32ndDown',\n            stem_up_extension: 9,\n            stem_down_extension: 9,\n            tabnote_stem_up_extension: 9,\n            tabnote_stem_down_extension: 9,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        type: {\n            r: {\n                // Thirty-second rest\n                code_head: 'rest32nd',\n                stem: false,\n                flag: false,\n                rest: true,\n                position: 'B/4',\n                dot_shiftY: -1.5,\n                line_above: 2.0,\n                line_below: 2.0,\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('rest32nd', scale);\n                // },\n            },\n            s: {\n                // Thirty-second slash\n                // Drawn with canvas primitives\n                getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n                position: 'B/4',\n            },\n        },\n    },\n    64: {\n        common: {\n            beam_count: 4,\n            stem_beam_extension: 15,\n            stem: true,\n            stem_offset: 0,\n            flag: true,\n            code_flag_upstem: 'flag64thUp',\n            code_flag_downstem: 'flag64thDown',\n            stem_up_extension: 13,\n            stem_down_extension: 13,\n            tabnote_stem_up_extension: 13,\n            tabnote_stem_down_extension: 13,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        type: {\n            r: {\n                // Sixty-fourth rest\n                code_head: 'rest64th',\n                stem: false,\n                flag: false,\n                rest: true,\n                position: 'B/4',\n                dot_shiftY: -1.5,\n                line_above: 2.0,\n                line_below: 3.0,\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('rest64th', scale);\n                // },\n            },\n            s: {\n                // Sixty-fourth slash\n                // Drawn with canvas primitives\n                getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n                position: 'B/4',\n            },\n        },\n    },\n    128: {\n        common: {\n            beam_count: 5,\n            stem_beam_extension: 22.5,\n            stem: true,\n            stem_offset: 0,\n            flag: true,\n            code_flag_upstem: 'flag128thUp',\n            code_flag_downstem: 'flag128thDown',\n            stem_up_extension: 22,\n            stem_down_extension: 22,\n            tabnote_stem_up_extension: 22,\n            tabnote_stem_down_extension: 22,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        type: {\n            r: {\n                // Hundred-twenty-eight rest\n                code_head: 'rest128th',\n                stem: false,\n                flag: false,\n                rest: true,\n                position: 'B/4',\n                dot_shiftY: -2.5,\n                line_above: 3.0,\n                line_below: 3.0,\n                // getWidth(scale = Tables.NOTATION_FONT_SCALE): number | undefined {\n                //   return Glyph.getWidth('rest128th', scale);\n                // },\n            },\n            s: {\n                // Hundred-twenty-eight slash\n                // Drawn with canvas primitives\n                getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n                position: 'B/4',\n            },\n        },\n    },\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { BoundingBox } from './boundingbox';\nimport { BoundingBoxComputation } from './boundingboxcomputation';\nimport { Element } from './element';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\nexport var OutlineCode;\n(function (OutlineCode) {\n    OutlineCode[OutlineCode[\"MOVE\"] = 0] = \"MOVE\";\n    OutlineCode[OutlineCode[\"LINE\"] = 1] = \"LINE\";\n    OutlineCode[OutlineCode[\"QUADRATIC\"] = 2] = \"QUADRATIC\";\n    OutlineCode[OutlineCode[\"BEZIER\"] = 3] = \"BEZIER\";\n})(OutlineCode || (OutlineCode = {}));\nclass GlyphCacheEntry {\n    constructor(fontStack, code, category) {\n        this.point = -1;\n        this.metrics = Glyph.loadMetrics(fontStack, code, category);\n        this.bbox = Glyph.getOutlineBoundingBox(this.metrics.outline, this.metrics.scale, this.metrics.x_shift, this.metrics.y_shift);\n        if (category) {\n            this.point = Glyph.lookupFontMetric(this.metrics.font, category, code, 'point', -1);\n        }\n    }\n}\nclass GlyphCache {\n    constructor() {\n        this.cache = new Map();\n    }\n    lookup(code, category) {\n        let entries = this.cache.get(Glyph.CURRENT_CACHE_KEY);\n        if (entries === undefined) {\n            entries = {};\n            this.cache.set(Glyph.CURRENT_CACHE_KEY, entries);\n        }\n        const key = category ? `${code}%${category}` : code;\n        let entry = entries[key];\n        if (entry === undefined) {\n            entry = new GlyphCacheEntry(Glyph.MUSIC_FONT_STACK, code, category);\n            entries[key] = entry;\n        }\n        return entry;\n    }\n}\nclass GlyphOutline {\n    constructor(outline, originX, originY, scale) {\n        this.outline = outline;\n        this.originX = originX;\n        this.originY = originY;\n        this.scale = scale;\n        this.i = 0;\n        this.precision = 1;\n        // Automatically assign private properties: this.outline, this.originX, this.originY, and this.scale.\n        this.precision = Math.pow(10, Tables.RENDER_PRECISION_PLACES);\n    }\n    done() {\n        return this.i >= this.outline.length;\n    }\n    next() {\n        return Math.round((this.outline[this.i++] * this.precision) / this.precision);\n    }\n    nextX() {\n        return Math.round((this.originX + this.outline[this.i++] * this.scale) * this.precision) / this.precision;\n    }\n    nextY() {\n        return Math.round((this.originY - this.outline[this.i++] * this.scale) * this.precision) / this.precision;\n    }\n    static parse(str) {\n        const result = [];\n        const parts = str.split(' ');\n        let i = 0;\n        while (i < parts.length) {\n            switch (parts[i++]) {\n                case 'm':\n                    result.push(OutlineCode.MOVE, parseInt(parts[i++]), parseInt(parts[i++]));\n                    break;\n                case 'l':\n                    result.push(OutlineCode.LINE, parseInt(parts[i++]), parseInt(parts[i++]));\n                    break;\n                case 'q':\n                    result.push(OutlineCode.QUADRATIC, parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]));\n                    break;\n                case 'b':\n                    result.push(OutlineCode.BEZIER, parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]));\n                    break;\n            }\n        }\n        return result;\n    }\n}\nexport class Glyph extends Element {\n    /**\n     * @param code\n     * @param point\n     * @param options\n     */\n    constructor(code, point, options) {\n        super();\n        //////////////////////////////////////////////////////////////////////////////////////////////////\n        // INSTANCE MEMBERS\n        this.bbox = new BoundingBox(0, 0, 0, 0);\n        this.topGlyphs = [];\n        this.botGlyphs = [];\n        this.options = {};\n        this.scale = 1;\n        this.code = code;\n        this.point = point;\n        this.originShift = { x: 0, y: 0 };\n        this.x_shift = 0;\n        this.y_shift = 0;\n        if (options) {\n            this.setOptions(options);\n        }\n        else {\n            this.reset();\n        }\n    }\n    //////////////////////////////////////////////////////////////////////////////////////////////////\n    // STATIC MEMBERS\n    static get CATEGORY() {\n        return Category.Glyph;\n    }\n    /**\n     * Pass a key of the form `glyphs.{category}.{code}.{key}` to Font.lookupMetric(). If the initial lookup fails,\n     * try again with the path `glyphs.{category}.{key}`. If the second lookup fails, return the defaultValue.\n     *\n     * @param font\n     * @param category any metric path under 'glyphs', so 'stem.up' could resolve to glyphs.stem.up.shiftX, glyphs.stem.up.shiftY, etc.\n     * @param code\n     * @param key\n     * @param defaultValue\n     */\n    static lookupFontMetric(font, category, code, key, defaultValue) {\n        let value = font.lookupMetric(`glyphs.${category}.${code}.${key}`, undefined);\n        if (value === undefined) {\n            // The first lookup failed, so we omit .${code} and try again (with a defaultValue this time).\n            value = font.lookupMetric(`glyphs.${category}.${key}`, defaultValue);\n        }\n        return value;\n    }\n    static lookupGlyph(fontStack, code) {\n        defined(fontStack, 'BadFontStack', 'Font stack is misconfigured');\n        let glyph;\n        let font;\n        for (let i = 0; i < fontStack.length; i++) {\n            font = fontStack[i];\n            glyph = font.getGlyphs()[code];\n            if (glyph)\n                return { glyph, font };\n        }\n        throw new RuntimeError('BadGlyph', `Glyph ${code} does not exist in font.`);\n    }\n    static loadMetrics(fontStack, code, category) {\n        const { glyph, font } = Glyph.lookupGlyph(fontStack, code);\n        if (!glyph.o)\n            throw new RuntimeError('BadGlyph', `Glyph ${code} has no outline defined.`);\n        let x_shift = 0;\n        let y_shift = 0;\n        let scale = 1;\n        if (category && font) {\n            x_shift = Glyph.lookupFontMetric(font, category, code, 'shiftX', 0);\n            y_shift = Glyph.lookupFontMetric(font, category, code, 'shiftY', 0);\n            scale = Glyph.lookupFontMetric(font, category, code, 'scale', 1);\n        }\n        const x_min = glyph.x_min;\n        const x_max = glyph.x_max;\n        const ha = glyph.ha;\n        if (!glyph.cached_outline) {\n            glyph.cached_outline = GlyphOutline.parse(glyph.o);\n        }\n        return {\n            x_min,\n            x_max,\n            x_shift,\n            y_shift,\n            scale,\n            ha,\n            outline: glyph.cached_outline,\n            font,\n            width: x_max - x_min,\n            height: ha,\n        };\n    }\n    /**\n     * Renders glyphs from the default font stack.\n     *\n     * @param ctx Canvas or SVG context\n     * @param x_pos x coordinate\n     * @param y_pos y coordinate\n     * @param point the point size of the font\n     * @param code the glyph code in font.getGlyphs()\n     * @param options\n     * @returns\n     */\n    static renderGlyph(ctx, x_pos, y_pos, point, code, options) {\n        var _a;\n        const data = Glyph.cache.lookup(code, options === null || options === void 0 ? void 0 : options.category);\n        const metrics = data.metrics;\n        if (data.point != -1) {\n            point = data.point;\n        }\n        const customScale = (_a = options === null || options === void 0 ? void 0 : options.scale) !== null && _a !== void 0 ? _a : 1;\n        const scale = ((point * 72.0) / (metrics.font.getResolution() * 100.0)) * metrics.scale * customScale;\n        Glyph.renderOutline(ctx, metrics.outline, scale, x_pos + metrics.x_shift * customScale, y_pos + metrics.y_shift * customScale);\n        return metrics;\n    }\n    static renderOutline(ctx, outline, scale, x_pos, y_pos) {\n        const go = new GlyphOutline(outline, x_pos, y_pos, scale);\n        ctx.beginPath();\n        let x, y;\n        while (!go.done()) {\n            switch (go.next()) {\n                case OutlineCode.MOVE:\n                    ctx.moveTo(go.nextX(), go.nextY());\n                    break;\n                case OutlineCode.LINE:\n                    ctx.lineTo(go.nextX(), go.nextY());\n                    break;\n                case OutlineCode.QUADRATIC:\n                    x = go.nextX();\n                    y = go.nextY();\n                    ctx.quadraticCurveTo(go.nextX(), go.nextY(), x, y);\n                    break;\n                case OutlineCode.BEZIER:\n                    x = go.nextX();\n                    y = go.nextY();\n                    ctx.bezierCurveTo(go.nextX(), go.nextY(), go.nextX(), go.nextY(), x, y);\n                    break;\n            }\n        }\n        ctx.fill();\n    }\n    static getOutlineBoundingBox(outline, scale, x_pos, y_pos) {\n        const go = new GlyphOutline(outline, x_pos, y_pos, scale);\n        const bboxComp = new BoundingBoxComputation();\n        // (penX, penY) hold the pen position: the start of each stroke.\n        let penX = x_pos;\n        let penY = y_pos;\n        let x, y;\n        while (!go.done()) {\n            switch (go.next()) {\n                case OutlineCode.MOVE:\n                    // Note that we don't add any points to the bounding box until a srroke is actually drawn.\n                    penX = go.nextX();\n                    penY = go.nextY();\n                    break;\n                case OutlineCode.LINE:\n                    bboxComp.addPoint(penX, penY);\n                    penX = go.nextX();\n                    penY = go.nextY();\n                    bboxComp.addPoint(penX, penY);\n                    break;\n                case OutlineCode.QUADRATIC:\n                    x = go.nextX();\n                    y = go.nextY();\n                    bboxComp.addQuadraticCurve(penX, penY, go.nextX(), go.nextY(), x, y);\n                    penX = x;\n                    penY = y;\n                    break;\n                case OutlineCode.BEZIER:\n                    x = go.nextX();\n                    y = go.nextY();\n                    bboxComp.addBezierCurve(penX, penY, go.nextX(), go.nextY(), go.nextX(), go.nextY(), x, y);\n                    penX = x;\n                    penY = y;\n                    break;\n            }\n        }\n        return new BoundingBox(bboxComp.getX1(), bboxComp.getY1(), bboxComp.width(), bboxComp.height());\n    }\n    static getWidth(code, point, category) {\n        const data = Glyph.cache.lookup(code, category);\n        if (data.point != -1) {\n            point = data.point;\n        }\n        const scale = (point * 72) / (data.metrics.font.getResolution() * 100);\n        return data.bbox.getW() * scale;\n    }\n    // eslint-disable-next-line\n    draw(...args) {\n        // DO NOTHING.\n    }\n    getCode() {\n        return this.code;\n    }\n    // eslint-disable-next-line\n    setOptions(options) {\n        this.options = Object.assign(Object.assign({}, this.options), options);\n        this.reset();\n    }\n    setPoint(point) {\n        this.point = point;\n        return this;\n    }\n    setStave(stave) {\n        this.stave = stave;\n        return this;\n    }\n    getXShift() {\n        return this.x_shift;\n    }\n    setXShift(x_shift) {\n        this.x_shift = x_shift;\n        return this;\n    }\n    getYshift() {\n        return this.y_shift;\n    }\n    setYShift(y_shift) {\n        this.y_shift = y_shift;\n        return this;\n    }\n    reset() {\n        const data = Glyph.cache.lookup(this.code, this.options.category);\n        this.metrics = data.metrics;\n        // Override point from metrics file\n        if (data.point != -1) {\n            this.point = data.point;\n        }\n        this.scale = (this.point * 72) / (this.metrics.font.getResolution() * 100);\n        this.bbox = new BoundingBox(data.bbox.getX() * this.scale, data.bbox.getY() * this.scale, data.bbox.getW() * this.scale, data.bbox.getH() * this.scale);\n    }\n    checkMetrics() {\n        return defined(this.metrics, 'BadGlyph', `Glyph ${this.code} is not initialized.`);\n    }\n    getMetrics() {\n        const metrics = this.checkMetrics();\n        const metricsScale = metrics.scale;\n        return {\n            x_min: metrics.x_min * this.scale * metricsScale,\n            x_max: metrics.x_max * this.scale * metricsScale,\n            width: this.bbox.getW(),\n            height: this.bbox.getH(),\n            scale: this.scale * metricsScale,\n            x_shift: metrics.x_shift,\n            y_shift: metrics.y_shift,\n            outline: metrics.outline,\n            font: metrics.font,\n            ha: metrics.ha,\n        };\n    }\n    setOriginX(x) {\n        const { bbox } = this;\n        const originX = Math.abs(bbox.getX() / bbox.getW());\n        const xShift = (x - originX) * bbox.getW();\n        this.originShift.x = -xShift;\n    }\n    setOriginY(y) {\n        const { bbox } = this;\n        const originY = Math.abs(bbox.getY() / bbox.getH());\n        const yShift = (y - originY) * bbox.getH();\n        this.originShift.y = -yShift;\n    }\n    setOrigin(x, y) {\n        this.setOriginX(x);\n        this.setOriginY(y);\n    }\n    render(ctx, x, y) {\n        const metrics = this.checkMetrics();\n        const outline = metrics.outline;\n        const scale = this.scale * metrics.scale;\n        this.setRendered();\n        this.applyStyle(ctx);\n        const xPos = x + this.originShift.x + metrics.x_shift;\n        const yPos = y + this.originShift.y + metrics.y_shift;\n        Glyph.renderOutline(ctx, outline, scale, xPos, yPos);\n        this.restoreStyle(ctx);\n    }\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    renderToStave(x) {\n        const context = this.checkContext();\n        const metrics = this.checkMetrics();\n        const stave = this.checkStave();\n        const outline = metrics.outline;\n        const scale = this.scale * metrics.scale;\n        this.setRendered();\n        this.applyStyle();\n        const xPos = x + this.x_shift + metrics.x_shift;\n        const yPos = stave.getYForGlyphs() + this.y_shift + metrics.y_shift;\n        Glyph.renderOutline(context, outline, scale, xPos, yPos);\n        this.restoreStyle();\n    }\n}\nGlyph.cache = new GlyphCache();\n// The current cache key for GlyphCache above.\n// Computed when Flow.setMusicFont(...) is called.\n// It is set to a comma separated list of font names.\nGlyph.CURRENT_CACHE_KEY = '';\n// Used by the GlyphCache above.\n// Set when Flow.setMusicFont(...) is called.\nGlyph.MUSIC_FONT_STACK = [];\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\nexport var ModifierPosition;\n(function (ModifierPosition) {\n    ModifierPosition[ModifierPosition[\"CENTER\"] = 0] = \"CENTER\";\n    ModifierPosition[ModifierPosition[\"LEFT\"] = 1] = \"LEFT\";\n    ModifierPosition[ModifierPosition[\"RIGHT\"] = 2] = \"RIGHT\";\n    ModifierPosition[ModifierPosition[\"ABOVE\"] = 3] = \"ABOVE\";\n    ModifierPosition[ModifierPosition[\"BELOW\"] = 4] = \"BELOW\";\n})(ModifierPosition || (ModifierPosition = {}));\n// To enable logging for this class. Set `Vex.Flow.Modifier.DEBUG` to `true`.\n// function L(...args) { if (Modifier.DEBUG) log('Vex.Flow.Modifier', args); }\n/**\n * `Modifier` is an abstract interface for notational elements that modify\n * a `Note`. Examples of modifiers are `Accidental`, `Annotation`, `Stroke`, etc.\n *\n * For a `Modifier` instance to be positioned correctly, it must be part of\n * a `ModifierContext`. All modifiers in the same context are rendered relative to\n * one another.\n *\n * Typically, all modifiers to a note are part of the same `ModifierContext` instance. Also,\n * in multi-voice staves, all modifiers to notes on the same `tick` are part of the same\n * `ModifierContext`. This ensures that multiple voices don't trample all over each other.\n */\nexport class Modifier extends Element {\n    constructor() {\n        super();\n        this.width = 0;\n        // The `text_line` is reserved space above or below a stave.\n        this.text_line = 0;\n        this.position = Modifier.Position.LEFT;\n        this.x_shift = 0;\n        this.y_shift = 0;\n        this.spacingFromNextModifier = 0;\n    }\n    /**\n     * Modifiers category string. Every modifier has a different category.\n     * The `ModifierContext` uses this to determine the type and order of the modifiers.\n     */\n    static get CATEGORY() {\n        return Category.Modifier;\n    }\n    /** Modifiers can be positioned almost anywhere, relative to a note. */\n    static get Position() {\n        return ModifierPosition;\n    }\n    static get PositionString() {\n        return {\n            center: ModifierPosition.CENTER,\n            above: ModifierPosition.ABOVE,\n            below: ModifierPosition.BELOW,\n            left: ModifierPosition.LEFT,\n            right: ModifierPosition.RIGHT,\n        };\n    }\n    /** Called when position changes. */\n    reset() {\n        // DO NOTHING.\n    }\n    /** Get modifier widths. */\n    getWidth() {\n        return this.width;\n    }\n    /** Set modifier widths. */\n    setWidth(width) {\n        this.width = width;\n        return this;\n    }\n    /** Get attached note (`StaveNote`, `TabNote`, etc.) */\n    getNote() {\n        return defined(this.note, 'NoNote', 'Modifier has no note.');\n    }\n    /**\n     * Used in draw() to check and get the attached note (`StaveNote`, `TabNote`, etc.).\n     * Also verifies that the index is valid.\n     */\n    checkAttachedNote() {\n        const category = this.getCategory();\n        defined(this.index, 'NoIndex', `Can't draw ${category} without an index.`);\n        return defined(this.note, 'NoNote', `Can't draw ${category} without a note.`);\n    }\n    /**\n     * Set attached note.\n     * @param note (`StaveNote`, `TabNote`, etc.)\n     */\n    setNote(note) {\n        this.note = note;\n        return this;\n    }\n    /** Get note index, which is a specific note in a chord. */\n    getIndex() {\n        return this.index;\n    }\n    /** Check and get note index, which is a specific note in a chord. */\n    checkIndex() {\n        return defined(this.index, 'NoIndex', 'Modifier has an invalid index.');\n    }\n    /** Set note index, which is a specific note in a chord. */\n    setIndex(index) {\n        this.index = index;\n        return this;\n    }\n    /** Get `ModifierContext`. */\n    getModifierContext() {\n        return this.modifierContext;\n    }\n    /** Check and get `ModifierContext`. */\n    checkModifierContext() {\n        return defined(this.modifierContext, 'NoModifierContext', 'Modifier Context Required');\n    }\n    /** Every modifier must be part of a `ModifierContext`. */\n    setModifierContext(c) {\n        this.modifierContext = c;\n        return this;\n    }\n    /** Get position. */\n    getPosition() {\n        return this.position;\n    }\n    /**\n     * Set position.\n     * @param position CENTER | LEFT | RIGHT | ABOVE | BELOW\n     */\n    setPosition(position) {\n        this.position = typeof position === 'string' ? Modifier.PositionString[position] : position;\n        this.reset();\n        return this;\n    }\n    /** Set the `text_line` for the modifier. */\n    setTextLine(line) {\n        this.text_line = line;\n        return this;\n    }\n    /** Shift modifier down `y` pixels. Negative values shift up. */\n    setYShift(y) {\n        this.y_shift = y;\n        return this;\n    }\n    /** Set spacing from next modifier. */\n    setSpacingFromNextModifier(x) {\n        this.spacingFromNextModifier = x;\n    }\n    /** Get spacing from next modifier. */\n    getSpacingFromNextModifier() {\n        return this.spacingFromNextModifier;\n    }\n    /**\n     * Shift modifier `x` pixels in the direction of the modifier. Negative values\n     * shift reverse.\n     */\n    setXShift(x) {\n        this.x_shift = 0;\n        if (this.position === Modifier.Position.LEFT) {\n            this.x_shift -= x;\n        }\n        else {\n            this.x_shift += x;\n        }\n        return this;\n    }\n    /** Get shift modifier `x` */\n    getXShift() {\n        return this.x_shift;\n    }\n    /** Render the modifier onto the canvas. */\n    draw() {\n        this.checkContext();\n        throw new RuntimeError('NotImplemented', 'draw() not implemented for this modifier.');\n    }\n    // aligns sub notes of NoteSubGroup (or GraceNoteGroup) to the main note with correct x-offset\n    alignSubNotesWithNote(subNotes, note) {\n        // Shift over the tick contexts of each note\n        const tickContext = note.getTickContext();\n        const metrics = tickContext.getMetrics();\n        const stave = note.getStave();\n        const subNoteXOffset = tickContext.getX() - metrics.modLeftPx - metrics.modRightPx + this.getSpacingFromNextModifier();\n        subNotes.forEach((subNote) => {\n            const subTickContext = subNote.getTickContext();\n            if (stave)\n                subNote.setStave(stave);\n            subTickContext.setXOffset(subNoteXOffset); // don't touch baseX to avoid shift each render\n        });\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { RuntimeError } from './util';\n/** Music implements some standard music theory routines. */\nexport class Music {\n    /** Number of an canonical notes (12). */\n    static get NUM_TONES() {\n        return this.canonical_notes.length;\n    }\n    /** Names of root notes ('c', 'd',...) */\n    static get roots() {\n        return ['c', 'd', 'e', 'f', 'g', 'a', 'b'];\n    }\n    /** Values of the root notes.*/\n    static get root_values() {\n        return [0, 2, 4, 5, 7, 9, 11];\n    }\n    /** Indices of the root notes.*/\n    static get root_indices() {\n        return {\n            c: 0,\n            d: 1,\n            e: 2,\n            f: 3,\n            g: 4,\n            a: 5,\n            b: 6,\n        };\n    }\n    /** Names of canonical notes ('c', 'c#', 'd',...). */\n    static get canonical_notes() {\n        return ['c', 'c#', 'd', 'd#', 'e', 'f', 'f#', 'g', 'g#', 'a', 'a#', 'b'];\n    }\n    /** Names of diatonic intervals ('unison', 'm2', 'M2',...). */\n    static get diatonic_intervals() {\n        return ['unison', 'm2', 'M2', 'm3', 'M3', 'p4', 'dim5', 'p5', 'm6', 'M6', 'b7', 'M7', 'octave'];\n    }\n    /** NoteAccidental associated to diatonic intervals. */\n    static get diatonic_accidentals() {\n        return {\n            unison: { note: 0, accidental: 0 },\n            m2: { note: 1, accidental: -1 },\n            M2: { note: 1, accidental: 0 },\n            m3: { note: 2, accidental: -1 },\n            M3: { note: 2, accidental: 0 },\n            p4: { note: 3, accidental: 0 },\n            dim5: { note: 4, accidental: -1 },\n            p5: { note: 4, accidental: 0 },\n            m6: { note: 5, accidental: -1 },\n            M6: { note: 5, accidental: 0 },\n            b7: { note: 6, accidental: -1 },\n            M7: { note: 6, accidental: 0 },\n            octave: { note: 7, accidental: 0 },\n        };\n    }\n    /** Semitones shift associated to intervals .*/\n    static get intervals() {\n        return {\n            u: 0,\n            unison: 0,\n            m2: 1,\n            b2: 1,\n            min2: 1,\n            S: 1,\n            H: 1,\n            2: 2,\n            M2: 2,\n            maj2: 2,\n            T: 2,\n            W: 2,\n            m3: 3,\n            b3: 3,\n            min3: 3,\n            M3: 4,\n            3: 4,\n            maj3: 4,\n            4: 5,\n            p4: 5,\n            '#4': 6,\n            b5: 6,\n            aug4: 6,\n            dim5: 6,\n            5: 7,\n            p5: 7,\n            '#5': 8,\n            b6: 8,\n            aug5: 8,\n            6: 9,\n            M6: 9,\n            maj6: 9,\n            b7: 10,\n            m7: 10,\n            min7: 10,\n            dom7: 10,\n            M7: 11,\n            maj7: 11,\n            8: 12,\n            octave: 12,\n        };\n    }\n    /** Semitones shifts associated with scales. */\n    static get scales() {\n        return {\n            major: [2, 2, 1, 2, 2, 2, 1],\n            minor: [2, 1, 2, 2, 1, 2, 2],\n            ionian: [2, 2, 1, 2, 2, 2, 1],\n            dorian: [2, 1, 2, 2, 2, 1, 2],\n            phyrgian: [1, 2, 2, 2, 1, 2, 2],\n            lydian: [2, 2, 2, 1, 2, 2, 1],\n            mixolydian: [2, 2, 1, 2, 2, 1, 2],\n            aeolian: [2, 1, 2, 2, 1, 2, 2],\n            locrian: [1, 2, 2, 1, 2, 2, 2],\n        };\n    }\n    /** Scales associated with m (minor) and M (major). */\n    static get scaleTypes() {\n        return {\n            M: Music.scales.major,\n            m: Music.scales.minor,\n        };\n    }\n    /** Accidentals abbreviations. */\n    static get accidentals() {\n        return ['bb', 'b', 'n', '#', '##'];\n    }\n    /** Note values. */\n    static get noteValues() {\n        return {\n            c: { root_index: 0, int_val: 0 },\n            cn: { root_index: 0, int_val: 0 },\n            'c#': { root_index: 0, int_val: 1 },\n            'c##': { root_index: 0, int_val: 2 },\n            cb: { root_index: 0, int_val: 11 },\n            cbb: { root_index: 0, int_val: 10 },\n            d: { root_index: 1, int_val: 2 },\n            dn: { root_index: 1, int_val: 2 },\n            'd#': { root_index: 1, int_val: 3 },\n            'd##': { root_index: 1, int_val: 4 },\n            db: { root_index: 1, int_val: 1 },\n            dbb: { root_index: 1, int_val: 0 },\n            e: { root_index: 2, int_val: 4 },\n            en: { root_index: 2, int_val: 4 },\n            'e#': { root_index: 2, int_val: 5 },\n            'e##': { root_index: 2, int_val: 6 },\n            eb: { root_index: 2, int_val: 3 },\n            ebb: { root_index: 2, int_val: 2 },\n            f: { root_index: 3, int_val: 5 },\n            fn: { root_index: 3, int_val: 5 },\n            'f#': { root_index: 3, int_val: 6 },\n            'f##': { root_index: 3, int_val: 7 },\n            fb: { root_index: 3, int_val: 4 },\n            fbb: { root_index: 3, int_val: 3 },\n            g: { root_index: 4, int_val: 7 },\n            gn: { root_index: 4, int_val: 7 },\n            'g#': { root_index: 4, int_val: 8 },\n            'g##': { root_index: 4, int_val: 9 },\n            gb: { root_index: 4, int_val: 6 },\n            gbb: { root_index: 4, int_val: 5 },\n            a: { root_index: 5, int_val: 9 },\n            an: { root_index: 5, int_val: 9 },\n            'a#': { root_index: 5, int_val: 10 },\n            'a##': { root_index: 5, int_val: 11 },\n            ab: { root_index: 5, int_val: 8 },\n            abb: { root_index: 5, int_val: 7 },\n            b: { root_index: 6, int_val: 11 },\n            bn: { root_index: 6, int_val: 11 },\n            'b#': { root_index: 6, int_val: 0 },\n            'b##': { root_index: 6, int_val: 1 },\n            bb: { root_index: 6, int_val: 10 },\n            bbb: { root_index: 6, int_val: 9 },\n        };\n    }\n    isValidNoteValue(note) {\n        return note >= 0 && note < Music.canonical_notes.length;\n    }\n    isValidIntervalValue(interval) {\n        return interval >= 0 && interval < Music.diatonic_intervals.length;\n    }\n    /** Return root and accidental associated to a note. */\n    getNoteParts(noteString) {\n        if (!noteString || noteString.length < 1) {\n            throw new RuntimeError('BadArguments', 'Invalid note name: ' + noteString);\n        }\n        if (noteString.length > 3) {\n            throw new RuntimeError('BadArguments', 'Invalid note name: ' + noteString);\n        }\n        const note = noteString.toLowerCase();\n        const regex = /^([cdefgab])(b|bb|n|#|##)?$/;\n        const match = regex.exec(note);\n        if (match !== null) {\n            const root = match[1];\n            const accidental = match[2];\n            return {\n                root,\n                accidental,\n            };\n        }\n        else {\n            throw new RuntimeError('BadArguments', 'Invalid note name: ' + noteString);\n        }\n    }\n    /** Return root, accidental and type associated to a key. */\n    getKeyParts(keyString) {\n        if (!keyString || keyString.length < 1) {\n            throw new RuntimeError('BadArguments', 'Invalid key: ' + keyString);\n        }\n        const key = keyString.toLowerCase();\n        // Support Major, Minor, Melodic Minor, and Harmonic Minor key types.\n        const regex = /^([cdefgab])(b|#)?(mel|harm|m|M)?$/;\n        const match = regex.exec(key);\n        if (match !== null) {\n            const root = match[1];\n            const accidental = match[2];\n            let type = match[3];\n            // Unspecified type implies major\n            if (!type)\n                type = 'M';\n            return {\n                root,\n                accidental,\n                type,\n            };\n        }\n        else {\n            throw new RuntimeError('BadArguments', `Invalid key: ${keyString}`);\n        }\n    }\n    /** Note value associated to a note name. */\n    getNoteValue(noteString) {\n        const value = Music.noteValues[noteString];\n        if (value === undefined) {\n            throw new RuntimeError('BadArguments', `Invalid note name: ${noteString}`);\n        }\n        return value.int_val;\n    }\n    /** Interval value associated to an interval name. */\n    getIntervalValue(intervalString) {\n        const value = Music.intervals[intervalString];\n        if (value === undefined) {\n            throw new RuntimeError('BadArguments', `Invalid interval name: ${intervalString}`);\n        }\n        return value;\n    }\n    /** Canonical note name associated to a value. */\n    getCanonicalNoteName(noteValue) {\n        if (!this.isValidNoteValue(noteValue)) {\n            throw new RuntimeError('BadArguments', `Invalid note value: ${noteValue}`);\n        }\n        return Music.canonical_notes[noteValue];\n    }\n    /** Interval name associated to a value. */\n    getCanonicalIntervalName(intervalValue) {\n        if (!this.isValidIntervalValue(intervalValue)) {\n            throw new RuntimeError('BadArguments', `Invalid interval value: ${intervalValue}`);\n        }\n        return Music.diatonic_intervals[intervalValue];\n    }\n    /**\n     * Given a note, interval, and interval direction, produce the relative note.\n     */\n    getRelativeNoteValue(noteValue, intervalValue, direction = 1) {\n        if (direction !== 1 && direction !== -1) {\n            throw new RuntimeError('BadArguments', `Invalid direction: ${direction}`);\n        }\n        let sum = (noteValue + direction * intervalValue) % Music.NUM_TONES;\n        if (sum < 0)\n            sum += Music.NUM_TONES;\n        return sum;\n    }\n    /**\n     * Given a root and note value, produce the relative note name.\n     */\n    getRelativeNoteName(root, noteValue) {\n        const parts = this.getNoteParts(root);\n        const rootValue = this.getNoteValue(parts.root);\n        let interval = noteValue - rootValue;\n        if (Math.abs(interval) > Music.NUM_TONES - 3) {\n            let multiplier = 1;\n            if (interval > 0)\n                multiplier = -1;\n            // Possibly wrap around. (Add +1 for modulo operator)\n            const reverse_interval = ((noteValue + 1 + (rootValue + 1)) % Music.NUM_TONES) * multiplier;\n            if (Math.abs(reverse_interval) > 2) {\n                throw new RuntimeError('BadArguments', `Notes not related: ${root}, ${noteValue})`);\n            }\n            else {\n                interval = reverse_interval;\n            }\n        }\n        if (Math.abs(interval) > 2) {\n            throw new RuntimeError('BadArguments', `Notes not related: ${root}, ${noteValue})`);\n        }\n        let relativeNoteName = parts.root;\n        if (interval > 0) {\n            for (let i = 1; i <= interval; ++i) {\n                relativeNoteName += '#';\n            }\n        }\n        else if (interval < 0) {\n            for (let i = -1; i >= interval; --i) {\n                relativeNoteName += 'b';\n            }\n        }\n        return relativeNoteName;\n    }\n    /**\n     * Return scale tones, given intervals. Each successive interval is\n     * relative to the previous one, e.g., Major Scale:\n     *\n     *   TTSTTTS = [2,2,1,2,2,2,1]\n     *\n     * When used with key = 0, returns C scale (which is isomorphic to\n     * interval list).\n     */\n    getScaleTones(key, intervals) {\n        const tones = [key];\n        let nextNote = key;\n        for (let i = 0; i < intervals.length; i++) {\n            nextNote = this.getRelativeNoteValue(nextNote, intervals[i]);\n            if (nextNote !== key)\n                tones.push(nextNote);\n        }\n        return tones;\n    }\n    /**\n     * Return the interval of a note, given a diatonic scale.\n     * e.g., given the scale C, and the note E, returns M3.\n     */\n    getIntervalBetween(note1, note2, direction = 1) {\n        if (direction !== 1 && direction !== -1) {\n            throw new RuntimeError('BadArguments', `Invalid direction: ${direction}`);\n        }\n        if (!this.isValidNoteValue(note1) || !this.isValidNoteValue(note2)) {\n            throw new RuntimeError('BadArguments', `Invalid notes: ${note1}, ${note2}`);\n        }\n        let difference = direction === 1 ? note2 - note1 : note1 - note2;\n        if (difference < 0)\n            difference += Music.NUM_TONES;\n        return difference;\n    }\n    /**\n     * Create a scale map that represents the pitch state for a\n     * `keySignature`. For example, passing a `G` to `keySignature` would\n     * return a scale map with every note naturalized except for `F` which\n     * has an `F#` state.\n     */\n    createScaleMap(keySignature) {\n        const keySigParts = this.getKeyParts(keySignature);\n        if (!keySigParts.type)\n            throw new RuntimeError('BadArguments', 'Unsupported key type: undefined');\n        const scaleName = Music.scaleTypes[keySigParts.type];\n        let keySigString = keySigParts.root;\n        if (keySigParts.accidental)\n            keySigString += keySigParts.accidental;\n        if (!scaleName)\n            throw new RuntimeError('BadArguments', 'Unsupported key type: ' + keySignature);\n        const scale = this.getScaleTones(this.getNoteValue(keySigString), scaleName);\n        const noteLocation = Music.root_indices[keySigParts.root];\n        const scaleMap = {};\n        for (let i = 0; i < Music.roots.length; ++i) {\n            const index = (noteLocation + i) % Music.roots.length;\n            const rootName = Music.roots[index];\n            let noteName = this.getRelativeNoteName(rootName, scale[i]);\n            if (noteName.length === 1) {\n                noteName += 'n';\n            }\n            scaleMap[rootName] = noteName;\n        }\n        return scaleMap;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n// @author Mohit Cheppudira\n// @author Greg Ristow (modifications)\nimport { Fraction } from './fraction';\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { Music } from './music';\nimport { Tables } from './tables';\nimport { Category, isAccidental, isGraceNote, isGraceNoteGroup, isStaveNote } from './typeguard';\nimport { defined, log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Accidental.DEBUG)\n        log('Vex.Flow.Accidental', args);\n}\n/**\n * An `Accidental` inherits from `Modifier`, and is formatted within a\n * `ModifierContext`. Accidentals are modifiers that can be attached to\n * notes. Support is included for both western and microtonal accidentals.\n *\n * See `tests/accidental_tests.ts` for usage examples.\n */\nexport class Accidental extends Modifier {\n    /**\n     * Create accidental.\n     * @param type value from `Vex.Flow.accidentalCodes.accidentals` table in `tables.ts`.\n     * For example: `#`, `##`, `b`, `n`, etc.\n     */\n    constructor(type) {\n        super();\n        L('New accidental: ', type);\n        this.type = type;\n        this.position = Modifier.Position.LEFT;\n        this.render_options = {\n            // Font size for glyphs\n            font_scale: 38,\n            // Padding between accidental and parentheses on each side\n            parenLeftPadding: 2,\n            parenRightPadding: 2,\n        };\n        this.accidental = Tables.accidentalCodes(this.type);\n        defined(this.accidental, 'ArgumentError', `Unknown accidental type: ${type}`);\n        // Cautionary accidentals have parentheses around them\n        this.cautionary = false;\n        this.reset();\n    }\n    /** Accidentals category string. */\n    static get CATEGORY() {\n        return Category.Accidental;\n    }\n    /** Arrange accidentals inside a ModifierContext. */\n    static format(accidentals, state) {\n        // If there are no accidentals, no need to format their positions.\n        if (!accidentals || accidentals.length === 0)\n            return;\n        const musicFont = Tables.currentMusicFont();\n        const noteheadAccidentalPadding = musicFont.lookupMetric('accidental.noteheadAccidentalPadding');\n        const leftShift = state.left_shift + noteheadAccidentalPadding;\n        const accidentalSpacing = musicFont.lookupMetric('accidental.accidentalSpacing');\n        const additionalPadding = musicFont.lookupMetric('accidental.leftPadding'); // padding to the left of all accidentals\n        const accList = [];\n        let prevNote = undefined;\n        let shiftL = 0;\n        // First determine the accidentals' Y positions from the note.keys\n        for (let i = 0; i < accidentals.length; ++i) {\n            const acc = accidentals[i];\n            const note = acc.getNote();\n            const stave = note.getStave();\n            const index = acc.checkIndex();\n            const props = note.getKeyProps()[index];\n            if (note !== prevNote) {\n                // Iterate through all notes to get the displaced pixels\n                for (let n = 0; n < note.keys.length; ++n) {\n                    shiftL = Math.max(note.getLeftDisplacedHeadPx() - note.getXShift(), shiftL);\n                }\n                prevNote = note;\n            }\n            if (stave) {\n                const lineSpace = stave.getSpacingBetweenLines();\n                const y = stave.getYForLine(props.line);\n                const accLine = Math.round((y / lineSpace) * 2) / 2;\n                accList.push({ y, line: accLine, shift: shiftL, acc, lineSpace });\n            }\n            else {\n                accList.push({ line: props.line, shift: shiftL, acc });\n            }\n        }\n        // Sort accidentals by line number.\n        accList.sort((a, b) => b.line - a.line);\n        // FIXME: Confusing name. Each object in this array has a property called `line`.\n        // So if this is a list of lines, you end up with: `line.line` which is very awkward.\n        const lineList = [];\n        // amount by which all accidentals must be shifted right or left for\n        // stem flipping, notehead shifting concerns.\n        let accShift = 0;\n        let previousLine = undefined;\n        // Create an array of unique line numbers (lineList) from accList\n        for (let i = 0; i < accList.length; i++) {\n            const acc = accList[i];\n            // if this is the first line, or a new line, add a lineList\n            if (previousLine === undefined || previousLine !== acc.line) {\n                lineList.push({\n                    line: acc.line,\n                    flatLine: true,\n                    dblSharpLine: true,\n                    numAcc: 0,\n                    width: 0,\n                    column: 0,\n                });\n            }\n            // if this accidental is not a flat, the accidental needs 3.0 lines lower\n            // clearance instead of 2.5 lines for b or bb.\n            // FIXME: Naming could use work. acc.acc is very awkward\n            if (acc.acc.type !== 'b' && acc.acc.type !== 'bb') {\n                lineList[lineList.length - 1].flatLine = false;\n            }\n            // if this accidental is not a double sharp, the accidental needs 3.0 lines above\n            if (acc.acc.type !== '##') {\n                lineList[lineList.length - 1].dblSharpLine = false;\n            }\n            // Track how many accidentals are on this line:\n            lineList[lineList.length - 1].numAcc++;\n            // Track the total x_offset needed for this line which will be needed\n            // for formatting lines w/ multiple accidentals:\n            // width = accidental width + universal spacing between accidentals\n            lineList[lineList.length - 1].width += acc.acc.getWidth() + accidentalSpacing;\n            // if this accShift is larger, use it to keep first column accidentals in the same line\n            accShift = acc.shift > accShift ? acc.shift : accShift;\n            previousLine = acc.line;\n        }\n        // ### Place Accidentals in Columns\n        //\n        // Default to a classic triangular layout (middle accidental farthest left),\n        // but follow exceptions as outlined in G. Read's _Music Notation_ and\n        // Elaine Gould's _Behind Bars_.\n        //\n        // Additionally, this implements different vertical collision rules for\n        // flats (only need 2.5 lines clearance below) and double sharps (only\n        // need 2.5 lines of clearance above or below).\n        //\n        // Classic layouts and exception patterns are found in the 'tables.js'\n        // in 'Tables.accidentalColumnsTable'\n        //\n        // Beyond 6 vertical accidentals, default to the parallel ascending lines approach,\n        // using as few columns as possible for the verticle structure.\n        //\n        // TODO (?): Allow column to be specified for an accidental at run-time?\n        let totalColumns = 0;\n        // establish the boundaries for a group of notes with clashing accidentals:\n        for (let i = 0; i < lineList.length; i++) {\n            let noFurtherConflicts = false;\n            const groupStart = i;\n            let groupEnd = i;\n            while (groupEnd + 1 < lineList.length && !noFurtherConflicts) {\n                // if this note conflicts with the next:\n                if (this.checkCollision(lineList[groupEnd], lineList[groupEnd + 1])) {\n                    // include the next note in the group:\n                    groupEnd++;\n                }\n                else {\n                    noFurtherConflicts = true;\n                }\n            }\n            // Gets an a line from the `lineList`, relative to the current group\n            const getGroupLine = (index) => lineList[groupStart + index];\n            const getGroupLines = (indexes) => indexes.map(getGroupLine);\n            const lineDifference = (indexA, indexB) => {\n                const [a, b] = getGroupLines([indexA, indexB]).map((item) => item.line);\n                return a - b;\n            };\n            const notColliding = (...indexPairs) => indexPairs.map(getGroupLines).every(([line1, line2]) => !this.checkCollision(line1, line2));\n            // Set columns for the lines in this group:\n            const groupLength = groupEnd - groupStart + 1;\n            // Set the accidental column for each line of the group\n            let endCase = this.checkCollision(lineList[groupStart], lineList[groupEnd]) ? 'a' : 'b';\n            switch (groupLength) {\n                case 3:\n                    if (endCase === 'a' && lineDifference(1, 2) === 0.5 && lineDifference(0, 1) !== 0.5) {\n                        endCase = 'second_on_bottom';\n                    }\n                    break;\n                case 4:\n                    if (notColliding([0, 2], [1, 3])) {\n                        endCase = 'spaced_out_tetrachord';\n                    }\n                    break;\n                case 5:\n                    if (endCase === 'b' && notColliding([1, 3])) {\n                        endCase = 'spaced_out_pentachord';\n                        if (notColliding([0, 2], [2, 4])) {\n                            endCase = 'very_spaced_out_pentachord';\n                        }\n                    }\n                    break;\n                case 6:\n                    if (notColliding([0, 3], [1, 4], [2, 5])) {\n                        endCase = 'spaced_out_hexachord';\n                    }\n                    if (notColliding([0, 2], [2, 4], [1, 3], [3, 5])) {\n                        endCase = 'very_spaced_out_hexachord';\n                    }\n                    break;\n                default:\n                    break;\n            }\n            let groupMember;\n            let column;\n            // If the group contains seven members or more, use ascending parallel lines\n            // of accidentals, using as few columns as possible while avoiding collisions.\n            if (groupLength >= 7) {\n                // First, determine how many columns to use:\n                let patternLength = 2;\n                let collisionDetected = true;\n                while (collisionDetected === true) {\n                    collisionDetected = false;\n                    for (let line = 0; line + patternLength < lineList.length; line++) {\n                        if (this.checkCollision(lineList[line], lineList[line + patternLength])) {\n                            collisionDetected = true;\n                            patternLength++;\n                            break;\n                        }\n                    }\n                }\n                // Then, assign a column to each line of accidentals\n                for (groupMember = i; groupMember <= groupEnd; groupMember++) {\n                    column = ((groupMember - i) % patternLength) + 1;\n                    lineList[groupMember].column = column;\n                    totalColumns = totalColumns > column ? totalColumns : column;\n                }\n            }\n            else {\n                // If the group contains fewer than seven members, use the layouts from\n                // the Tables.accidentalColumnsTable (See: tables.ts).\n                for (groupMember = i; groupMember <= groupEnd; groupMember++) {\n                    column = Tables.accidentalColumnsTable[groupLength][endCase][groupMember - i];\n                    lineList[groupMember].column = column;\n                    totalColumns = totalColumns > column ? totalColumns : column;\n                }\n            }\n            // Increment i to the last note that was set, so that if a lower set of notes\n            // does not conflict at all with this group, it can have its own classic shape.\n            i = groupEnd;\n        }\n        // ### Convert Columns to x_offsets\n        //\n        // This keeps columns aligned, even if they have different accidentals within them\n        // which sometimes results in a larger x_offset than is an accidental might need\n        // to preserve the symmetry of the accidental shape.\n        //\n        // Neither A.C. Vinci nor G. Read address this, and it typically only happens in\n        // music with complex chord clusters.\n        //\n        // TODO (?): Optionally allow closer compression of accidentals, instead of forcing\n        // parallel columns.\n        // track each column's max width, which will be used as initial shift of later columns:\n        const columnWidths = [];\n        const columnXOffsets = [];\n        for (let i = 0; i <= totalColumns; i++) {\n            columnWidths[i] = 0;\n            columnXOffsets[i] = 0;\n        }\n        columnWidths[0] = accShift + leftShift;\n        columnXOffsets[0] = accShift + leftShift;\n        // Fill columnWidths with widest needed x-space;\n        // this is what keeps the columns parallel.\n        lineList.forEach((line) => {\n            if (line.width > columnWidths[line.column])\n                columnWidths[line.column] = line.width;\n        });\n        for (let i = 1; i < columnWidths.length; i++) {\n            // this column's offset = this column's width + previous column's offset\n            columnXOffsets[i] = columnWidths[i] + columnXOffsets[i - 1];\n        }\n        const totalShift = columnXOffsets[columnXOffsets.length - 1];\n        // Set the xShift for each accidental according to column offsets:\n        let accCount = 0;\n        lineList.forEach((line) => {\n            let lineWidth = 0;\n            const lastAccOnLine = accCount + line.numAcc;\n            // handle all of the accidentals on a given line:\n            for (accCount; accCount < lastAccOnLine; accCount++) {\n                const xShift = columnXOffsets[line.column - 1] + lineWidth;\n                accList[accCount].acc.setXShift(xShift);\n                // keep track of the width of accidentals we've added so far, so that when\n                // we loop, we add space for them.\n                lineWidth += accList[accCount].acc.getWidth() + accidentalSpacing;\n                L('Line, accCount, shift: ', line.line, accCount, xShift);\n            }\n        });\n        // update the overall layout with the full width of the accidental shapes:\n        state.left_shift += totalShift + additionalPadding;\n    }\n    /** Helper function to determine whether two lines of accidentals collide vertically */\n    static checkCollision(line1, line2) {\n        let clearance = line2.line - line1.line;\n        let clearanceRequired = 3;\n        // But less clearance is required for certain accidentals: b, bb and ##.\n        if (clearance > 0) {\n            // then line 2 is on top\n            clearanceRequired = line2.flatLine || line2.dblSharpLine ? 2.5 : 3.0;\n            if (line1.dblSharpLine)\n                clearance -= 0.5;\n        }\n        else {\n            // line 1 is on top\n            clearanceRequired = line1.flatLine || line1.dblSharpLine ? 2.5 : 3.0;\n            if (line2.dblSharpLine)\n                clearance -= 0.5;\n        }\n        const collision = Math.abs(clearance) < clearanceRequired;\n        L('Line_1, Line_2, Collision: ', line1.line, line2.line, collision);\n        return collision;\n    }\n    /**\n     * Use this method to automatically apply accidentals to a set of `voices`.\n     * The accidentals will be remembered between all the voices provided.\n     * Optionally, you can also provide an initial `keySignature`.\n     */\n    static applyAccidentals(voices, keySignature) {\n        const tickPositions = [];\n        const tickNoteMap = {};\n        // Sort the tickables in each voice by their tick position in the voice.\n        voices.forEach((voice) => {\n            const tickPosition = new Fraction(0, 1);\n            const tickable = voice.getTickables();\n            tickable.forEach((t) => {\n                if (t.shouldIgnoreTicks())\n                    return;\n                const notesAtPosition = tickNoteMap[tickPosition.value()];\n                if (!notesAtPosition) {\n                    tickPositions.push(tickPosition.value());\n                    tickNoteMap[tickPosition.value()] = [t];\n                }\n                else {\n                    notesAtPosition.push(t);\n                }\n                tickPosition.add(t.getTicks());\n            });\n        });\n        const music = new Music();\n        // Default key signature is C major.\n        if (!keySignature)\n            keySignature = 'C';\n        // Get the scale map, which represents the current state of each pitch.\n        const scaleMapKey = music.createScaleMap(keySignature);\n        const scaleMap = {};\n        tickPositions.forEach((tickPos) => {\n            const tickables = tickNoteMap[tickPos];\n            // Array to store all pitches that modified accidental states\n            // at this tick position\n            const modifiedPitches = [];\n            const processNote = (t) => {\n                // Only StaveNote implements .addModifier(), which is used below.\n                if (!isStaveNote(t) || t.isRest() || t.shouldIgnoreTicks()) {\n                    return;\n                }\n                // Go through each key and determine if an accidental should be applied.\n                const staveNote = t;\n                staveNote.keys.forEach((keyString, keyIndex) => {\n                    const key = music.getNoteParts(keyString.split('/')[0]);\n                    const octave = keyString.split('/')[1];\n                    // Force a natural for every key without an accidental\n                    const accidentalString = key.accidental || 'n';\n                    const pitch = key.root + accidentalString;\n                    // Determine if the current pitch has the same accidental\n                    // as the scale state\n                    if (!scaleMap[key.root + octave])\n                        scaleMap[key.root + octave] = scaleMapKey[key.root];\n                    const sameAccidental = scaleMap[key.root + octave] === pitch;\n                    // Determine if an identical pitch in the chord already\n                    // modified the accidental state\n                    const previouslyModified = modifiedPitches.indexOf(keyString) > -1;\n                    // Remove accidentals\n                    staveNote.getModifiers().forEach((modifier, index) => {\n                        if (isAccidental(modifier) && modifier.type == accidentalString && modifier.getIndex() == keyIndex) {\n                            staveNote.getModifiers().splice(index, 1);\n                        }\n                    });\n                    // Add the accidental to the StaveNote\n                    if (!sameAccidental || (sameAccidental && previouslyModified)) {\n                        // Modify the scale map so that the root pitch has an\n                        // updated state\n                        scaleMap[key.root + octave] = pitch;\n                        // Create the accidental\n                        const accidental = new Accidental(accidentalString);\n                        // Attach the accidental to the StaveNote\n                        staveNote.addModifier(accidental, keyIndex);\n                        // Add the pitch to list of pitches that modified accidentals\n                        modifiedPitches.push(keyString);\n                    }\n                });\n                // process grace notes\n                staveNote.getModifiers().forEach((modifier) => {\n                    if (isGraceNoteGroup(modifier)) {\n                        modifier.getGraceNotes().forEach(processNote);\n                    }\n                });\n            };\n            tickables.forEach(processNote);\n        });\n    }\n    reset() {\n        const fontScale = this.render_options.font_scale;\n        this.glyph = new Glyph(this.accidental.code, fontScale);\n        this.glyph.setOriginX(1.0);\n        if (this.cautionary) {\n            this.parenLeft = new Glyph(Tables.accidentalCodes('{').code, fontScale);\n            this.parenRight = new Glyph(Tables.accidentalCodes('}').code, fontScale);\n            this.parenLeft.setOriginX(1.0);\n            this.parenRight.setOriginX(1.0);\n        }\n    }\n    /** Get width in pixels. */\n    getWidth() {\n        if (this.cautionary) {\n            const parenLeft = defined(this.parenLeft);\n            const parenRight = defined(this.parenRight);\n            const parenWidth = parenLeft.getMetrics().width +\n                parenRight.getMetrics().width +\n                this.render_options.parenLeftPadding +\n                this.render_options.parenRightPadding;\n            return this.glyph.getMetrics().width + parenWidth;\n        }\n        else {\n            return this.glyph.getMetrics().width;\n        }\n    }\n    /** Attach this accidental to `note`, which must be a `StaveNote`. */\n    setNote(note) {\n        defined(note, 'ArgumentError', `Bad note value: ${note}`);\n        this.note = note;\n        // Accidentals attached to grace notes are rendered smaller.\n        if (isGraceNote(note)) {\n            this.render_options.font_scale = 25;\n            this.reset();\n        }\n        return this;\n    }\n    /** If called, draws parenthesis around accidental. */\n    setAsCautionary() {\n        this.cautionary = true;\n        this.render_options.font_scale = 28;\n        this.reset();\n        return this;\n    }\n    /** Render accidental onto canvas. */\n    draw() {\n        const { type, position, index, cautionary, x_shift, y_shift, glyph, render_options: { parenLeftPadding, parenRightPadding }, } = this;\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        // Figure out the start `x` and `y` coordinates for note and index.\n        const start = note.getModifierStartXY(position, index);\n        let accX = start.x + x_shift;\n        const accY = start.y + y_shift;\n        L('Rendering: ', type, accX, accY);\n        if (!cautionary) {\n            glyph.render(ctx, accX, accY);\n        }\n        else {\n            const parenLeft = defined(this.parenLeft);\n            const parenRight = defined(this.parenRight);\n            // Render the accidental in parentheses.\n            parenRight.render(ctx, accX, accY);\n            accX -= parenRight.getMetrics().width;\n            accX -= parenRightPadding;\n            accX -= this.accidental.parenRightPaddingAdjustment;\n            glyph.render(ctx, accX, accY);\n            accX -= glyph.getMetrics().width;\n            accX -= parenLeftPadding;\n            parenLeft.render(ctx, accX, accY);\n        }\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Accidental.DEBUG` to `true`. */\nAccidental.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements the `Stem` object. Generally this object is handled\n// by its parent `StemmableNote`.\nimport { Element } from './element';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Stem.DEBUG)\n        log('Vex.Flow.Stem', args);\n}\nexport class Stem extends Element {\n    constructor(options) {\n        super();\n        this.stem_up_y_offset = 0;\n        this.stem_down_y_offset = 0;\n        this.stem_up_y_base_offset = 0;\n        this.stem_down_y_base_offset = 0;\n        // Default notehead x bounds\n        this.x_begin = (options === null || options === void 0 ? void 0 : options.x_begin) || 0;\n        this.x_end = (options === null || options === void 0 ? void 0 : options.x_end) || 0;\n        // Y bounds for top/bottom most notehead\n        this.y_top = (options === null || options === void 0 ? void 0 : options.y_top) || 0;\n        this.y_bottom = (options === null || options === void 0 ? void 0 : options.y_bottom) || 0;\n        // Stem top extension\n        this.stem_extension = (options === null || options === void 0 ? void 0 : options.stem_extension) || 0;\n        // Direction of the stem\n        this.stem_direction = (options === null || options === void 0 ? void 0 : options.stem_direction) || 0;\n        // Flag to override all draw calls\n        this.hide = (options === null || options === void 0 ? void 0 : options.hide) || false;\n        this.isStemlet = (options === null || options === void 0 ? void 0 : options.isStemlet) || false;\n        this.stemletHeight = (options === null || options === void 0 ? void 0 : options.stemletHeight) || 0;\n        // Use to adjust the rendered height without affecting\n        // the results of `.getExtents()`\n        this.renderHeightAdjustment = 0;\n        this.setOptions(options);\n    }\n    static get CATEGORY() {\n        return Category.Stem;\n    }\n    // Stem directions\n    static get UP() {\n        return 1;\n    }\n    static get DOWN() {\n        return -1;\n    }\n    // Theme\n    static get WIDTH() {\n        return Tables.STEM_WIDTH;\n    }\n    static get HEIGHT() {\n        return Tables.STEM_HEIGHT;\n    }\n    setOptions(options) {\n        // Changing where the stem meets the head\n        this.stem_up_y_offset = (options === null || options === void 0 ? void 0 : options.stem_up_y_offset) || 0;\n        this.stem_down_y_offset = (options === null || options === void 0 ? void 0 : options.stem_down_y_offset) || 0;\n        this.stem_up_y_base_offset = (options === null || options === void 0 ? void 0 : options.stem_up_y_base_offset) || 0;\n        this.stem_down_y_base_offset = (options === null || options === void 0 ? void 0 : options.stem_down_y_base_offset) || 0;\n    }\n    // Set the x bounds for the default notehead\n    setNoteHeadXBounds(x_begin, x_end) {\n        this.x_begin = x_begin;\n        this.x_end = x_end;\n        return this;\n    }\n    // Set the direction of the stem in relation to the noteheads\n    setDirection(direction) {\n        this.stem_direction = direction;\n    }\n    // Set the extension for the stem, generally for flags or beams\n    setExtension(ext) {\n        this.stem_extension = ext;\n    }\n    getExtension() {\n        return this.stem_extension;\n    }\n    // The the y bounds for the top and bottom noteheads\n    setYBounds(y_top, y_bottom) {\n        this.y_top = y_top;\n        this.y_bottom = y_bottom;\n    }\n    // Gets the entire height for the stem\n    getHeight() {\n        const y_offset = this.stem_direction === Stem.UP ? this.stem_up_y_offset : this.stem_down_y_offset;\n        const unsigned_height = this.y_bottom - this.y_top + (Stem.HEIGHT - y_offset + this.stem_extension); // parentheses just for grouping.\n        return unsigned_height * this.stem_direction;\n    }\n    getBoundingBox() {\n        throw new RuntimeError('NotImplemented', 'getBoundingBox() not implemented.');\n    }\n    // Get the y coordinates for the very base of the stem to the top of\n    // the extension\n    getExtents() {\n        const isStemUp = this.stem_direction === Stem.UP;\n        const ys = [this.y_top, this.y_bottom];\n        const stemHeight = Stem.HEIGHT + this.stem_extension;\n        const innerMostNoteheadY = (isStemUp ? Math.min : Math.max)(...ys);\n        const outerMostNoteheadY = (isStemUp ? Math.max : Math.min)(...ys);\n        const stemTipY = innerMostNoteheadY + stemHeight * -this.stem_direction;\n        return { topY: stemTipY, baseY: outerMostNoteheadY };\n    }\n    setVisibility(isVisible) {\n        this.hide = !isVisible;\n        return this;\n    }\n    setStemlet(isStemlet, stemletHeight) {\n        this.isStemlet = isStemlet;\n        this.stemletHeight = stemletHeight;\n        return this;\n    }\n    adjustHeightForFlag() {\n        this.renderHeightAdjustment = Tables.currentMusicFont().lookupMetric('stem.heightAdjustmentForFlag', -3);\n    }\n    adjustHeightForBeam() {\n        this.renderHeightAdjustment = -Stem.WIDTH / 2;\n    }\n    // Render the stem onto the canvas\n    draw() {\n        this.setRendered();\n        if (this.hide)\n            return;\n        const ctx = this.checkContext();\n        let stem_x;\n        let stem_y;\n        const stem_direction = this.stem_direction;\n        let y_base_offset = 0;\n        if (stem_direction === Stem.DOWN) {\n            // Down stems are rendered to the left of the head.\n            stem_x = this.x_begin;\n            stem_y = this.y_top + this.stem_down_y_offset;\n            y_base_offset = this.stem_down_y_base_offset;\n        }\n        else {\n            // Up stems are rendered to the right of the head.\n            stem_x = this.x_end;\n            stem_y = this.y_bottom - this.stem_up_y_offset;\n            y_base_offset = this.stem_up_y_base_offset;\n        }\n        const stemHeight = this.getHeight();\n        L('Rendering stem - ', 'Top Y: ', this.y_top, 'Bottom Y: ', this.y_bottom);\n        // The offset from the stem's base which is required fo satisfy the stemlet height\n        const stemletYOffset = this.isStemlet ? stemHeight - this.stemletHeight * this.stem_direction : 0;\n        // Draw the stem\n        ctx.save();\n        this.applyStyle(ctx);\n        ctx.beginPath();\n        ctx.setLineWidth(Stem.WIDTH);\n        ctx.moveTo(stem_x, stem_y - stemletYOffset + y_base_offset);\n        ctx.lineTo(stem_x, stem_y - stemHeight - this.renderHeightAdjustment * stem_direction);\n        ctx.stroke();\n        this.restoreStyle(ctx);\n        ctx.restore();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Stem.DEBUG` to `true`. */\nStem.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font, FontStyle, FontWeight } from './font';\nimport { log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (TextFormatter.DEBUG)\n        log('Vex.Flow.TextFormatter', args);\n}\n/**\n * Text widths are stored in a cache, so we don't have to recompute widths\n * for the same font + string combination.\n *\n * The cache is first keyed by the font information. The key is of the form:\n *   `${family}-${size}-${weight}-${style}`\n * The second level key is the specific text to be measured.\n *\n * The stored value is the measured width in `em` units.\n *   textWidth == textWidthCache[cacheKey][textToMeasure]\n */\nconst textWidthCache = {};\n/**\n * Applications may register additional fonts via `TextFormatter.registerInfo(info)`.\n * The metrics for those fonts will be made available to the application.\n */\nconst registry = {};\nexport class TextFormatter {\n    /**\n     * Use `TextFormatter.create(...)` to build an instance from information previously\n     * registered via `TextFormatter.registerInfo(info)`.\n     */\n    constructor(formatterInfo) {\n        /** Font family. */\n        this.family = '';\n        /** Specified in `pt` units. */\n        this.size = 14;\n        /** Font metrics are extracted at 1000 upem (units per em). */\n        this.resolution = 1000;\n        /**\n         * For text formatting, we do not require glyph outlines, but instead rely on glyph\n         * bounding box metrics such as:\n         * ```\n         * {\n         *    x_min: 48,\n         *    x_max: 235,\n         *    y_min: -17,\n         *    y_max: 734,\n         *    ha: 751,\n         *    leftSideBearing: 48,\n         *    advanceWidth: 286,\n         *  }\n         * ```\n         */\n        this.glyphs = {};\n        this.serifs = false;\n        this.monospaced = false;\n        this.italic = false;\n        this.bold = false;\n        this.superscriptOffset = 0;\n        this.subscriptOffset = 0;\n        this.maxSizeGlyph = 'H';\n        // This is an internal key used to index the `textWidthCache`.\n        this.cacheKey = '';\n        this.updateParams(formatterInfo);\n    }\n    /**\n     * Return all registered font families.\n     */\n    static getFontFamilies() {\n        const registeredFonts = [];\n        for (const fontFamily in registry) {\n            const formatterInfo = registry[fontFamily];\n            registeredFonts.push(Object.assign({}, formatterInfo));\n        }\n        return registeredFonts;\n    }\n    /**\n     * Call `TextFormatter.registerInfo(info)` to register font information before using this method.\n     *\n     * This method creates a formatter for the font that most closely matches the requested font.\n     * We compare font family, bold, and italic attributes.\n     * This method will return a fallback formatter if there are no matches.\n     */\n    static create(requestedFont = {}) {\n        L('create: ', requestedFont);\n        if (!requestedFont.family) {\n            requestedFont.family = Font.SANS_SERIF;\n        }\n        // TODO: One potential (small) optimization is to cache the TextFormatter object\n        // returned for each font info. We would probably want to clear the cache if\n        // the registry is ever updated.\n        const candidates = [];\n        // The incoming font family is a string of comma-separated font family names.\n        // (e.g., `PetalumaScript, Arial, sans-serif`).\n        const requestedFamilies = requestedFont.family.split(/\\s*,\\s*/);\n        for (const requestedFamily of requestedFamilies) {\n            for (const fontFamily in registry) {\n                // Support cases where the registry contains 'Roboto Slab Medium',\n                // but the requestedFont.family is 'Roboto Slab'.\n                if (fontFamily.startsWith(requestedFamily)) {\n                    candidates.push(registry[fontFamily]);\n                }\n            }\n            if (candidates.length > 0) {\n                break;\n            }\n        }\n        let formatter;\n        if (candidates.length === 0) {\n            // No match, so return a fallback text formatter.\n            formatter = new TextFormatter(Object.values(registry)[0]);\n        }\n        else if (candidates.length === 1) {\n            formatter = new TextFormatter(candidates[0]);\n        }\n        else {\n            const bold = Font.isBold(requestedFont.weight);\n            const italic = Font.isItalic(requestedFont.style);\n            const perfectMatch = candidates.find((f) => f.bold === bold && f.italic === italic);\n            if (perfectMatch) {\n                formatter = new TextFormatter(perfectMatch);\n            }\n            else {\n                const partialMatch = candidates.find((f) => f.italic === italic || f.bold === bold);\n                if (partialMatch) {\n                    formatter = new TextFormatter(partialMatch);\n                }\n                else {\n                    formatter = new TextFormatter(candidates[0]);\n                }\n            }\n        }\n        const fontSize = requestedFont.size;\n        if (typeof fontSize !== 'undefined') {\n            const fontSizeInPt = Font.convertSizeToPointValue(fontSize);\n            formatter.setFontSize(fontSizeInPt);\n        }\n        return formatter;\n    }\n    /**\n     * @param fontFamily used as a key to the font registry.\n     * @returns the same info object that was passed in via `TextFormatter.registerInfo(info)`\n     */\n    static getInfo(fontFamily) {\n        return registry[fontFamily];\n    }\n    /**\n     * Apps may register their own fonts and metrics, and those metrics\n     * will be available to the app for formatting.\n     *\n     * Metrics can be generated from a font file using fontgen_text.js in the tools/fonts directory.\n     * @param info\n     * @param overwrite\n     */\n    static registerInfo(info, overwrite = false) {\n        L('registerInfo: ', info, overwrite);\n        const fontFamily = info.family;\n        const currFontInfo = registry[fontFamily];\n        if (currFontInfo === undefined || overwrite) {\n            registry[fontFamily] = info;\n        }\n    }\n    updateParams(params) {\n        if (params.family)\n            this.family = params.family;\n        if (params.resolution)\n            this.resolution = params.resolution;\n        if (params.glyphs)\n            this.glyphs = params.glyphs;\n        if (params.serifs)\n            this.serifs = params.serifs;\n        if (params.monospaced)\n            this.monospaced = params.monospaced;\n        if (params.italic)\n            this.italic = params.italic;\n        if (params.bold)\n            this.bold = params.bold;\n        if (params.maxSizeGlyph)\n            this.maxSizeGlyph = params.maxSizeGlyph;\n        if (params.superscriptOffset)\n            this.superscriptOffset = params.superscriptOffset;\n        if (params.subscriptOffset)\n            this.subscriptOffset = params.subscriptOffset;\n        this.updateCacheKey();\n    }\n    /** Create a hash with the current font data, so we can cache computed widths. */\n    updateCacheKey() {\n        const family = this.family.replace(/\\s+/g, '_');\n        const size = this.size;\n        const weight = this.bold ? FontWeight.BOLD : FontWeight.NORMAL;\n        const style = this.italic ? FontStyle.ITALIC : FontStyle.NORMAL;\n        // Use the same key format as SVGContext.\n        this.cacheKey = `${family}%${size}%${weight}%${style}`;\n    }\n    /**\n     * The glyphs table is indexed by the character (e.g., 'C', '@').\n     * See: robotoslab_glyphs.ts & petalumascript_glyphs.ts.\n     */\n    getGlyphMetrics(character) {\n        if (this.glyphs[character]) {\n            return this.glyphs[character];\n        }\n        else {\n            return this.glyphs[this.maxSizeGlyph];\n        }\n    }\n    get maxHeight() {\n        const metrics = this.getGlyphMetrics(this.maxSizeGlyph);\n        return (metrics.ha / this.resolution) * this.fontSizeInPixels;\n    }\n    /**\n     * Retrieve the character's advanceWidth as a fraction of an `em` unit.\n     * For the space character ' ' as defined in the:\n     *   petalumascript_glyphs.ts: 250 advanceWidth in the 1000 unitsPerEm font returns 0.25.\n     *   robotoslab_glyphs.ts:     509 advanceWidth in the 2048 unitsPerEm font returns 0.2485.\n     */\n    getWidthForCharacterInEm(c) {\n        var _a;\n        const metrics = this.getGlyphMetrics(c);\n        if (!metrics) {\n            // An arbitrary number, close to the `em` width of the '#' and '5' characters in PetalumaScript.\n            return 0.65;\n        }\n        else {\n            const advanceWidth = (_a = metrics.advanceWidth) !== null && _a !== void 0 ? _a : 0;\n            return advanceWidth / this.resolution;\n        }\n    }\n    /**\n     * Retrieve the total width of `text` in `em` units.\n     */\n    getWidthForTextInEm(text) {\n        const key = this.cacheKey;\n        // Get the cache for this specific font family, size, weight, style combination.\n        // The cache contains previously computed widths for different `text` strings.\n        let cachedWidths = textWidthCache[key];\n        if (cachedWidths === undefined) {\n            cachedWidths = {};\n            textWidthCache[key] = cachedWidths;\n        }\n        let width = cachedWidths[text];\n        if (width === undefined) {\n            width = 0;\n            for (let i = 0; i < text.length; ++i) {\n                width += this.getWidthForCharacterInEm(text[i]);\n            }\n            cachedWidths[text] = width;\n        }\n        return width;\n    }\n    /** The width of the text (in `em`) is scaled by the font size (in `px`). */\n    getWidthForTextInPx(text) {\n        return this.getWidthForTextInEm(text) * this.fontSizeInPixels;\n    }\n    /**\n     * @param size in pt.\n     */\n    setFontSize(size) {\n        this.size = size;\n        // The width cache key depends on the current font size.\n        this.updateCacheKey();\n        return this;\n    }\n    /** `this.size` is specified in points. Convert to pixels. */\n    get fontSizeInPixels() {\n        return this.size * Font.scaleToPxFrom.pt;\n    }\n    getResolution() {\n        return this.resolution;\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.TextFormatter.DEBUG` to `true`. */\nTextFormatter.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Modifier, ModifierPosition } from './modifier';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { TextFormatter } from './textformatter';\nimport { Category, isStemmableNote, isTabNote } from './typeguard';\nimport { log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Annotation.DEBUG)\n        log('Vex.Flow.Annotation', args);\n}\nexport var AnnotationHorizontalJustify;\n(function (AnnotationHorizontalJustify) {\n    AnnotationHorizontalJustify[AnnotationHorizontalJustify[\"LEFT\"] = 1] = \"LEFT\";\n    AnnotationHorizontalJustify[AnnotationHorizontalJustify[\"CENTER\"] = 2] = \"CENTER\";\n    AnnotationHorizontalJustify[AnnotationHorizontalJustify[\"RIGHT\"] = 3] = \"RIGHT\";\n    AnnotationHorizontalJustify[AnnotationHorizontalJustify[\"CENTER_STEM\"] = 4] = \"CENTER_STEM\";\n})(AnnotationHorizontalJustify || (AnnotationHorizontalJustify = {}));\nexport var AnnotationVerticalJustify;\n(function (AnnotationVerticalJustify) {\n    AnnotationVerticalJustify[AnnotationVerticalJustify[\"TOP\"] = 1] = \"TOP\";\n    AnnotationVerticalJustify[AnnotationVerticalJustify[\"CENTER\"] = 2] = \"CENTER\";\n    AnnotationVerticalJustify[AnnotationVerticalJustify[\"BOTTOM\"] = 3] = \"BOTTOM\";\n    AnnotationVerticalJustify[AnnotationVerticalJustify[\"CENTER_STEM\"] = 4] = \"CENTER_STEM\";\n})(AnnotationVerticalJustify || (AnnotationVerticalJustify = {}));\n/**\n * Annotations are modifiers that can be attached to\n * notes.\n *\n * See `tests/annotation_tests.ts` for usage examples.\n */\nexport class Annotation extends Modifier {\n    /**\n     * Annotations inherit from `Modifier` and is positioned correctly when\n     * in a `ModifierContext`.\n     * Create a new `Annotation` with the string `text`.\n     */\n    constructor(text) {\n        super();\n        this.text = text;\n        this.horizontalJustification = AnnotationHorizontalJustify.CENTER;\n        // warning: the default in the constructor is TOP, but in the factory the default is BOTTOM.\n        // this is to support legacy application that may expect this.\n        this.verticalJustification = AnnotationVerticalJustify.TOP;\n        this.resetFont();\n        // The default width is calculated from the text.\n        this.setWidth(Tables.textWidth(text));\n    }\n    /** Annotations category string. */\n    static get CATEGORY() {\n        return Category.Annotation;\n    }\n    // Use the same padding for annotations as note head so the\n    // words don't run into each other.\n    static get minAnnotationPadding() {\n        const musicFont = Tables.currentMusicFont();\n        return musicFont.lookupMetric('glyphs.noteHead.minPadding');\n    }\n    /** Arrange annotations within a `ModifierContext` */\n    static format(annotations, state) {\n        if (!annotations || annotations.length === 0)\n            return false;\n        let leftWidth = 0;\n        let rightWidth = 0;\n        let maxLeftGlyphWidth = 0;\n        let maxRightGlyphWidth = 0;\n        for (let i = 0; i < annotations.length; ++i) {\n            const annotation = annotations[i];\n            const textFormatter = TextFormatter.create(annotation.textFont);\n            // Text height is expressed in fractional stave spaces.\n            const textLines = (5 + textFormatter.maxHeight) / Tables.STAVE_LINE_DISTANCE;\n            let verticalSpaceNeeded = textLines;\n            const note = annotation.checkAttachedNote();\n            const glyphWidth = note.getGlyph().getWidth();\n            // Get the text width from the font metrics.\n            const textWidth = textFormatter.getWidthForTextInPx(annotation.text);\n            if (annotation.horizontalJustification === AnnotationHorizontalJustify.LEFT) {\n                maxLeftGlyphWidth = Math.max(glyphWidth, maxLeftGlyphWidth);\n                leftWidth = Math.max(leftWidth, textWidth) + Annotation.minAnnotationPadding;\n            }\n            else if (annotation.horizontalJustification === AnnotationHorizontalJustify.RIGHT) {\n                maxRightGlyphWidth = Math.max(glyphWidth, maxRightGlyphWidth);\n                rightWidth = Math.max(rightWidth, textWidth);\n            }\n            else {\n                leftWidth = Math.max(leftWidth, textWidth / 2) + Annotation.minAnnotationPadding;\n                rightWidth = Math.max(rightWidth, textWidth / 2);\n                maxLeftGlyphWidth = Math.max(glyphWidth / 2, maxLeftGlyphWidth);\n                maxRightGlyphWidth = Math.max(glyphWidth / 2, maxRightGlyphWidth);\n            }\n            const stave = note.getStave();\n            const stemDirection = note.hasStem() ? note.getStemDirection() : Stem.UP;\n            let stemHeight = 0;\n            let lines = 5;\n            if (isTabNote(note)) {\n                if (note.render_options.draw_stem) {\n                    const stem = note.getStem();\n                    if (stem) {\n                        stemHeight = Math.abs(stem.getHeight()) / Tables.STAVE_LINE_DISTANCE;\n                    }\n                }\n                else {\n                    stemHeight = 0;\n                }\n            }\n            else if (isStemmableNote(note)) {\n                const stem = note.getStem();\n                if (stem && note.getNoteType() === 'n') {\n                    stemHeight = Math.abs(stem.getHeight()) / Tables.STAVE_LINE_DISTANCE;\n                }\n            }\n            if (stave) {\n                lines = stave.getNumLines();\n            }\n            if (annotation.verticalJustification === this.VerticalJustify.TOP) {\n                let noteLine = note.getLineNumber(true);\n                if (isTabNote(note)) {\n                    noteLine = lines - (note.leastString() - 0.5);\n                }\n                if (stemDirection === Stem.UP) {\n                    noteLine += stemHeight;\n                }\n                const curTop = noteLine + state.top_text_line + 0.5;\n                if (curTop < lines) {\n                    annotation.setTextLine(lines - noteLine);\n                    verticalSpaceNeeded += lines - noteLine;\n                    state.top_text_line = verticalSpaceNeeded;\n                }\n                else {\n                    annotation.setTextLine(state.top_text_line);\n                    state.top_text_line += verticalSpaceNeeded;\n                }\n            }\n            else if (annotation.verticalJustification === this.VerticalJustify.BOTTOM) {\n                let noteLine = lines - note.getLineNumber();\n                if (isTabNote(note)) {\n                    noteLine = note.greatestString() - 1;\n                }\n                if (stemDirection === Stem.DOWN) {\n                    noteLine += stemHeight;\n                }\n                const curBottom = noteLine + state.text_line + 1;\n                if (curBottom < lines) {\n                    annotation.setTextLine(lines - curBottom);\n                    verticalSpaceNeeded += lines - curBottom;\n                    state.text_line = verticalSpaceNeeded;\n                }\n                else {\n                    annotation.setTextLine(state.text_line);\n                    state.text_line += verticalSpaceNeeded;\n                }\n            }\n            else {\n                annotation.setTextLine(state.text_line);\n            }\n        }\n        const rightOverlap = Math.min(Math.max(rightWidth - maxRightGlyphWidth, 0), Math.max(rightWidth - state.right_shift, 0));\n        const leftOverlap = Math.min(Math.max(leftWidth - maxLeftGlyphWidth, 0), Math.max(leftWidth - state.left_shift, 0));\n        state.left_shift += leftOverlap;\n        state.right_shift += rightOverlap;\n        return true;\n    }\n    /**\n     * Set vertical position of text (above or below stave).\n     * @param just value in `AnnotationVerticalJustify`.\n     */\n    setVerticalJustification(just) {\n        this.verticalJustification = typeof just === 'string' ? Annotation.VerticalJustifyString[just] : just;\n        return this;\n    }\n    /**\n     * Get horizontal justification.\n     */\n    getJustification() {\n        return this.horizontalJustification;\n    }\n    /**\n     * Set horizontal justification.\n     * @param justification value in `Annotation.Justify`.\n     */\n    setJustification(just) {\n        this.horizontalJustification = typeof just === 'string' ? Annotation.HorizontalJustifyString[just] : just;\n        return this;\n    }\n    /** Render text beside the note. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        const stemDirection = note.hasStem() ? note.getStemDirection() : Stem.UP;\n        const textFormatter = TextFormatter.create(this.textFont);\n        const start = note.getModifierStartXY(ModifierPosition.ABOVE, this.index);\n        this.setRendered();\n        // We're changing context parameters. Save current state.\n        ctx.save();\n        // Apply style might not save context, if this.style is undefined, so we\n        // still need to save context state just before this, since we will be\n        // changing ctx parameters below.\n        this.applyStyle();\n        const classString = Object.keys(this.getAttribute('classes')).join(' ');\n        ctx.openGroup(classString, this.getAttribute('id'));\n        ctx.setFont(this.textFont);\n        const text_width = ctx.measureText(this.text).width;\n        const text_height = textFormatter.maxHeight + 2;\n        let x;\n        let y;\n        if (this.horizontalJustification === AnnotationHorizontalJustify.LEFT) {\n            x = start.x;\n        }\n        else if (this.horizontalJustification === AnnotationHorizontalJustify.RIGHT) {\n            x = start.x - text_width;\n        }\n        else if (this.horizontalJustification === AnnotationHorizontalJustify.CENTER) {\n            x = start.x - text_width / 2;\n        } /* CENTER_STEM */\n        else {\n            x = note.getStemX() - text_width / 2;\n        }\n        let stem_ext = {};\n        let spacing = 0;\n        const has_stem = note.hasStem();\n        const stave = note.checkStave();\n        // The position of the text varies based on whether or not the note\n        // has a stem.\n        if (has_stem) {\n            stem_ext = note.checkStem().getExtents();\n            spacing = stave.getSpacingBetweenLines();\n        }\n        if (this.verticalJustification === AnnotationVerticalJustify.BOTTOM) {\n            // Use the largest (lowest) Y value\n            const ys = note.getYs();\n            y = ys.reduce((a, b) => (a > b ? a : b));\n            y += (this.text_line + 1) * Tables.STAVE_LINE_DISTANCE + text_height;\n            if (has_stem && stemDirection === Stem.DOWN) {\n                y = Math.max(y, stem_ext.topY + text_height + spacing * this.text_line);\n            }\n        }\n        else if (this.verticalJustification === AnnotationVerticalJustify.CENTER) {\n            const yt = note.getYForTopText(this.text_line) - 1;\n            const yb = stave.getYForBottomText(this.text_line);\n            y = yt + (yb - yt) / 2 + text_height / 2;\n        }\n        else if (this.verticalJustification === AnnotationVerticalJustify.TOP) {\n            y = note.getYs()[0] - (this.text_line + 1) * Tables.STAVE_LINE_DISTANCE;\n            if (has_stem && stemDirection === Stem.UP) {\n                // If the stem is above the stave already, go with default line width vs. actual\n                // since the lines between don't really matter.\n                spacing = stem_ext.topY < stave.getTopLineTopY() ? Tables.STAVE_LINE_DISTANCE : spacing;\n                y = Math.min(y, stem_ext.topY - spacing * (this.text_line + 1));\n            }\n        } /* CENTER_STEM */\n        else {\n            const extents = note.getStemExtents();\n            y = extents.topY + (extents.baseY - extents.topY) / 2 + text_height / 2;\n        }\n        L('Rendering annotation: ', this.text, x, y);\n        ctx.fillText(this.text, x, y);\n        ctx.closeGroup();\n        this.restoreStyle();\n        ctx.restore();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Annotation.DEBUG` to `true`. */\nAnnotation.DEBUG = false;\nAnnotation.TEXT_FONT = Object.assign({}, Element.TEXT_FONT);\n/** Text annotations can be positioned and justified relative to the note. */\nAnnotation.HorizontalJustify = AnnotationHorizontalJustify;\nAnnotation.HorizontalJustifyString = {\n    left: AnnotationHorizontalJustify.LEFT,\n    right: AnnotationHorizontalJustify.RIGHT,\n    center: AnnotationHorizontalJustify.CENTER,\n    centerStem: AnnotationHorizontalJustify.CENTER_STEM,\n};\nAnnotation.VerticalJustify = AnnotationVerticalJustify;\nAnnotation.VerticalJustifyString = {\n    above: AnnotationVerticalJustify.TOP,\n    top: AnnotationVerticalJustify.TOP,\n    below: AnnotationVerticalJustify.BOTTOM,\n    bottom: AnnotationVerticalJustify.BOTTOM,\n    center: AnnotationVerticalJustify.CENTER,\n    centerStem: AnnotationVerticalJustify.CENTER_STEM,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns.\n// MIT License\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category, isGraceNote, isStaveNote, isStemmableNote, isTabNote } from './typeguard';\nimport { defined, log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Articulation.DEBUG)\n        log('Vex.Flow.Articulation', args);\n}\nconst { ABOVE, BELOW } = Modifier.Position;\nfunction roundToNearestHalf(mathFn, value) {\n    return mathFn(value / 0.5) * 0.5;\n}\n// This includes both staff and ledger lines\nfunction isWithinLines(line, position) {\n    return position === ABOVE ? line <= 5 : line >= 1;\n}\nfunction getRoundingFunction(line, position) {\n    if (isWithinLines(line, position)) {\n        if (position === ABOVE) {\n            return Math.ceil;\n        }\n        else {\n            return Math.floor;\n        }\n    }\n    else {\n        return Math.round;\n    }\n}\nfunction snapLineToStaff(canSitBetweenLines, line, position, offsetDirection) {\n    // Initially, snap to nearest staff line or space\n    const snappedLine = roundToNearestHalf(getRoundingFunction(line, position), line);\n    const canSnapToStaffSpace = canSitBetweenLines && isWithinLines(snappedLine, position);\n    const onStaffLine = snappedLine % 1 === 0;\n    if (canSnapToStaffSpace && onStaffLine) {\n        const HALF_STAFF_SPACE = 0.5;\n        return snappedLine + HALF_STAFF_SPACE * -offsetDirection;\n    }\n    else {\n        return snappedLine;\n    }\n}\n// Helper function for checking if a Note object is either a StaveNote or a GraceNote.\nconst isStaveOrGraceNote = (note) => isStaveNote(note) || isGraceNote(note);\nfunction getTopY(note, textLine) {\n    const stemDirection = note.getStemDirection();\n    const { topY: stemTipY, baseY: stemBaseY } = note.getStemExtents();\n    if (isStaveOrGraceNote(note)) {\n        if (note.hasStem()) {\n            if (stemDirection === Stem.UP) {\n                return stemTipY;\n            }\n            else {\n                return stemBaseY;\n            }\n        }\n        else {\n            return Math.min(...note.getYs());\n        }\n    }\n    else if (isTabNote(note)) {\n        if (note.hasStem()) {\n            if (stemDirection === Stem.UP) {\n                return stemTipY;\n            }\n            else {\n                return note.checkStave().getYForTopText(textLine);\n            }\n        }\n        else {\n            return note.checkStave().getYForTopText(textLine);\n        }\n    }\n    else {\n        throw new RuntimeError('UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes');\n    }\n}\nfunction getBottomY(note, textLine) {\n    const stemDirection = note.getStemDirection();\n    const { topY: stemTipY, baseY: stemBaseY } = note.getStemExtents();\n    if (isStaveOrGraceNote(note)) {\n        if (note.hasStem()) {\n            if (stemDirection === Stem.UP) {\n                return stemBaseY;\n            }\n            else {\n                return stemTipY;\n            }\n        }\n        else {\n            return Math.max(...note.getYs());\n        }\n    }\n    else if (isTabNote(note)) {\n        if (note.hasStem()) {\n            if (stemDirection === Stem.UP) {\n                return note.checkStave().getYForBottomText(textLine);\n            }\n            else {\n                return stemTipY;\n            }\n        }\n        else {\n            return note.checkStave().getYForBottomText(textLine);\n        }\n    }\n    else {\n        throw new RuntimeError('UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes');\n    }\n}\n/**\n * Get the initial offset of the articulation from the y value of the starting position.\n * This is required because the top/bottom text positions already have spacing applied to\n * provide a \"visually pleasant\" default position. However the y values provided from\n * the stavenote's top/bottom do *not* have any pre-applied spacing. This function\n * normalizes this asymmetry.\n * @param note\n * @param position\n * @returns\n */\nfunction getInitialOffset(note, position) {\n    const isOnStemTip = (position === ABOVE && note.getStemDirection() === Stem.UP) ||\n        (position === BELOW && note.getStemDirection() === Stem.DOWN);\n    if (isStaveOrGraceNote(note)) {\n        if (note.hasStem() && isOnStemTip) {\n            return 0.5;\n        }\n        else {\n            // this amount is larger than the stem-tip offset because we start from\n            // the center of the notehead\n            return 1;\n        }\n    }\n    else {\n        if (note.hasStem() && isOnStemTip) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n}\n/**\n * Articulations and Accents are modifiers that can be\n * attached to notes. The complete list of articulations is available in\n * `tables.ts` under `Vex.Flow.articulationCodes`.\n *\n * See `tests/articulation_tests.ts` for usage examples.\n */\nexport class Articulation extends Modifier {\n    /**\n     * Create a new articulation.\n     * @param type entry in `Vex.Flow.articulationCodes` in `tables.ts`\n     */\n    constructor(type) {\n        super();\n        this.type = type;\n        this.position = BELOW;\n        this.render_options = {\n            font_scale: 38,\n        };\n        this.reset();\n    }\n    /** Articulations category string. */\n    static get CATEGORY() {\n        return Category.Articulation;\n    }\n    /**\n     * FIXME:\n     * Most of the complex formatting logic (ie: snapping to space) is\n     * actually done in .render(). But that logic belongs in this method.\n     *\n     * Unfortunately, this isn't possible because, by this point, stem lengths\n     * have not yet been finalized. Finalized stem lengths are required to determine the\n     * initial position of any stem-side articulation.\n     *\n     * This indicates that all objects should have their stave set before being\n     * formatted. It can't be an optional if you want accurate vertical positioning.\n     * Consistently positioned articulations that play nice with other modifiers\n     * won't be possible until we stop relying on render-time formatting.\n     *\n     * Ideally, when this function has completed, the vertical articulation positions\n     * should be ready to render without further adjustment. But the current state\n     * is far from this ideal.\n     */\n    static format(articulations, state) {\n        if (!articulations || articulations.length === 0)\n            return false;\n        const margin = 0.5;\n        let maxGlyphWidth = 0;\n        const getIncrement = (articulation, line, position) => roundToNearestHalf(getRoundingFunction(line, position), defined(articulation.glyph.getMetrics().height) / 10 + margin);\n        articulations.forEach((articulation) => {\n            const note = articulation.checkAttachedNote();\n            maxGlyphWidth = Math.max(note.getGlyph().getWidth(), maxGlyphWidth);\n            let lines = 5;\n            const stemDirection = note.hasStem() ? note.getStemDirection() : Stem.UP;\n            let stemHeight = 0;\n            // Decide if we need to consider beam direction in placement.\n            if (isStemmableNote(note)) {\n                const stem = note.getStem();\n                if (stem) {\n                    stemHeight = Math.abs(stem.getHeight()) / Tables.STAVE_LINE_DISTANCE;\n                }\n            }\n            const stave = note.getStave();\n            if (stave) {\n                lines = stave.getNumLines();\n            }\n            if (articulation.getPosition() === ABOVE) {\n                let noteLine = note.getLineNumber(true);\n                if (stemDirection === Stem.UP) {\n                    noteLine += stemHeight;\n                }\n                let increment = getIncrement(articulation, state.top_text_line, ABOVE);\n                const curTop = noteLine + state.top_text_line + 0.5;\n                // If articulation must be above stave, add lines between note and stave top\n                if (!articulation.articulation.between_lines && curTop < lines) {\n                    increment += lines - curTop;\n                }\n                articulation.setTextLine(state.top_text_line);\n                state.top_text_line += increment;\n            }\n            else if (articulation.getPosition() === BELOW) {\n                let noteLine = Math.max(lines - note.getLineNumber(), 0);\n                if (stemDirection === Stem.DOWN) {\n                    noteLine += stemHeight;\n                }\n                let increment = getIncrement(articulation, state.text_line, BELOW);\n                const curBottom = noteLine + state.text_line + 0.5;\n                // if articulation must be below stave, add lines from note to stave bottom\n                if (!articulation.articulation.between_lines && curBottom < lines) {\n                    increment += lines - curBottom;\n                }\n                articulation.setTextLine(state.text_line);\n                state.text_line += increment;\n            }\n        });\n        const width = articulations\n            .map((articulation) => articulation.getWidth())\n            .reduce((maxWidth, articWidth) => Math.max(articWidth, maxWidth));\n        const overlap = Math.min(Math.max(width - maxGlyphWidth, 0), Math.max(width - (state.left_shift + state.right_shift), 0));\n        state.left_shift += overlap / 2;\n        state.right_shift += overlap / 2;\n        return true;\n    }\n    static easyScoreHook({ articulations }, note, builder) {\n        if (!articulations)\n            return;\n        const articNameToCode = {\n            staccato: 'a.',\n            tenuto: 'a-',\n            accent: 'a>',\n        };\n        articulations\n            .split(',')\n            .map((articString) => articString.trim().split('.'))\n            .map(([name, position]) => {\n            const artic = { type: articNameToCode[name] };\n            if (position)\n                artic.position = Modifier.PositionString[position];\n            return builder.getFactory().Articulation(artic);\n        })\n            .map((artic) => note.addModifier(artic, 0));\n    }\n    reset() {\n        this.articulation = Tables.articulationCodes(this.type);\n        const articulation = defined(this.articulation, 'ArgumentError', `Articulation not found: ${this.type}`);\n        const code = (this.position === ABOVE ? articulation.aboveCode : articulation.belowCode) || articulation.code;\n        this.glyph = new Glyph(code !== null && code !== void 0 ? code : '', this.render_options.font_scale);\n        this.setWidth(defined(this.glyph.getMetrics().width));\n    }\n    /** Render articulation in position next to note. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const index = this.checkIndex();\n        const { position, glyph, text_line: textLine } = this;\n        const canSitBetweenLines = this.articulation.between_lines;\n        const stave = note.checkStave();\n        const staffSpace = stave.getSpacingBetweenLines();\n        const isTab = isTabNote(note);\n        // Articulations are centered over/under the note head.\n        const { x } = note.getModifierStartXY(position, index);\n        const shouldSitOutsideStaff = !canSitBetweenLines || isTab;\n        const initialOffset = getInitialOffset(note, position);\n        const padding = Tables.currentMusicFont().lookupMetric(`articulation.${glyph.getCode()}.padding`, 0);\n        let y = {\n            [ABOVE]: () => {\n                glyph.setOrigin(0.5, 1);\n                const y = getTopY(note, textLine) - (textLine + initialOffset) * staffSpace;\n                return shouldSitOutsideStaff ? Math.min(stave.getYForTopText(Articulation.INITIAL_OFFSET), y) : y;\n            },\n            [BELOW]: () => {\n                glyph.setOrigin(0.5, 0);\n                const y = getBottomY(note, textLine) + (textLine + initialOffset) * staffSpace;\n                return shouldSitOutsideStaff ? Math.max(stave.getYForBottomText(Articulation.INITIAL_OFFSET), y) : y;\n            },\n        }[position]();\n        if (!isTab) {\n            const offsetDirection = position === ABOVE ? -1 : +1;\n            const noteLine = note.getKeyProps()[index].line;\n            const distanceFromNote = (note.getYs()[index] - y) / staffSpace;\n            const articLine = distanceFromNote + Number(noteLine);\n            const snappedLine = snapLineToStaff(canSitBetweenLines, articLine, position, offsetDirection);\n            if (isWithinLines(snappedLine, position))\n                glyph.setOrigin(0.5, 0.5);\n            y += Math.abs(snappedLine - articLine) * staffSpace * offsetDirection + padding * offsetDirection;\n        }\n        L(`Rendering articulation at (x: ${x}, y: ${y})`);\n        glyph.render(ctx, x, y);\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Articulation.DEBUG` to `true`. */\nArticulation.DEBUG = false;\nArticulation.INITIAL_OFFSET = -0.5;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2021.\n// MIT License\nimport { Category } from './typeguard';\nexport class RenderContext {\n    static get CATEGORY() {\n        return Category.RenderContext;\n    }\n    set font(f) {\n        this.setFont(f);\n    }\n    get font() {\n        return this.getFont();\n    }\n    /**\n     * This is kept for backwards compatibility with 3.0.9.\n     * @deprecated use `setFont(...)` instead since it now supports CSS font shorthand.\n     */\n    setRawFont(f) {\n        this.setFont(f);\n        return this;\n    }\n}\n/**\n * Draw a tiny dot marker on the specified context. A great debugging aid.\n * @param ctx context\n * @param x dot x coordinate\n * @param y dot y coordinate\n * @param color\n */\nexport function drawDot(ctx, x, y, color = '#F55') {\n    ctx.save();\n    ctx.setFillStyle(color);\n    // draw a circle\n    ctx.beginPath();\n    ctx.arc(x, y, 3, 0, Math.PI * 2, true);\n    ctx.closePath();\n    ctx.fill();\n    ctx.restore();\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\n/**\n * Tickable represents a element that sit on a score and\n * has a duration, i.e., Tickables occupy space in the musical rendering dimension.\n */\nexport class Tickable extends Element {\n    constructor() {\n        super();\n        this._preFormatted = false;\n        this._postFormatted = false;\n        // These properties represent the duration of\n        // this tickable element.\n        this.ticks = new Fraction(0, 1); // Fractional value of ticks\n        this.intrinsicTicks = 0; // Floating point value of ticks\n        this.tickMultiplier = new Fraction(1, 1);\n        // Formatter metrics\n        this.width = 0;\n        this.x_shift = 0; // Shift from tick context\n        this.modifiers = [];\n        this.tupletStack = [];\n        this.align_center = false;\n        this.center_x_shift = 0; // Shift from tick context if center aligned\n        // This flag tells the formatter to ignore this tickable during\n        // formatting and justification. It is set by tickables such as BarNote.\n        this.ignore_ticks = false;\n        // This is a space for an external formatting class or function to maintain\n        // metrics.\n        this.formatterMetrics = {\n            // The freedom of a tickable is the distance it can move without colliding\n            // with neighboring elements. A formatter can set these values during its\n            // formatting pass, which a different formatter can then use to fine tune.\n            freedom: { left: 0, right: 0 },\n            // The simplified rational duration of this tick as a string. It can be\n            // used as an index to a map or hashtable.\n            duration: '',\n            // The number of formatting iterations undergone.\n            iterations: 0,\n            // The space in pixels allocated by this formatter, along with the mean space\n            // for tickables of this duration, and the deviation from the mean.\n            space: {\n                used: 0,\n                mean: 0,\n                deviation: 0,\n            },\n        };\n    }\n    static get CATEGORY() {\n        return Category.Tickable;\n    }\n    /** Reset the Tickable, this function will be overloaded. */\n    reset() {\n        return this;\n    }\n    /** Return the ticks. */\n    getTicks() {\n        return this.ticks;\n    }\n    /** Check if it ignores the ticks. */\n    shouldIgnoreTicks() {\n        return this.ignore_ticks;\n    }\n    /** Ignore the ticks. */\n    setIgnoreTicks(flag) {\n        this.ignore_ticks = flag;\n        return this;\n    }\n    /** Set width of note. Used by the formatter for positioning. */\n    setWidth(width) {\n        this.width = width;\n    }\n    /** Get width of note. Used by the formatter for positioning. */\n    getWidth() {\n        if (!this._preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call GetWidth on an unformatted note.\");\n        }\n        return this.width + (this.modifierContext ? this.modifierContext.getWidth() : 0);\n    }\n    /** Displace note by `x` pixels. Used by the formatter. */\n    setXShift(x) {\n        this.x_shift = x;\n        return this;\n    }\n    /** Get the `x` displaced pixels of the note. */\n    getXShift() {\n        return this.x_shift;\n    }\n    /** Get `x` position of this tick context. */\n    getX() {\n        const tickContext = this.checkTickContext(`Can't getX() without a TickContext.`);\n        return tickContext.getX() + this.x_shift;\n    }\n    /** Return the formatterMetrics. */\n    getFormatterMetrics() {\n        return this.formatterMetrics;\n    }\n    /** Return the center `x` shift. */\n    getCenterXShift() {\n        if (this.isCenterAligned()) {\n            return this.center_x_shift;\n        }\n        return 0;\n    }\n    /** Set the center `x` shift. */\n    setCenterXShift(centerXShift) {\n        this.center_x_shift = centerXShift;\n        return this;\n    }\n    // Check if tickable is center aligned. */\n    isCenterAligned() {\n        return this.align_center;\n    }\n    // Set/unset center alignment. */\n    setCenterAlignment(align_center) {\n        this.align_center = align_center;\n        return this;\n    }\n    /**\n     * Return the associated voice. Every tickable must be associated with a voice.\n     * This allows formatters and preFormatter to associate them with the right modifierContexts.\n     */\n    getVoice() {\n        return defined(this.voice, 'NoVoice', 'Tickable has no voice.');\n    }\n    /** Set the associated voice. */\n    setVoice(voice) {\n        this.voice = voice;\n    }\n    /** Get the tuplet. */\n    getTuplet() {\n        return this.tuplet;\n    }\n    /** Return the intrinsic ticks. */\n    getTupletStack() {\n        return this.tupletStack;\n    }\n    /**\n     * Reset the specific Tuplet if this is not provided, all tuplets are reset.\n     * Remove any prior tuplets from the tick calculation and\n     * reset the intrinsic tick value.\n     */\n    resetTuplet(tuplet) {\n        let noteCount;\n        let notesOccupied;\n        if (tuplet) {\n            const i = this.tupletStack.indexOf(tuplet);\n            if (i !== -1) {\n                this.tupletStack.splice(i, 1);\n                noteCount = tuplet.getNoteCount();\n                notesOccupied = tuplet.getNotesOccupied();\n                // Revert old multiplier by inverting numerator & denom.:\n                this.applyTickMultiplier(noteCount, notesOccupied);\n            }\n            return this;\n        }\n        while (this.tupletStack.length) {\n            tuplet = this.tupletStack.pop();\n            noteCount = tuplet.getNoteCount();\n            notesOccupied = tuplet.getNotesOccupied();\n            // Revert old multiplier by inverting numerator & denom.:\n            this.applyTickMultiplier(noteCount, notesOccupied);\n        }\n        return this;\n    }\n    /** Attach to new tuplet. */\n    setTuplet(tuplet) {\n        if (tuplet) {\n            this.tupletStack.push(tuplet);\n            const noteCount = tuplet.getNoteCount();\n            const notesOccupied = tuplet.getNotesOccupied();\n            this.applyTickMultiplier(notesOccupied, noteCount);\n        }\n        this.tuplet = tuplet;\n        return this;\n    }\n    /**\n     * Add self to the provided ModifierContext `mc`.\n     * If this tickable has modifiers, set modifierContext.\n     * @returns this\n     */\n    addToModifierContext(mc) {\n        this.modifierContext = mc;\n        for (let i = 0; i < this.modifiers.length; ++i) {\n            this.modifierContext.addMember(this.modifiers[i]);\n        }\n        this.modifierContext.addMember(this);\n        this._preFormatted = false;\n        return this;\n    }\n    /**\n     * Optional, if tickable has modifiers, associate a Modifier.\n     * @param mod the modifier\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    addModifier(modifier, index = 0) {\n        this.modifiers.push(modifier);\n        this._preFormatted = false;\n        return this;\n    }\n    /** Get the list of associated modifiers. */\n    getModifiers() {\n        return this.modifiers;\n    }\n    /** Set the Tick Context. */\n    setTickContext(tc) {\n        this.tickContext = tc;\n        this._preFormatted = false;\n    }\n    checkTickContext(message = 'Tickable has no tick context.') {\n        return defined(this.tickContext, 'NoTickContext', message);\n    }\n    /** Preformat the Tickable. */\n    preFormat() {\n        if (this._preFormatted)\n            return;\n        this.width = 0;\n        if (this.modifierContext) {\n            this.modifierContext.preFormat();\n            this.width += this.modifierContext.getWidth();\n        }\n    }\n    /** Set preformatted status. */\n    set preFormatted(value) {\n        this._preFormatted = value;\n    }\n    get preFormatted() {\n        return this._preFormatted;\n    }\n    /** Postformat the Tickable. */\n    postFormat() {\n        if (this._postFormatted)\n            return this;\n        this._postFormatted = true;\n        return this;\n    }\n    /** Set postformatted status. */\n    set postFormatted(value) {\n        this._postFormatted = value;\n    }\n    get postFormatted() {\n        return this._postFormatted;\n    }\n    /** Return the intrinsic ticks. */\n    getIntrinsicTicks() {\n        return this.intrinsicTicks;\n    }\n    /** Set the intrinsic ticks. */\n    setIntrinsicTicks(intrinsicTicks) {\n        this.intrinsicTicks = intrinsicTicks;\n        this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n    }\n    /** Get the tick multiplier. */\n    getTickMultiplier() {\n        return this.tickMultiplier;\n    }\n    /** Apply a tick multiplier. */\n    applyTickMultiplier(numerator, denominator) {\n        this.tickMultiplier.multiply(numerator, denominator);\n        this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n    }\n    /** Set the duration. */\n    setDuration(duration) {\n        const ticks = duration.numerator * (Tables.RESOLUTION / duration.denominator);\n        this.ticks = this.tickMultiplier.clone().multiply(ticks);\n        this.intrinsicTicks = this.ticks.value();\n    }\n    getAbsoluteX() {\n        const tickContext = this.checkTickContext(`Can't getAbsoluteX() without a TickContext.`);\n        return tickContext.getX();\n    }\n    /** Attach this note to a modifier context. */\n    setModifierContext(mc) {\n        this.modifierContext = mc;\n        return this;\n    }\n    /** Get `ModifierContext`. */\n    getModifierContext() {\n        return this.modifierContext;\n    }\n    /** Check and get `ModifierContext`. */\n    checkModifierContext() {\n        return defined(this.modifierContext, 'NoModifierContext', 'No modifier context attached to this tickable.');\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font } from './font';\nimport { drawDot } from './rendercontext';\nimport { Tables } from './tables';\nimport { Tickable } from './tickable';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\n/**\n * Note implements an abstract interface for notes and chords that\n * are rendered on a stave. Notes have some common properties: All of them\n * have a value (e.g., pitch, fret, etc.) and a duration (quarter, half, etc.)\n *\n * Some notes have stems, heads, dots, etc. Most notational elements that\n * surround a note are called *modifiers*, and every note has an associated\n * array of them. All notes also have a rendering context and belong to a stave.\n */\nexport class Note extends Tickable {\n    /**\n     * Every note is a tickable, i.e., it can be mutated by the `Formatter` class for\n     * positioning and layout.\n     *\n     * @param noteStruct To create a new note you need to provide a `noteStruct`.\n     */\n    constructor(noteStruct) {\n        super();\n        if (!noteStruct) {\n            throw new RuntimeError('BadArguments', 'Note must have valid initialization data to identify duration and type.');\n        }\n        /** Parses `noteStruct` and get note properties. */\n        const parsedNoteStruct = Note.parseNoteStruct(noteStruct);\n        if (!parsedNoteStruct) {\n            throw new RuntimeError('BadArguments', `Invalid note initialization object: ${JSON.stringify(noteStruct)}`);\n        }\n        // Set note properties from parameters.\n        this.keys = noteStruct.keys || [];\n        // per-pitch properties\n        this.keyProps = [];\n        this.duration = parsedNoteStruct.duration;\n        this.noteType = parsedNoteStruct.type;\n        this.customTypes = parsedNoteStruct.customTypes;\n        if (noteStruct.duration_override) {\n            // Custom duration\n            this.setDuration(noteStruct.duration_override);\n        }\n        else {\n            // Default duration\n            this.setIntrinsicTicks(parsedNoteStruct.ticks);\n        }\n        this.modifiers = [];\n        // Get the glyph code for this note from the font.\n        this.glyph = Tables.getGlyphProps(this.duration, this.noteType);\n        this.customGlyphs = this.customTypes.map((t) => Tables.getGlyphProps(this.duration, t));\n        // Note to play for audio players.\n        this.playNote = undefined;\n        // Positioning contexts used by the Formatter.\n        this.ignore_ticks = false;\n        // Positioning variables\n        this.width = 0; // Width in pixels calculated after preFormat\n        this.leftDisplacedHeadPx = 0; // Extra room on left for displaced note head\n        this.rightDisplacedHeadPx = 0; // Extra room on right for displaced note head\n        this.x_shift = 0; // X shift from tick context X\n        this.ys = []; // list of y coordinates for each note\n        // we need to hold on to these for ties and beams.\n        if (noteStruct.align_center) {\n            this.setCenterAlignment(noteStruct.align_center);\n        }\n        // The render surface.\n        this.render_options = {\n            annotation_spacing: 5,\n            glyph_font_scale: 1,\n            stroke_px: 1,\n            scale: 1,\n            font: '',\n            y_shift: 0,\n        };\n    }\n    //////////////////////////////////////////////////////////////////////////////////////////////////\n    // STATIC MEMBERS\n    static get CATEGORY() {\n        return Category.Note;\n    }\n    /** Debug helper. Displays various note metrics for the given note. */\n    static plotMetrics(ctx, note, yPos) {\n        const metrics = note.getMetrics();\n        const xStart = note.getAbsoluteX() - metrics.modLeftPx - metrics.leftDisplacedHeadPx;\n        const xPre1 = note.getAbsoluteX() - metrics.leftDisplacedHeadPx;\n        const xAbs = note.getAbsoluteX();\n        const xPost1 = note.getAbsoluteX() + metrics.notePx;\n        const xPost2 = note.getAbsoluteX() + metrics.notePx + metrics.rightDisplacedHeadPx;\n        const xEnd = note.getAbsoluteX() + metrics.notePx + metrics.rightDisplacedHeadPx + metrics.modRightPx;\n        const xFreedomRight = xEnd + (note.getFormatterMetrics().freedom.right || 0);\n        const xWidth = xEnd - xStart;\n        ctx.save();\n        ctx.setFont(Font.SANS_SERIF, 8);\n        ctx.fillText(Math.round(xWidth) + 'px', xStart + note.getXShift(), yPos);\n        const y = yPos + 7;\n        function stroke(x1, x2, color, yy = y) {\n            ctx.beginPath();\n            ctx.setStrokeStyle(color);\n            ctx.setFillStyle(color);\n            ctx.setLineWidth(3);\n            ctx.moveTo(x1 + note.getXShift(), yy);\n            ctx.lineTo(x2 + note.getXShift(), yy);\n            ctx.stroke();\n        }\n        stroke(xStart, xPre1, 'red');\n        stroke(xPre1, xAbs, '#999');\n        stroke(xAbs, xPost1, 'green');\n        stroke(xPost1, xPost2, '#999');\n        stroke(xPost2, xEnd, 'red');\n        stroke(xEnd, xFreedomRight, '#DD0');\n        stroke(xStart - note.getXShift(), xStart, '#BBB'); // Shift\n        drawDot(ctx, xAbs + note.getXShift(), y, 'blue');\n        const formatterMetrics = note.getFormatterMetrics();\n        if (formatterMetrics.iterations > 0) {\n            const spaceDeviation = formatterMetrics.space.deviation;\n            const prefix = spaceDeviation >= 0 ? '+' : '';\n            ctx.setFillStyle('red');\n            ctx.fillText(prefix + Math.round(spaceDeviation), xAbs + note.getXShift(), yPos - 10);\n        }\n        ctx.restore();\n    }\n    static parseDuration(durationString) {\n        if (!durationString) {\n            return undefined;\n        }\n        const regexp = /(\\d*\\/?\\d+|[a-z])(d*)([nrhms]|$)/;\n        const result = regexp.exec(durationString);\n        if (!result) {\n            return undefined;\n        }\n        const duration = result[1];\n        const dots = result[2].length;\n        const type = result[3] || 'n';\n        return { duration, dots, type };\n    }\n    static parseNoteStruct(noteStruct) {\n        // Preserve backwards-compatibility\n        const durationProps = Note.parseDuration(noteStruct.duration);\n        if (!durationProps) {\n            return undefined;\n        }\n        // If specified type is invalid, return undefined.\n        let type = noteStruct.type;\n        if (type && !Tables.validTypes[type]) {\n            return undefined;\n        }\n        // If no type specified, check duration or custom types\n        const customTypes = [];\n        if (!type) {\n            type = durationProps.type || 'n';\n            // If we have keys, try and check if we've got a custom glyph\n            if (noteStruct.keys !== undefined) {\n                noteStruct.keys.forEach((k, i) => {\n                    const result = k.split('/');\n                    // We have a custom glyph specified after the note eg. /X2\n                    customTypes[i] = (result && result.length === 3 ? result[2] : type);\n                });\n            }\n        }\n        // Calculate the tick duration of the note\n        let ticks = Tables.durationToTicks(durationProps.duration);\n        if (!ticks) {\n            return undefined;\n        }\n        // Are there any dots?\n        const dots = noteStruct.dots ? noteStruct.dots : durationProps.dots;\n        if (typeof dots !== 'number') {\n            return undefined;\n        }\n        // Add ticks as necessary depending on the numbr of dots\n        let currentTicks = ticks;\n        for (let i = 0; i < dots; i++) {\n            if (currentTicks <= 1)\n                return undefined;\n            currentTicks = currentTicks / 2;\n            ticks += currentTicks;\n        }\n        return {\n            duration: durationProps.duration,\n            type,\n            customTypes,\n            dots,\n            ticks,\n        };\n    }\n    /**\n     * Get the play note, which is arbitrary data that can be used by an\n     * audio player.\n     */\n    getPlayNote() {\n        return this.playNote;\n    }\n    /**\n     * Set the play note, which is arbitrary data that can be used by an\n     * audio player.\n     */\n    setPlayNote(note) {\n        this.playNote = note;\n        return this;\n    }\n    /**\n     * @returns true if this note is a type of rest.\n     *\n     * Rests don't have pitches, but take up space in the score.\n     * Subclasses should override this default implementation.\n     */\n    isRest() {\n        return false;\n    }\n    /** Add stroke. */\n    addStroke(index, stroke) {\n        stroke.setNote(this);\n        stroke.setIndex(index);\n        this.modifiers.push(stroke);\n        this.preFormatted = false;\n        return this;\n    }\n    /** Get the target stave. */\n    getStave() {\n        return this.stave;\n    }\n    /** Check and get the target stave. */\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    /** Set the target stave. */\n    setStave(stave) {\n        this.stave = stave;\n        this.setYs([stave.getYForLine(0)]); // Update Y values if the stave is changed.\n        this.setContext(this.stave.getContext());\n        return this;\n    }\n    /** Get spacing to the left of the notes. */\n    getLeftDisplacedHeadPx() {\n        return this.leftDisplacedHeadPx;\n    }\n    /** Get spacing to the right of the notes. */\n    getRightDisplacedHeadPx() {\n        return this.rightDisplacedHeadPx;\n    }\n    /** Set spacing to the left of the notes. */\n    setLeftDisplacedHeadPx(x) {\n        this.leftDisplacedHeadPx = x;\n        return this;\n    }\n    /** Set spacing to the right of the notes. */\n    setRightDisplacedHeadPx(x) {\n        this.rightDisplacedHeadPx = x;\n        return this;\n    }\n    /** True if this note has no duration (e.g., bar notes, spacers, etc.). */\n    shouldIgnoreTicks() {\n        return this.ignore_ticks;\n    }\n    /** Get the stave line number for the note. */\n    // eslint-disable-next-line\n    getLineNumber(isTopNote) {\n        return 0;\n    }\n    /** Get the stave line number for rest. */\n    getLineForRest() {\n        return 0;\n    }\n    /** Get the glyph associated with this note. */\n    // eslint-disable-next-line\n    getGlyph() {\n        return this.glyph;\n    }\n    /** Get the glyph width. */\n    getGlyphWidth() {\n        // TODO: FIXME (multiple potential values for this.glyph)\n        if (this.glyph) {\n            if (this.glyph.getMetrics) {\n                return this.glyph.getMetrics().width;\n            }\n            else if (this.glyph.getWidth) {\n                return this.glyph.getWidth(this.render_options.glyph_font_scale);\n            }\n        }\n        return 0;\n    }\n    /**\n     * Set Y positions for this note. Each Y value is associated with\n     * an individual pitch/key within the note/chord.\n     */\n    setYs(ys) {\n        this.ys = ys;\n        return this;\n    }\n    /**\n     * Get Y positions for this note. Each Y value is associated with\n     * an individual pitch/key within the note/chord.\n     */\n    getYs() {\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', 'No Y-values calculated for this note.');\n        }\n        return this.ys;\n    }\n    /**\n     * Get the Y position of the space above the stave onto which text can\n     * be rendered.\n     */\n    getYForTopText(text_line) {\n        return this.checkStave().getYForTopText(text_line);\n    }\n    /** Return the voice that this note belongs in. */\n    getVoice() {\n        if (!this.voice)\n            throw new RuntimeError('NoVoice', 'Note has no voice.');\n        return this.voice;\n    }\n    /** Attach this note to `voice`. */\n    setVoice(voice) {\n        this.voice = voice;\n        this.preFormatted = false;\n        return this;\n    }\n    /** Get the `TickContext` for this note. */\n    getTickContext() {\n        return this.checkTickContext();\n    }\n    /** Set the `TickContext` for this note. */\n    setTickContext(tc) {\n        this.tickContext = tc;\n        this.preFormatted = false;\n        return this;\n    }\n    /** Accessor to duration. */\n    getDuration() {\n        return this.duration;\n    }\n    /** Accessor to isDotted. */\n    isDotted() {\n        return this.getModifiersByType('Dot').length > 0;\n    }\n    /** Accessor to hasStem. */\n    hasStem() {\n        return false;\n    }\n    /** Accessor to note type. */\n    getNoteType() {\n        return this.noteType;\n    }\n    /** Get the beam. */\n    getBeam() {\n        return this.beam;\n    }\n    /** Check and get the beam. */\n    checkBeam() {\n        return defined(this.beam, 'NoBeam', 'No beam attached to instance');\n    }\n    /** Check it has a beam. */\n    hasBeam() {\n        return this.beam != undefined;\n    }\n    /** Set the beam. */\n    setBeam(beam) {\n        this.beam = beam;\n        return this;\n    }\n    /**\n     * Attach a modifier to this note.\n     * @param modifier the Modifier to add.\n     * @param index of the key to modify.\n     * @returns this\n     */\n    addModifier(modifier, index = 0) {\n        const signature = 'Note.addModifier(modifier: Modifier, index: number=0)';\n        // Backwards compatibility with 3.0.9.\n        if (typeof index === 'string') {\n            index = parseInt(index);\n            // eslint-disable-next-line\n            console.warn(signature + ' expected a number for `index`, but received a string.');\n        }\n        // Some versions of VexFlow had the two parameters reversed.\n        // Check here and throw an error if the argument types are not correct.\n        if (typeof modifier !== 'object' || typeof index !== 'number') {\n            throw new RuntimeError('WrongParams', 'Incorrect call signature. Use ' + signature + ' instead.');\n        }\n        modifier.setNote(this);\n        modifier.setIndex(index);\n        super.addModifier(modifier);\n        return this;\n    }\n    /** Get all modifiers of a specific type in `this.modifiers`. */\n    getModifiersByType(type) {\n        return this.modifiers.filter((modifier) => modifier.getCategory() === type);\n    }\n    /** Get the coordinates for where modifiers begin. */\n    // eslint-disable-next-line\n    getModifierStartXY(position, index, options) {\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n        }\n        return {\n            x: this.getAbsoluteX(),\n            y: this.ys[0],\n        };\n    }\n    getRightParenthesisPx(index) {\n        const props = this.getKeyProps()[index];\n        return props.displaced ? this.getRightDisplacedHeadPx() : 0;\n    }\n    getLeftParenthesisPx(index) {\n        const props = this.getKeyProps()[index];\n        return props.displaced ? this.getLeftDisplacedHeadPx() - this.x_shift : -this.x_shift;\n    }\n    getFirstDotPx() {\n        let px = this.getRightDisplacedHeadPx();\n        if (this.checkModifierContext().getMembers('Parenthesis').length !== 0)\n            px += Tables.currentMusicFont().lookupMetric('parenthesis.default.width');\n        return px;\n    }\n    /** Get the metrics for this note. */\n    getMetrics() {\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call getMetrics on an unformatted note.\");\n        }\n        const modLeftPx = this.modifierContext ? this.modifierContext.getState().left_shift : 0;\n        const modRightPx = this.modifierContext ? this.modifierContext.getState().right_shift : 0;\n        const width = this.getWidth();\n        const glyphWidth = this.getGlyphWidth();\n        const notePx = width -\n            modLeftPx - // subtract left modifiers\n            modRightPx - // subtract right modifiers\n            this.leftDisplacedHeadPx - // subtract left displaced head\n            this.rightDisplacedHeadPx; // subtract right displaced head\n        // NOTE: If you change this, remember to update MockTickable.getMetrics() in the tests/ directory.\n        return {\n            width,\n            glyphWidth,\n            notePx,\n            // Modifier spacing.\n            modLeftPx,\n            modRightPx,\n            // Displaced note head on left or right.\n            leftDisplacedHeadPx: this.leftDisplacedHeadPx,\n            rightDisplacedHeadPx: this.rightDisplacedHeadPx,\n            glyphPx: 0,\n        };\n    }\n    /**\n     * Get the absolute `X` position of this note's tick context. This\n     * excludes x_shift, so you'll need to factor it in if you're\n     * looking for the post-formatted x-position.\n     */\n    getAbsoluteX() {\n        const tickContext = this.checkTickContext(`Can't getAbsoluteX() without a TickContext.`);\n        // Position note to left edge of tick context.\n        let x = tickContext.getX();\n        if (this.stave) {\n            x += this.stave.getNoteStartX() + Tables.currentMusicFont().lookupMetric('stave.padding');\n        }\n        if (this.isCenterAligned()) {\n            x += this.getCenterXShift();\n        }\n        return x;\n    }\n    /** Get the direction of the stem. */\n    getStemDirection() {\n        throw new RuntimeError('NoStem', 'No stem attached to this note.');\n    }\n    /** Get the top and bottom `y` values of the stem. */\n    getStemExtents() {\n        throw new RuntimeError('NoStem', 'No stem attached to this note.');\n    }\n    /** Get the `x` coordinate to the right of the note. */\n    getTieRightX() {\n        let tieStartX = this.getAbsoluteX();\n        const note_glyph_width = this.glyph.getWidth();\n        tieStartX += note_glyph_width / 2;\n        tieStartX += -this.width / 2 + this.width + 2;\n        return tieStartX;\n    }\n    /** Get the `x` coordinate to the left of the note. */\n    getTieLeftX() {\n        let tieEndX = this.getAbsoluteX();\n        const note_glyph_width = this.glyph.getWidth();\n        tieEndX += note_glyph_width / 2;\n        tieEndX -= this.width / 2 + 2;\n        return tieEndX;\n    }\n    // Get the pitches in the note\n    getKeys() {\n        return this.keys;\n    }\n    // Get the properties for all the keys in the note\n    getKeyProps() {\n        return this.keyProps;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// A base class for stave modifiers (e.g. clefs, key signatures)\nimport { Element } from './element';\nimport { Category } from './typeguard';\nimport { defined } from './util';\nexport var StaveModifierPosition;\n(function (StaveModifierPosition) {\n    StaveModifierPosition[StaveModifierPosition[\"CENTER\"] = 0] = \"CENTER\";\n    StaveModifierPosition[StaveModifierPosition[\"LEFT\"] = 1] = \"LEFT\";\n    StaveModifierPosition[StaveModifierPosition[\"RIGHT\"] = 2] = \"RIGHT\";\n    StaveModifierPosition[StaveModifierPosition[\"ABOVE\"] = 3] = \"ABOVE\";\n    StaveModifierPosition[StaveModifierPosition[\"BELOW\"] = 4] = \"BELOW\";\n    StaveModifierPosition[StaveModifierPosition[\"BEGIN\"] = 5] = \"BEGIN\";\n    StaveModifierPosition[StaveModifierPosition[\"END\"] = 6] = \"END\";\n})(StaveModifierPosition || (StaveModifierPosition = {}));\nexport class StaveModifier extends Element {\n    constructor() {\n        super();\n        this.width = 0;\n        this.x = 0;\n        this.padding = 10;\n        this.position = StaveModifierPosition.ABOVE;\n    }\n    static get CATEGORY() {\n        return Category.StaveModifier;\n    }\n    static get Position() {\n        return StaveModifierPosition;\n    }\n    getPosition() {\n        return this.position;\n    }\n    setPosition(position) {\n        this.position = position;\n        return this;\n    }\n    getStave() {\n        return this.stave;\n    }\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    setStave(stave) {\n        this.stave = stave;\n        return this;\n    }\n    getWidth() {\n        return this.width;\n    }\n    setWidth(width) {\n        this.width = width;\n        return this;\n    }\n    getX() {\n        return this.x;\n    }\n    setX(x) {\n        this.x = x;\n        return this;\n    }\n    placeGlyphOnLine(glyph, stave, line, customShift = 0) {\n        glyph.setYShift(stave.getYForLine(line !== null && line !== void 0 ? line : 0) - stave.getYForGlyphs() + customShift);\n    }\n    getPadding(index) {\n        return index !== undefined && index < 2 ? 0 : this.padding;\n    }\n    setPadding(padding) {\n        this.padding = padding;\n        return this;\n    }\n    setLayoutMetrics(layoutMetrics) {\n        this.layoutMetrics = layoutMetrics;\n        return this;\n    }\n    getLayoutMetrics() {\n        return this.layoutMetrics;\n    }\n    // eslint-disable-next-line\n    draw(...args) {\n        // DO NOTHING.\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// Author Larry Kuhns 2011\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nexport var BarlineType;\n(function (BarlineType) {\n    BarlineType[BarlineType[\"SINGLE\"] = 1] = \"SINGLE\";\n    BarlineType[BarlineType[\"DOUBLE\"] = 2] = \"DOUBLE\";\n    BarlineType[BarlineType[\"END\"] = 3] = \"END\";\n    BarlineType[BarlineType[\"REPEAT_BEGIN\"] = 4] = \"REPEAT_BEGIN\";\n    BarlineType[BarlineType[\"REPEAT_END\"] = 5] = \"REPEAT_END\";\n    BarlineType[BarlineType[\"REPEAT_BOTH\"] = 6] = \"REPEAT_BOTH\";\n    BarlineType[BarlineType[\"NONE\"] = 7] = \"NONE\";\n})(BarlineType || (BarlineType = {}));\nexport class Barline extends StaveModifier {\n    constructor(type) {\n        super();\n        this.thickness = Tables.STAVE_LINE_THICKNESS;\n        const TYPE = BarlineType;\n        this.widths = {};\n        this.widths[TYPE.SINGLE] = 5;\n        this.widths[TYPE.DOUBLE] = 5;\n        this.widths[TYPE.END] = 5;\n        this.widths[TYPE.REPEAT_BEGIN] = 5;\n        this.widths[TYPE.REPEAT_END] = 5;\n        this.widths[TYPE.REPEAT_BOTH] = 5;\n        this.widths[TYPE.NONE] = 5;\n        this.paddings = {};\n        this.paddings[TYPE.SINGLE] = 0;\n        this.paddings[TYPE.DOUBLE] = 0;\n        this.paddings[TYPE.END] = 0;\n        this.paddings[TYPE.REPEAT_BEGIN] = 15;\n        this.paddings[TYPE.REPEAT_END] = 15;\n        this.paddings[TYPE.REPEAT_BOTH] = 15;\n        this.paddings[TYPE.NONE] = 0;\n        this.layoutMetricsMap = {};\n        this.layoutMetricsMap[TYPE.SINGLE] = {\n            xMin: 0,\n            xMax: 1,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.DOUBLE] = {\n            xMin: -3,\n            xMax: 1,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.END] = {\n            xMin: -5,\n            xMax: 1,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.REPEAT_END] = {\n            xMin: -10,\n            xMax: 1,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.REPEAT_BEGIN] = {\n            xMin: -2,\n            xMax: 10,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.REPEAT_BOTH] = {\n            xMin: -10,\n            xMax: 10,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.NONE] = {\n            xMin: 0,\n            xMax: 0,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.setPosition(StaveModifierPosition.BEGIN);\n        this.setType(type);\n    }\n    static get CATEGORY() {\n        return Category.Barline;\n    }\n    static get type() {\n        return BarlineType;\n    }\n    static get typeString() {\n        return {\n            single: BarlineType.SINGLE,\n            double: BarlineType.DOUBLE,\n            end: BarlineType.END,\n            repeatBegin: BarlineType.REPEAT_BEGIN,\n            repeatEnd: BarlineType.REPEAT_END,\n            repeatBoth: BarlineType.REPEAT_BOTH,\n            none: BarlineType.NONE,\n        };\n    }\n    getType() {\n        return this.type;\n    }\n    setType(type) {\n        this.type = typeof type === 'string' ? Barline.typeString[type] : type;\n        this.setWidth(this.widths[this.type]);\n        this.setPadding(this.paddings[this.type]);\n        this.setLayoutMetrics(this.layoutMetricsMap[this.type]);\n        return this;\n    }\n    // Draw barlines\n    draw(stave) {\n        stave.checkContext();\n        this.setRendered();\n        switch (this.type) {\n            case BarlineType.SINGLE:\n                this.drawVerticalBar(stave, this.x, false);\n                break;\n            case BarlineType.DOUBLE:\n                this.drawVerticalBar(stave, this.x, true);\n                break;\n            case BarlineType.END:\n                this.drawVerticalEndBar(stave, this.x);\n                break;\n            case BarlineType.REPEAT_BEGIN:\n                // If the barline is shifted over (in front of clef/time/key)\n                // Draw vertical bar at the beginning.\n                this.drawRepeatBar(stave, this.x, true);\n                if (stave.getX() !== this.x) {\n                    this.drawVerticalBar(stave, stave.getX());\n                }\n                break;\n            case BarlineType.REPEAT_END:\n                this.drawRepeatBar(stave, this.x, false);\n                break;\n            case BarlineType.REPEAT_BOTH:\n                this.drawRepeatBar(stave, this.x, false);\n                this.drawRepeatBar(stave, this.x, true);\n                break;\n            default:\n                // Default is NONE, so nothing to draw\n                break;\n        }\n    }\n    drawVerticalBar(stave, x, double_bar) {\n        const staveCtx = stave.checkContext();\n        const topY = stave.getTopLineTopY();\n        const botY = stave.getBottomLineBottomY();\n        if (double_bar) {\n            staveCtx.fillRect(x - 3, topY, 1, botY - topY);\n        }\n        staveCtx.fillRect(x, topY, 1, botY - topY);\n    }\n    drawVerticalEndBar(stave, x) {\n        const staveCtx = stave.checkContext();\n        const topY = stave.getTopLineTopY();\n        const botY = stave.getBottomLineBottomY();\n        staveCtx.fillRect(x - 5, topY, 1, botY - topY);\n        staveCtx.fillRect(x - 2, topY, 3, botY - topY);\n    }\n    drawRepeatBar(stave, x, begin) {\n        const staveCtx = stave.checkContext();\n        const topY = stave.getTopLineTopY();\n        const botY = stave.getBottomLineBottomY();\n        let x_shift = 3;\n        if (!begin) {\n            x_shift = -5;\n        }\n        staveCtx.fillRect(x + x_shift, topY, 1, botY - topY);\n        staveCtx.fillRect(x - 2, topY, 3, botY - topY);\n        const dot_radius = 2;\n        // Shift dots left or right\n        if (begin) {\n            x_shift += 4;\n        }\n        else {\n            x_shift -= 4;\n        }\n        const dot_x = x + x_shift + dot_radius / 2;\n        // calculate the y offset based on number of stave lines\n        let y_offset = (stave.getNumLines() - 1) * stave.getSpacingBetweenLines();\n        y_offset = y_offset / 2 - stave.getSpacingBetweenLines() / 2;\n        let dot_y = topY + y_offset + dot_radius / 2;\n        // draw the top repeat dot\n        staveCtx.beginPath();\n        staveCtx.arc(dot_x, dot_y, dot_radius, 0, Math.PI * 2, false);\n        staveCtx.fill();\n        // draw the bottom repeat dot\n        dot_y += stave.getSpacingBetweenLines();\n        staveCtx.beginPath();\n        staveCtx.arc(dot_x, dot_y, dot_radius, 0, Math.PI * 2, false);\n        staveCtx.fill();\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// Author: Aaron (@AaronDavidNewman)\n//\n// This implements chord symbols above/below a chord.\n// Chord symbols are modifiers that can be attached to notes.\n// They can contain multiple 'blocks' which represent text or\n// glyphs with various positioning options.\n//\n// See `tests/chordsymbol_tests.ts` for usage examples.\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { Tables } from './tables';\nimport { TextFormatter } from './textformatter';\nimport { Category, isStemmableNote } from './typeguard';\nimport { log } from './util';\n// To enable logging for this class. Set `Vex.Flow.ChordSymbol.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (ChordSymbol.DEBUG)\n        log('Vex.Flow.ChordSymbol', args);\n}\nexport var ChordSymbolHorizontalJustify;\n(function (ChordSymbolHorizontalJustify) {\n    ChordSymbolHorizontalJustify[ChordSymbolHorizontalJustify[\"LEFT\"] = 1] = \"LEFT\";\n    ChordSymbolHorizontalJustify[ChordSymbolHorizontalJustify[\"CENTER\"] = 2] = \"CENTER\";\n    ChordSymbolHorizontalJustify[ChordSymbolHorizontalJustify[\"RIGHT\"] = 3] = \"RIGHT\";\n    ChordSymbolHorizontalJustify[ChordSymbolHorizontalJustify[\"CENTER_STEM\"] = 4] = \"CENTER_STEM\";\n})(ChordSymbolHorizontalJustify || (ChordSymbolHorizontalJustify = {}));\nexport var ChordSymbolVerticalJustify;\n(function (ChordSymbolVerticalJustify) {\n    ChordSymbolVerticalJustify[ChordSymbolVerticalJustify[\"TOP\"] = 1] = \"TOP\";\n    ChordSymbolVerticalJustify[ChordSymbolVerticalJustify[\"BOTTOM\"] = 2] = \"BOTTOM\";\n})(ChordSymbolVerticalJustify || (ChordSymbolVerticalJustify = {}));\nexport var SymbolTypes;\n(function (SymbolTypes) {\n    SymbolTypes[SymbolTypes[\"GLYPH\"] = 1] = \"GLYPH\";\n    SymbolTypes[SymbolTypes[\"TEXT\"] = 2] = \"TEXT\";\n    SymbolTypes[SymbolTypes[\"LINE\"] = 3] = \"LINE\";\n})(SymbolTypes || (SymbolTypes = {}));\nexport var SymbolModifiers;\n(function (SymbolModifiers) {\n    SymbolModifiers[SymbolModifiers[\"NONE\"] = 1] = \"NONE\";\n    SymbolModifiers[SymbolModifiers[\"SUBSCRIPT\"] = 2] = \"SUBSCRIPT\";\n    SymbolModifiers[SymbolModifiers[\"SUPERSCRIPT\"] = 3] = \"SUPERSCRIPT\";\n})(SymbolModifiers || (SymbolModifiers = {}));\n/**\n * ChordSymbol is a modifier that creates a chord symbol above/below a chord.\n * As a modifier, it is attached to an existing note.\n */\nexport class ChordSymbol extends Modifier {\n    constructor() {\n        super();\n        this.symbolBlocks = [];\n        this.horizontal = ChordSymbolHorizontalJustify.LEFT;\n        this.vertical = ChordSymbolVerticalJustify.TOP;\n        this.useKerning = true;\n        this.reportWidth = true;\n        this.resetFont();\n    }\n    static get CATEGORY() {\n        return Category.ChordSymbol;\n    }\n    static get superSubRatio() {\n        return ChordSymbol.metrics.global.superSubRatio;\n    }\n    /** Currently unused: Globally turn off text formatting, if the built-in formatting does not work for your font. */\n    static set NO_TEXT_FORMAT(val) {\n        ChordSymbol.noFormat = val;\n    }\n    static get NO_TEXT_FORMAT() {\n        return ChordSymbol.noFormat;\n    }\n    // eslint-disable-next-line\n    static getMetricForGlyph(glyphCode) {\n        if (ChordSymbol.metrics[glyphCode]) {\n            return ChordSymbol.metrics[glyphCode];\n        }\n        return undefined;\n    }\n    static get engravingFontResolution() {\n        return Tables.currentMusicFont().getResolution();\n    }\n    static get spacingBetweenBlocks() {\n        return ChordSymbol.metrics.global.spacing / ChordSymbol.engravingFontResolution;\n    }\n    static getWidthForGlyph(glyph) {\n        const metric = ChordSymbol.getMetricForGlyph(glyph.code);\n        if (!metric) {\n            return 0.65; // probably should do something here.\n        }\n        return metric.advanceWidth / ChordSymbol.engravingFontResolution;\n    }\n    static getYShiftForGlyph(glyph) {\n        const metric = ChordSymbol.getMetricForGlyph(glyph.code);\n        if (!metric) {\n            return 0;\n        }\n        return metric.yOffset / ChordSymbol.engravingFontResolution;\n    }\n    static getXShiftForGlyph(glyph) {\n        const metric = ChordSymbol.getMetricForGlyph(glyph.code);\n        if (!metric) {\n            return 0;\n        }\n        return (-1 * metric.leftSideBearing) / ChordSymbol.engravingFontResolution;\n    }\n    static get superscriptOffset() {\n        return ChordSymbol.metrics.global.superscriptOffset / ChordSymbol.engravingFontResolution;\n    }\n    static get subscriptOffset() {\n        return ChordSymbol.metrics.global.subscriptOffset / ChordSymbol.engravingFontResolution;\n    }\n    static get kerningOffset() {\n        return ChordSymbol.metrics.global.kerningOffset / ChordSymbol.engravingFontResolution;\n    }\n    // eslint-disable-next-line\n    static get metrics() {\n        return Tables.currentMusicFont().getMetrics().glyphs.chordSymbol;\n    }\n    static get lowerKerningText() {\n        // For example, see: `bravura_metrics.ts`\n        // BravuraMetrics.glyphs.chordSymbol.global.lowerKerningText, which returns an array of letters.\n        // ['D', 'F', 'P', 'T', 'V', 'Y']\n        return ChordSymbol.metrics.global.lowerKerningText;\n    }\n    static get upperKerningText() {\n        return ChordSymbol.metrics.global.upperKerningText;\n    }\n    static isSuperscript(block) {\n        return block.symbolModifier !== undefined && block.symbolModifier === SymbolModifiers.SUPERSCRIPT;\n    }\n    static isSubscript(block) {\n        return block.symbolModifier !== undefined && block.symbolModifier === SymbolModifiers.SUBSCRIPT;\n    }\n    static get minPadding() {\n        const musicFont = Tables.currentMusicFont();\n        return musicFont.lookupMetric('glyphs.noteHead.minPadding');\n    }\n    /**\n     * Estimate the width of the whole chord symbol, based on the sum of the widths of the individual blocks.\n     * Estimate how many lines above/below the staff we need.\n     */\n    static format(symbols, state) {\n        var _a;\n        if (!symbols || symbols.length === 0)\n            return false;\n        let width = 0;\n        let nonSuperWidth = 0;\n        let leftWidth = 0;\n        let rightWidth = 0;\n        let maxLeftGlyphWidth = 0;\n        let maxRightGlyphWidth = 0;\n        for (const symbol of symbols) {\n            const fontSize = Font.convertSizeToPointValue((_a = symbol.textFont) === null || _a === void 0 ? void 0 : _a.size);\n            const fontAdj = Font.scaleSize(fontSize, 0.05);\n            const glyphAdj = fontAdj * 2;\n            const note = symbol.checkAttachedNote();\n            let symbolWidth = 0;\n            let lineSpaces = 1;\n            let vAlign = false;\n            for (let j = 0; j < symbol.symbolBlocks.length; ++j) {\n                const block = symbol.symbolBlocks[j];\n                const sup = ChordSymbol.isSuperscript(block);\n                const sub = ChordSymbol.isSubscript(block);\n                const superSubScale = sup || sub ? ChordSymbol.superSubRatio : 1;\n                const adj = block.symbolType === SymbolTypes.GLYPH ? glyphAdj * superSubScale : fontAdj * superSubScale;\n                // If there are super/subscripts, they extend beyond the line so\n                // assume they take up 2 lines\n                if (sup || sub) {\n                    lineSpaces = 2;\n                }\n                // If there is a symbol-specific offset, add it but consider font\n                // size since font and glyphs will be interspersed.\n                const fontSize = symbol.textFormatter.fontSizeInPixels;\n                const superSubFontSize = fontSize * superSubScale;\n                if (block.symbolType === SymbolTypes.GLYPH && block.glyph !== undefined) {\n                    block.width = ChordSymbol.getWidthForGlyph(block.glyph) * superSubFontSize;\n                    block.yShift += ChordSymbol.getYShiftForGlyph(block.glyph) * superSubFontSize;\n                    block.xShift += ChordSymbol.getXShiftForGlyph(block.glyph) * superSubFontSize;\n                    block.glyph.scale = block.glyph.scale * adj;\n                }\n                else if (block.symbolType === SymbolTypes.TEXT) {\n                    block.width = block.width * superSubFontSize;\n                    block.yShift += symbol.getYOffsetForText(block.text) * adj;\n                }\n                if (block.symbolType === SymbolTypes.GLYPH &&\n                    block.glyph !== undefined &&\n                    block.glyph.code === ChordSymbol.glyphs.over.code) {\n                    lineSpaces = 2;\n                }\n                block.width += ChordSymbol.spacingBetweenBlocks * fontSize * superSubScale;\n                // If a subscript immediately  follows a superscript block, try to\n                // overlay them.\n                if (sup && j > 0) {\n                    const prev = symbol.symbolBlocks[j - 1];\n                    if (!ChordSymbol.isSuperscript(prev)) {\n                        nonSuperWidth = width;\n                    }\n                }\n                if (sub && nonSuperWidth > 0) {\n                    vAlign = true;\n                    // slide the symbol over so it lines up with superscript\n                    block.xShift = block.xShift + (nonSuperWidth - width);\n                    width = nonSuperWidth;\n                    nonSuperWidth = 0;\n                    // If we have vertically lined up, turn kerning off.\n                    symbol.setEnableKerning(false);\n                }\n                if (!sup && !sub) {\n                    nonSuperWidth = 0;\n                }\n                block.vAlign = vAlign;\n                width += block.width;\n                symbolWidth = width;\n            }\n            // make kerning adjustments after computing super/subscripts\n            symbol.updateKerningAdjustments();\n            symbol.updateOverBarAdjustments();\n            if (symbol.getVertical() === ChordSymbolVerticalJustify.TOP) {\n                symbol.setTextLine(state.top_text_line);\n                state.top_text_line += lineSpaces;\n            }\n            else {\n                symbol.setTextLine(state.text_line + 1);\n                state.text_line += lineSpaces + 1;\n            }\n            if (symbol.getReportWidth() && isStemmableNote(note)) {\n                const glyphWidth = note.getGlyph().getWidth();\n                if (symbol.getHorizontal() === ChordSymbolHorizontalJustify.LEFT) {\n                    maxLeftGlyphWidth = Math.max(glyphWidth, maxLeftGlyphWidth);\n                    leftWidth = Math.max(leftWidth, symbolWidth) + ChordSymbol.minPadding;\n                }\n                else if (symbol.getHorizontal() === ChordSymbolHorizontalJustify.RIGHT) {\n                    maxRightGlyphWidth = Math.max(glyphWidth, maxRightGlyphWidth);\n                    rightWidth = Math.max(rightWidth, symbolWidth);\n                }\n                else {\n                    leftWidth = Math.max(leftWidth, symbolWidth / 2) + ChordSymbol.minPadding;\n                    rightWidth = Math.max(rightWidth, symbolWidth / 2);\n                    maxLeftGlyphWidth = Math.max(glyphWidth / 2, maxLeftGlyphWidth);\n                    maxRightGlyphWidth = Math.max(glyphWidth / 2, maxRightGlyphWidth);\n                }\n            }\n            width = 0; // reset symbol width\n        }\n        const rightOverlap = Math.min(Math.max(rightWidth - maxRightGlyphWidth, 0), Math.max(rightWidth - state.right_shift, 0));\n        const leftOverlap = Math.min(Math.max(leftWidth - maxLeftGlyphWidth, 0), Math.max(leftWidth - state.left_shift, 0));\n        state.left_shift += leftOverlap;\n        state.right_shift += rightOverlap;\n        return true;\n    }\n    /**\n     * Default text font.\n     * Choose a font family that works well with the current music engraving font.\n     * @override `Element.TEXT_FONT`.\n     */\n    static get TEXT_FONT() {\n        let family = 'Roboto Slab, Times, serif';\n        if (Tables.currentMusicFont().getName() === 'Petaluma') {\n            // Fixes Issue #1180\n            family = 'PetalumaScript, Arial, sans-serif';\n        }\n        return {\n            family,\n            size: 12,\n            weight: FontWeight.NORMAL,\n            style: FontStyle.NORMAL,\n        };\n    }\n    /**\n     * The offset is specified in `em`. Scale this value by the font size in pixels.\n     */\n    get superscriptOffset() {\n        return ChordSymbol.superscriptOffset * this.textFormatter.fontSizeInPixels;\n    }\n    get subscriptOffset() {\n        return ChordSymbol.subscriptOffset * this.textFormatter.fontSizeInPixels;\n    }\n    setReportWidth(value) {\n        this.reportWidth = value;\n        return this;\n    }\n    getReportWidth() {\n        return this.reportWidth;\n    }\n    updateOverBarAdjustments() {\n        const barIndex = this.symbolBlocks.findIndex(({ symbolType, glyph }) => symbolType === SymbolTypes.GLYPH && glyph !== undefined && glyph.code === 'csymDiagonalArrangementSlash');\n        if (barIndex < 0) {\n            return;\n        }\n        const bar = this.symbolBlocks[barIndex];\n        const xoff = bar.width / 4;\n        const yoff = 0.25 * this.textFormatter.fontSizeInPixels;\n        let symIndex = 0;\n        for (symIndex === 0; symIndex < barIndex; ++symIndex) {\n            const symbol = this.symbolBlocks[symIndex];\n            symbol.xShift = symbol.xShift + xoff;\n            symbol.yShift = symbol.yShift - yoff;\n        }\n        for (symIndex = barIndex + 1; symIndex < this.symbolBlocks.length; ++symIndex) {\n            const symbol = this.symbolBlocks[symIndex];\n            symbol.xShift = symbol.xShift - xoff;\n            symbol.yShift = symbol.yShift + yoff;\n        }\n    }\n    updateKerningAdjustments() {\n        let accum = 0;\n        for (let j = 0; j < this.symbolBlocks.length; ++j) {\n            const symbol = this.symbolBlocks[j];\n            accum += this.getKerningAdjustment(j);\n            symbol.xShift += accum;\n        }\n    }\n    /** Do some basic kerning so that letter chords like 'A' don't have the extensions hanging off to the right. */\n    getKerningAdjustment(j) {\n        if (!this.useKerning) {\n            return 0;\n        }\n        const currSymbol = this.symbolBlocks[j];\n        const prevSymbol = j > 0 ? this.symbolBlocks[j - 1] : undefined;\n        let adjustment = 0;\n        // Move things into the '/' over bar\n        if (currSymbol.symbolType === SymbolTypes.GLYPH &&\n            currSymbol.glyph !== undefined &&\n            currSymbol.glyph.code === ChordSymbol.glyphs.over.code) {\n            adjustment += currSymbol.glyph.metrics.x_shift;\n        }\n        if (prevSymbol !== undefined &&\n            prevSymbol.symbolType === SymbolTypes.GLYPH &&\n            prevSymbol.glyph !== undefined &&\n            prevSymbol.glyph.code === ChordSymbol.glyphs.over.code) {\n            adjustment += prevSymbol.glyph.metrics.x_shift;\n        }\n        // For superscripts that follow a letter without much top part, move it to the left slightly\n        let preKernUpper = false;\n        let preKernLower = false;\n        if (prevSymbol !== undefined && prevSymbol.symbolType === SymbolTypes.TEXT) {\n            preKernUpper = ChordSymbol.upperKerningText.some((xx) => xx === prevSymbol.text[prevSymbol.text.length - 1]);\n            preKernLower = ChordSymbol.lowerKerningText.some((xx) => xx === prevSymbol.text[prevSymbol.text.length - 1]);\n        }\n        const kerningOffsetPixels = ChordSymbol.kerningOffset * this.textFormatter.fontSizeInPixels;\n        // TODO: adjust kern for font size.\n        // Where should this constant live?\n        if (preKernUpper && currSymbol.symbolModifier === SymbolModifiers.SUPERSCRIPT) {\n            adjustment += kerningOffsetPixels;\n        }\n        if (preKernLower && currSymbol.symbolType === SymbolTypes.TEXT) {\n            if (currSymbol.text[0] >= 'a' && currSymbol.text[0] <= 'z') {\n                adjustment += kerningOffsetPixels / 2;\n            }\n            if (ChordSymbol.upperKerningText.some((xx) => xx === (prevSymbol === null || prevSymbol === void 0 ? void 0 : prevSymbol.text[prevSymbol.text.length - 1]))) {\n                adjustment += kerningOffsetPixels / 2;\n            }\n        }\n        return adjustment;\n    }\n    /**\n     * ChordSymbol allows multiple blocks so we can mix glyphs and font text.\n     * Each block can have its own vertical orientation.\n     */\n    // eslint-disable-next-line\n    getSymbolBlock(params = {}) {\n        var _a, _b, _c;\n        const symbolType = (_a = params.symbolType) !== null && _a !== void 0 ? _a : SymbolTypes.TEXT;\n        const symbolBlock = {\n            text: (_b = params.text) !== null && _b !== void 0 ? _b : '',\n            symbolType,\n            symbolModifier: (_c = params.symbolModifier) !== null && _c !== void 0 ? _c : SymbolModifiers.NONE,\n            xShift: 0,\n            yShift: 0,\n            vAlign: false,\n            width: 0,\n        };\n        // Note: symbol widths are resolution and font-independent.\n        // We convert to pixel values when we know what the font is.\n        if (symbolType === SymbolTypes.GLYPH && typeof params.glyph === 'string') {\n            const glyphArgs = ChordSymbol.glyphs[params.glyph];\n            const glyphPoints = 20;\n            symbolBlock.glyph = new Glyph(glyphArgs.code, glyphPoints, { category: 'chordSymbol' });\n            // Beware: glyph.metrics is not the same as glyph.getMetrics() !\n            // rv.glyph.point = rv.glyph.point * rv.glyph.metrics.scale;\n            // rv.width = rv.glyph.getMetrics().width;\n            // don't set yShift here, b/c we need to do it at formatting time after the font is set.\n        }\n        else if (symbolType === SymbolTypes.TEXT) {\n            symbolBlock.width = this.textFormatter.getWidthForTextInEm(symbolBlock.text);\n        }\n        else if (symbolType === SymbolTypes.LINE) {\n            symbolBlock.width = params.width;\n        }\n        return symbolBlock;\n    }\n    /** Add a symbol to this chord, could be text, glyph or line. */\n    // eslint-disable-next-line\n    addSymbolBlock(parameters) {\n        this.symbolBlocks.push(this.getSymbolBlock(parameters));\n        return this;\n    }\n    // ### Convenience functions for creating different types of chord symbol parts.\n    /** Add a text block. */\n    // eslint-disable-next-line\n    addText(text, parameters = {}) {\n        const symbolType = SymbolTypes.TEXT;\n        return this.addSymbolBlock(Object.assign(Object.assign({}, parameters), { text, symbolType }));\n    }\n    /** Add a text block with superscript modifier. */\n    addTextSuperscript(text) {\n        const symbolType = SymbolTypes.TEXT;\n        const symbolModifier = SymbolModifiers.SUPERSCRIPT;\n        return this.addSymbolBlock({ text, symbolType, symbolModifier });\n    }\n    /** Add a text block with subscript modifier. */\n    addTextSubscript(text) {\n        const symbolType = SymbolTypes.TEXT;\n        const symbolModifier = SymbolModifiers.SUBSCRIPT;\n        return this.addSymbolBlock({ text, symbolType, symbolModifier });\n    }\n    /** Add a glyph block with superscript modifier. */\n    addGlyphSuperscript(glyph) {\n        const symbolType = SymbolTypes.GLYPH;\n        const symbolModifier = SymbolModifiers.SUPERSCRIPT;\n        return this.addSymbolBlock({ glyph, symbolType, symbolModifier });\n    }\n    /** Add a glyph block. */\n    // eslint-disable-next-line\n    addGlyph(glyph, params = {}) {\n        const symbolType = SymbolTypes.GLYPH;\n        return this.addSymbolBlock(Object.assign(Object.assign({}, params), { glyph, symbolType }));\n    }\n    /**\n     * Add a glyph for each character in 'text'. If the glyph is not available, use text from the font.\n     * e.g. `addGlyphOrText('(+5#11)')` will use text for the '5' and '11', and glyphs for everything else.\n     */\n    // eslint-disable-next-line\n    addGlyphOrText(text, params = {}) {\n        let str = '';\n        for (let i = 0; i < text.length; ++i) {\n            const char = text[i];\n            if (ChordSymbol.glyphs[char]) {\n                if (str.length > 0) {\n                    this.addText(str, params);\n                    str = '';\n                }\n                this.addGlyph(char, params);\n            }\n            else {\n                // Collect consecutive characters with no glyphs.\n                str += char;\n            }\n        }\n        if (str.length > 0) {\n            this.addText(str, params);\n        }\n        return this;\n    }\n    /** Add a line of the given width, used as a continuation of the previous symbol in analysis, or lyrics, etc. */\n    // eslint-disable-next-line\n    addLine(width, params = {}) {\n        const symbolType = SymbolTypes.LINE;\n        return this.addSymbolBlock(Object.assign(Object.assign({}, params), { symbolType, width }));\n    }\n    /**\n     * Set the chord symbol's font family, size, weight, style (e.g., `Arial`, `10pt`, `bold`, `italic`).\n     *\n     * @param f is 1) a `FontInfo` object or\n     *             2) a string formatted as CSS font shorthand (e.g., 'bold 10pt Arial') or\n     *             3) a string representing the font family (one of `size`, `weight`, or `style` must also be provided).\n     * @param size a string specifying the font size and unit (e.g., '16pt'), or a number (the unit is assumed to be 'pt').\n     * @param weight is a string (e.g., 'bold', 'normal') or a number (100, 200, ... 900).\n     * @param style is a string (e.g., 'italic', 'normal').\n     *\n     * @override See: Element.\n     */\n    setFont(f, size, weight, style) {\n        super.setFont(f, size, weight, style);\n        this.textFormatter = TextFormatter.create(this.textFont);\n        return this;\n    }\n    setEnableKerning(val) {\n        this.useKerning = val;\n        return this;\n    }\n    /** Set vertical position of text (above or below stave). */\n    setVertical(vj) {\n        this.vertical = typeof vj === 'string' ? ChordSymbol.VerticalJustifyString[vj] : vj;\n        return this;\n    }\n    getVertical() {\n        return this.vertical;\n    }\n    /** Set horizontal justification. */\n    setHorizontal(hj) {\n        this.horizontal = typeof hj === 'string' ? ChordSymbol.HorizontalJustifyString[hj] : hj;\n        return this;\n    }\n    getHorizontal() {\n        return this.horizontal;\n    }\n    getWidth() {\n        let width = 0;\n        this.symbolBlocks.forEach((symbol) => {\n            width += symbol.vAlign ? 0 : symbol.width;\n        });\n        return width;\n    }\n    getYOffsetForText(text) {\n        var _a;\n        let acc = 0;\n        let i = 0;\n        for (i = 0; i < text.length; ++i) {\n            const metrics = this.textFormatter.getGlyphMetrics(text[i]);\n            if (metrics) {\n                const yMax = (_a = metrics.y_max) !== null && _a !== void 0 ? _a : 0;\n                acc = yMax < acc ? yMax : acc;\n            }\n        }\n        const resolution = this.textFormatter.getResolution();\n        return i > 0 ? -1 * (acc / resolution) : 0;\n    }\n    /** Render text and glyphs above/below the note. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        // We're changing context parameters. Save current state.\n        ctx.save();\n        const classString = Object.keys(this.getAttribute('classes')).join(' ');\n        ctx.openGroup(classString, this.getAttribute('id'));\n        const start = note.getModifierStartXY(Modifier.Position.ABOVE, this.index);\n        ctx.setFont(this.textFont);\n        let y;\n        // The position of the text varies based on whether or not the note\n        // has a stem.\n        const hasStem = note.hasStem();\n        const stave = note.checkStave();\n        if (this.vertical === ChordSymbolVerticalJustify.BOTTOM) {\n            // HACK: We need to compensate for the text's height since its origin is bottom-right.\n            y = stave.getYForBottomText(this.text_line + Tables.TEXT_HEIGHT_OFFSET_HACK);\n            if (hasStem) {\n                const stem_ext = note.checkStem().getExtents();\n                const spacing = stave.getSpacingBetweenLines();\n                const stem_base = note.getStemDirection() === 1 ? stem_ext.baseY : stem_ext.topY;\n                y = Math.max(y, stem_base + spacing * (this.text_line + 2));\n            }\n        }\n        else {\n            // (this.vertical === VerticalJustify.TOP)\n            y = Math.min(stave.getYForTopText(this.text_line), note.getYs()[0] - 10);\n            if (hasStem) {\n                const stem_ext = note.checkStem().getExtents();\n                const spacing = stave.getSpacingBetweenLines();\n                y = Math.min(y, stem_ext.topY - 5 - spacing * this.text_line);\n            }\n        }\n        let x = start.x;\n        if (this.horizontal === ChordSymbolHorizontalJustify.LEFT) {\n            x = start.x;\n        }\n        else if (this.horizontal === ChordSymbolHorizontalJustify.RIGHT) {\n            x = start.x + this.getWidth();\n        }\n        else if (this.horizontal === ChordSymbolHorizontalJustify.CENTER) {\n            x = start.x - this.getWidth() / 2;\n        }\n        else {\n            // HorizontalJustify.CENTER_STEM\n            x = note.getStemX() - this.getWidth() / 2;\n        }\n        L('Rendering ChordSymbol: ', this.textFormatter, x, y);\n        this.symbolBlocks.forEach((symbol) => {\n            const isSuper = ChordSymbol.isSuperscript(symbol);\n            const isSub = ChordSymbol.isSubscript(symbol);\n            let curY = y;\n            L('shift was ', symbol.xShift, symbol.yShift);\n            L('curY pre sub ', curY);\n            if (isSuper) {\n                curY += this.superscriptOffset;\n            }\n            if (isSub) {\n                curY += this.subscriptOffset;\n            }\n            L('curY sup/sub ', curY);\n            if (symbol.symbolType === SymbolTypes.TEXT) {\n                if (isSuper || isSub) {\n                    ctx.save();\n                    if (this.textFont) {\n                        const { family, size, weight, style } = this.textFont;\n                        const smallerFontSize = Font.scaleSize(size, ChordSymbol.superSubRatio);\n                        ctx.setFont(family, smallerFontSize, weight, style);\n                    }\n                }\n                // TODO???\n                // We estimate the text width, fill it in with the empirical value so the formatting is even.\n                // const textDim = ctx.measureText(symbol.text);\n                // symbol.width = textDim.width;\n                L('Rendering Text: ', symbol.text, x + symbol.xShift, curY + symbol.yShift);\n                ctx.fillText(symbol.text, x + symbol.xShift, curY + symbol.yShift);\n                if (isSuper || isSub) {\n                    ctx.restore();\n                }\n            }\n            else if (symbol.symbolType === SymbolTypes.GLYPH && symbol.glyph) {\n                curY += symbol.yShift;\n                L('Rendering Glyph: ', symbol.glyph.code, x + symbol.xShift, curY);\n                symbol.glyph.render(ctx, x + symbol.xShift, curY);\n            }\n            else if (symbol.symbolType === SymbolTypes.LINE) {\n                L('Rendering Line : ', symbol.width, x, curY);\n                ctx.beginPath();\n                ctx.setLineWidth(1); // ?\n                ctx.moveTo(x, y);\n                ctx.lineTo(x + symbol.width, curY);\n                ctx.stroke();\n            }\n            x += symbol.width;\n            if (symbol.vAlign) {\n                x += symbol.xShift;\n            }\n        });\n        ctx.closeGroup();\n        ctx.restore();\n    }\n}\nChordSymbol.DEBUG = false;\n// Chord symbols can be positioned and justified relative to the note.\nChordSymbol.HorizontalJustify = ChordSymbolHorizontalJustify;\nChordSymbol.HorizontalJustifyString = {\n    left: ChordSymbolHorizontalJustify.LEFT,\n    right: ChordSymbolHorizontalJustify.RIGHT,\n    center: ChordSymbolHorizontalJustify.CENTER,\n    centerStem: ChordSymbolHorizontalJustify.CENTER_STEM,\n};\nChordSymbol.VerticalJustify = ChordSymbolVerticalJustify;\nChordSymbol.VerticalJustifyString = {\n    top: ChordSymbolVerticalJustify.TOP,\n    above: ChordSymbolVerticalJustify.TOP,\n    below: ChordSymbolVerticalJustify.BOTTOM,\n    bottom: ChordSymbolVerticalJustify.BOTTOM,\n};\n// Glyph data\nChordSymbol.glyphs = {\n    diminished: {\n        code: 'csymDiminished',\n    },\n    dim: {\n        code: 'csymDiminished',\n    },\n    halfDiminished: {\n        code: 'csymHalfDiminished',\n    },\n    '+': {\n        code: 'csymAugmented',\n    },\n    augmented: {\n        code: 'csymAugmented',\n    },\n    majorSeventh: {\n        code: 'csymMajorSeventh',\n    },\n    minor: {\n        code: 'csymMinor',\n    },\n    '-': {\n        code: 'csymMinor',\n    },\n    '(': {\n        code: 'csymParensLeftTall',\n    },\n    leftParen: {\n        code: 'csymParensLeftTall',\n    },\n    ')': {\n        code: 'csymParensRightTall',\n    },\n    rightParen: {\n        code: 'csymParensRightTall',\n    },\n    leftBracket: {\n        code: 'csymBracketLeftTall',\n    },\n    rightBracket: {\n        code: 'csymBracketRightTall',\n    },\n    leftParenTall: {\n        code: 'csymParensLeftVeryTall',\n    },\n    rightParenTall: {\n        code: 'csymParensRightVeryTall',\n    },\n    '/': {\n        code: 'csymDiagonalArrangementSlash',\n    },\n    over: {\n        code: 'csymDiagonalArrangementSlash',\n    },\n    '#': {\n        code: 'accidentalSharp',\n    },\n    b: {\n        code: 'accidentalFlat',\n    },\n};\nChordSymbol.symbolTypes = SymbolTypes;\nChordSymbol.symbolModifiers = SymbolModifiers;\n/** Currently unused. */\nChordSymbol.noFormat = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Note } from './note';\nimport { Barline, BarlineType } from './stavebarline';\nimport { Category } from './typeguard';\nimport { log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (BarNote.DEBUG)\n        log('Vex.Flow.BarNote', args);\n}\n/**\n * A `BarNote` is used to render bar lines (from `barline.ts`). `BarNote`s can\n * be added to a voice and rendered in the middle of a stave. Since it has no\n * duration, it consumes no `tick`s, and is dealt with appropriately by the formatter.\n *\n * See `tests/barnote_tests.ts` for usage examples.\n */\nexport class BarNote extends Note {\n    constructor(type = BarlineType.SINGLE) {\n        super({ duration: 'b' });\n        this.metrics = {\n            widths: {},\n        };\n        const TYPE = BarlineType;\n        this.metrics.widths = {\n            [TYPE.SINGLE]: 8,\n            [TYPE.DOUBLE]: 12,\n            [TYPE.END]: 15,\n            [TYPE.REPEAT_BEGIN]: 14,\n            [TYPE.REPEAT_END]: 14,\n            [TYPE.REPEAT_BOTH]: 18,\n            [TYPE.NONE]: 0,\n        };\n        // Tell the formatter that bar notes have no duration.\n        this.ignore_ticks = true;\n        this.setType(type);\n    }\n    static get CATEGORY() {\n        return Category.BarNote;\n    }\n    /** Get the type of bar note.*/\n    getType() {\n        return this.type;\n    }\n    /** Set the type of bar note. */\n    setType(type) {\n        this.type = typeof type === 'string' ? Barline.typeString[type] : type;\n        // Set width to width of relevant `Barline`.\n        this.setWidth(this.metrics.widths[this.type]);\n        return this;\n    }\n    /* Overridden to ignore */\n    // eslint-disable-next-line\n    addToModifierContext(mc) {\n        // DO NOTHING.\n        return this;\n    }\n    /** Overridden to ignore. */\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    /** Render note to stave. */\n    draw() {\n        const ctx = this.checkContext();\n        L('Rendering bar line at: ', this.getAbsoluteX());\n        if (this.style)\n            this.applyStyle(ctx);\n        const barline = new Barline(this.type);\n        barline.setX(this.getAbsoluteX());\n        barline.draw(this.checkStave());\n        if (this.style)\n            this.restoreStyle(ctx);\n        this.setRendered();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.BarNote.DEBUG` to `true`. */\nBarNote.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Modifier } from './modifier';\nimport { TextFormatter } from './textformatter';\nimport { Category, isTabNote } from './typeguard';\nimport { RuntimeError } from './util';\n/** Bend implements tablature bends. */\nexport class Bend extends Modifier {\n    /**\n     * Example of a phrase:\n     * ```\n     *    [{\n     *     type: UP,\n     *     text: \"whole\"\n     *     width: 8;\n     *   },\n     *   {\n     *     type: DOWN,\n     *     text: \"whole\"\n     *     width: 8;\n     *   },\n     *   {\n     *     type: UP,\n     *     text: \"half\"\n     *     width: 8;\n     *   },\n     *   {\n     *     type: UP,\n     *     text: \"whole\"\n     *     width: 8;\n     *   },\n     *   {\n     *     type: DOWN,\n     *     text: \"1 1/2\"\n     *     width: 8;\n     *   }]\n     * ```\n     * @param text text for bend (\"Full\", \"Half\", etc.) (DEPRECATED)\n     * @param release if true, render a release. (DEPRECATED)\n     * @param phrase if set, ignore \"text\" and \"release\", and use the more sophisticated phrase specified\n     */\n    constructor(text, release = false, phrase) {\n        super();\n        this.text = text;\n        this.x_shift = 0;\n        this.release = release;\n        this.tap = '';\n        this.resetFont();\n        this.render_options = {\n            line_width: 1.5,\n            line_style: '#777777',\n            bend_width: 8,\n            release_width: 8,\n        };\n        if (phrase) {\n            this.phrase = phrase;\n        }\n        else {\n            // Backward compatibility\n            this.phrase = [{ type: Bend.UP, text: this.text }];\n            if (this.release)\n                this.phrase.push({ type: Bend.DOWN, text: '' });\n        }\n        this.updateWidth();\n    }\n    static get CATEGORY() {\n        return Category.Bend;\n    }\n    static get UP() {\n        return 0;\n    }\n    static get DOWN() {\n        return 1;\n    }\n    // Arrange bends in `ModifierContext`\n    static format(bends, state) {\n        if (!bends || bends.length === 0)\n            return false;\n        let last_width = 0;\n        // Format Bends\n        for (let i = 0; i < bends.length; ++i) {\n            const bend = bends[i];\n            const note = bend.checkAttachedNote();\n            if (isTabNote(note)) {\n                const stringPos = note.leastString() - 1;\n                if (state.top_text_line < stringPos) {\n                    state.top_text_line = stringPos;\n                }\n            }\n            bend.setXShift(last_width);\n            last_width = bend.getWidth();\n            bend.setTextLine(state.top_text_line);\n        }\n        state.right_shift += last_width;\n        state.top_text_line += 1;\n        return true;\n    }\n    /** Set horizontal shift in pixels. */\n    setXShift(value) {\n        this.x_shift = value;\n        this.updateWidth();\n        return this;\n    }\n    setTap(value) {\n        this.tap = value;\n        return this;\n    }\n    /** Get text provided in the constructor. */\n    getText() {\n        return this.text;\n    }\n    getTextHeight() {\n        const textFormatter = TextFormatter.create(this.textFont);\n        return textFormatter.maxHeight;\n    }\n    /** Recalculate width. */\n    updateWidth() {\n        const textFormatter = TextFormatter.create(this.textFont);\n        const measureText = (text) => {\n            return textFormatter.getWidthForTextInPx(text);\n        };\n        let totalWidth = 0;\n        for (let i = 0; i < this.phrase.length; ++i) {\n            const bend = this.phrase[i];\n            if (bend.width !== undefined) {\n                totalWidth += bend.width;\n            }\n            else {\n                const additional_width = bend.type === Bend.UP ? this.render_options.bend_width : this.render_options.release_width;\n                bend.width = Math.max(additional_width, measureText(bend.text)) + 3;\n                bend.draw_width = bend.width / 2;\n                totalWidth += bend.width;\n            }\n        }\n        this.setWidth(totalWidth + this.x_shift);\n        return this;\n    }\n    /** Draw the bend on the rendering context. */\n    draw() {\n        var _a;\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(Modifier.Position.RIGHT, this.index);\n        start.x += 3;\n        start.y += 0.5;\n        const x_shift = this.x_shift;\n        const stave = note.checkStave();\n        const spacing = stave.getSpacingBetweenLines();\n        const lowestY = note.getYs().reduce((a, b) => (a < b ? a : b));\n        // this.text_line is relative to top string in the group.\n        const bend_height = start.y - ((this.text_line + 1) * spacing + start.y - lowestY) + 3;\n        const annotation_y = start.y - ((this.text_line + 1) * spacing + start.y - lowestY) - 1;\n        const renderBend = (x, y, width, height) => {\n            const cp_x = x + width;\n            const cp_y = y;\n            ctx.save();\n            ctx.beginPath();\n            ctx.setLineWidth(this.render_options.line_width);\n            ctx.setStrokeStyle(this.render_options.line_style);\n            ctx.setFillStyle(this.render_options.line_style);\n            ctx.moveTo(x, y);\n            ctx.quadraticCurveTo(cp_x, cp_y, x + width, height);\n            ctx.stroke();\n            ctx.restore();\n        };\n        const renderRelease = (x, y, width, height) => {\n            ctx.save();\n            ctx.beginPath();\n            ctx.setLineWidth(this.render_options.line_width);\n            ctx.setStrokeStyle(this.render_options.line_style);\n            ctx.setFillStyle(this.render_options.line_style);\n            ctx.moveTo(x, height);\n            ctx.quadraticCurveTo(x + width, height, x + width, y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        const renderArrowHead = (x, y, direction) => {\n            const width = 4;\n            const yBase = y + width * direction;\n            ctx.beginPath();\n            ctx.moveTo(x, y); // tip of the arrow\n            ctx.lineTo(x - width, yBase);\n            ctx.lineTo(x + width, yBase);\n            ctx.closePath();\n            ctx.fill();\n        };\n        const renderText = (x, text) => {\n            ctx.save();\n            ctx.setFont(this.textFont);\n            const render_x = x - ctx.measureText(text).width / 2;\n            ctx.fillText(text, render_x, annotation_y);\n            ctx.restore();\n        };\n        let last_bend = undefined;\n        let last_bend_draw_width = 0;\n        let last_drawn_width = 0;\n        if ((_a = this.tap) === null || _a === void 0 ? void 0 : _a.length) {\n            const tapStart = note.getModifierStartXY(Modifier.Position.CENTER, this.index);\n            renderText(tapStart.x, this.tap);\n        }\n        for (let i = 0; i < this.phrase.length; ++i) {\n            const bend = this.phrase[i];\n            if (!bend.draw_width)\n                bend.draw_width = 0;\n            if (i === 0)\n                bend.draw_width += x_shift;\n            last_drawn_width = bend.draw_width + last_bend_draw_width - (i === 1 ? x_shift : 0);\n            if (bend.type === Bend.UP) {\n                if (last_bend && last_bend.type === Bend.UP) {\n                    renderArrowHead(start.x, bend_height, +1);\n                }\n                renderBend(start.x, start.y, last_drawn_width, bend_height);\n            }\n            if (bend.type === Bend.DOWN) {\n                if (last_bend && last_bend.type === Bend.UP) {\n                    renderRelease(start.x, start.y, last_drawn_width, bend_height);\n                }\n                if (last_bend && last_bend.type === Bend.DOWN) {\n                    renderArrowHead(start.x, start.y, -1);\n                    renderRelease(start.x, start.y, last_drawn_width, bend_height);\n                }\n                if (!last_bend) {\n                    last_drawn_width = bend.draw_width;\n                    renderRelease(start.x, start.y, last_drawn_width, bend_height);\n                }\n            }\n            renderText(start.x + last_drawn_width, bend.text);\n            last_bend = bend;\n            last_bend_draw_width = bend.draw_width;\n            last_bend.x = start.x;\n            start.x += last_drawn_width;\n        }\n        if (!last_bend || last_bend.x == undefined) {\n            throw new RuntimeError('NoLastBendForBend', 'Internal error.');\n        }\n        // Final arrowhead and text\n        if (last_bend.type === Bend.UP) {\n            renderArrowHead(last_bend.x + last_drawn_width, bend_height, +1);\n        }\n        else if (last_bend.type === Bend.DOWN) {\n            renderArrowHead(last_bend.x + last_drawn_width, start.y, -1);\n        }\n    }\n}\n/** Default text font. */\nBend.TEXT_FONT = Object.assign({}, Element.TEXT_FONT);\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements dot modifiers for notes.\nimport { Modifier } from './modifier';\nimport { Category, isGraceNote, isStaveNote, isTabNote } from './typeguard';\nimport { RuntimeError } from './util';\nexport class Dot extends Modifier {\n    constructor() {\n        super();\n        this.position = Modifier.Position.RIGHT;\n        this.radius = 2;\n        this.setWidth(5);\n        this.dot_shiftY = 0;\n    }\n    static get CATEGORY() {\n        return Category.Dot;\n    }\n    /** Returns the dots associated to a Note. */\n    static getDots(note) {\n        return note.getModifiersByType(Dot.CATEGORY);\n    }\n    /** Add a dot on the specified keys to the notes. */\n    static buildAndAttach(notes, options) {\n        for (const note of notes) {\n            if (options === null || options === void 0 ? void 0 : options.all) {\n                for (let i = 0; i < note.keys.length; i++) {\n                    const dot = new Dot();\n                    dot.setDotShiftY(note.glyph.dot_shiftY);\n                    note.addModifier(dot, i);\n                }\n            }\n            else if ((options === null || options === void 0 ? void 0 : options.index) != undefined) {\n                const dot = new Dot();\n                dot.setDotShiftY(note.glyph.dot_shiftY);\n                note.addModifier(dot, options === null || options === void 0 ? void 0 : options.index);\n            }\n            else {\n                const dot = new Dot();\n                dot.setDotShiftY(note.glyph.dot_shiftY);\n                note.addModifier(dot, 0);\n            }\n        }\n    }\n    // Arrange dots inside a ModifierContext.\n    static format(dots, state) {\n        const right_shift = state.right_shift;\n        const dot_spacing = 1;\n        if (!dots || dots.length === 0)\n            return false;\n        const dot_list = [];\n        const max_shift_map = {};\n        for (let i = 0; i < dots.length; ++i) {\n            const dot = dots[i];\n            const note = dot.getNote();\n            let props;\n            let shift;\n            if (isStaveNote(note)) {\n                const index = dot.checkIndex();\n                props = note.getKeyProps()[index];\n                // consider right displaced head with no previous modifier\n                shift = note.getFirstDotPx();\n            }\n            else if (isTabNote(note)) {\n                props = { line: 0.5 }; // Shim key props for dot placement\n                shift = right_shift;\n            }\n            else {\n                // note object is not StaveNote or TabNote.\n                throw new RuntimeError('Internal', 'Unexpected instance.');\n            }\n            const note_id = note.getAttribute('id');\n            dot_list.push({ line: props.line, note, note_id, dot });\n            max_shift_map[note_id] = Math.max(max_shift_map[note_id] || shift, shift);\n        }\n        // Sort dots by line number.\n        dot_list.sort((a, b) => b.line - a.line);\n        let dot_shift = right_shift;\n        let x_width = 0;\n        let last_line = null;\n        let last_note = null;\n        let prev_dotted_space = null;\n        let half_shiftY = 0;\n        for (let i = 0; i < dot_list.length; ++i) {\n            const { dot, note, note_id, line } = dot_list[i];\n            // Reset the position of the dot every line.\n            if (line !== last_line || note !== last_note) {\n                dot_shift = max_shift_map[note_id];\n            }\n            if (!note.isRest() && line !== last_line) {\n                if (Math.abs(line % 1) === 0.5) {\n                    // note is on a space, so no dot shift\n                    half_shiftY = 0;\n                }\n                else {\n                    // note is on a line, so shift dot to space above the line\n                    half_shiftY = 0.5;\n                    if (last_note != null && !last_note.isRest() && last_line != null && last_line - line === 0.5) {\n                        // previous note on a space, so shift dot to space below the line\n                        half_shiftY = -0.5;\n                    }\n                    else if (line + half_shiftY === prev_dotted_space) {\n                        // previous space is dotted, so shift dot to space below the line\n                        half_shiftY = -0.5;\n                    }\n                }\n            }\n            // convert half_shiftY to a multiplier for dots.draw()\n            if (note.isRest()) {\n                dot.dot_shiftY += -half_shiftY;\n            }\n            else {\n                dot.dot_shiftY = -half_shiftY;\n            }\n            prev_dotted_space = line + half_shiftY;\n            dot.setXShift(dot_shift);\n            dot_shift += dot.getWidth() + dot_spacing; // spacing\n            x_width = dot_shift > x_width ? dot_shift : x_width;\n            last_line = line;\n            last_note = note;\n        }\n        // Update state.\n        state.right_shift += x_width;\n        return true;\n    }\n    setNote(note) {\n        this.note = note;\n        if (isGraceNote(note)) {\n            this.radius *= 0.5;\n            this.setWidth(3);\n        }\n        return this;\n    }\n    setDotShiftY(y) {\n        this.dot_shiftY = y;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const stave = note.checkStave();\n        const lineSpace = stave.getSpacingBetweenLines();\n        const start = note.getModifierStartXY(this.position, this.index, { forceFlagRight: true });\n        // Set the starting y coordinate to the base of the stem for TabNotes.\n        if (isTabNote(note)) {\n            start.y = note.getStemExtents().baseY;\n        }\n        const x = start.x + this.x_shift + this.width - this.radius;\n        const y = start.y + this.y_shift + this.dot_shiftY * lineSpace;\n        ctx.beginPath();\n        ctx.arc(x, y, this.radius, 0, Math.PI * 2, false);\n        ctx.fill();\n    }\n}\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n// Author Larry Kuhns 2013\n// Class to draws string numbers into the notation.\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Modifier, ModifierPosition } from './modifier';\nimport { Tables } from './tables';\nimport { TextFormatter } from './textformatter';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class FretHandFinger extends Modifier {\n    constructor(finger) {\n        super();\n        this.finger = finger;\n        this.width = 7;\n        this.position = Modifier.Position.LEFT; // Default position above stem or note head\n        this.x_shift = 0;\n        this.y_shift = 0;\n        this.x_offset = 0; // Horizontal offset from default\n        this.y_offset = 0; // Vertical offset from default\n        this.resetFont();\n    }\n    static get CATEGORY() {\n        return Category.FretHandFinger;\n    }\n    // Arrange fingerings inside a ModifierContext.\n    static format(nums, state) {\n        const { left_shift, right_shift } = state;\n        const num_spacing = 1;\n        if (!nums || nums.length === 0)\n            return false;\n        const nums_list = [];\n        let prev_note = null;\n        let shiftLeft = 0;\n        let shiftRight = 0;\n        for (let i = 0; i < nums.length; ++i) {\n            const num = nums[i];\n            const note = num.getNote();\n            const pos = num.getPosition();\n            const index = num.checkIndex();\n            const props = note.getKeyProps()[index];\n            const textFormatter = TextFormatter.create(num.textFont);\n            const textHeight = textFormatter.maxHeight;\n            if (num.position === ModifierPosition.ABOVE) {\n                state.top_text_line += textHeight / Tables.STAVE_LINE_DISTANCE + 0.5;\n            }\n            if (num.position === ModifierPosition.BELOW) {\n                state.text_line += textHeight / Tables.STAVE_LINE_DISTANCE + 0.5;\n            }\n            if (note !== prev_note) {\n                for (let n = 0; n < note.keys.length; ++n) {\n                    if (left_shift === 0) {\n                        shiftLeft = Math.max(note.getLeftDisplacedHeadPx(), shiftLeft);\n                    }\n                    if (right_shift === 0) {\n                        shiftRight = Math.max(note.getRightDisplacedHeadPx(), shiftRight);\n                    }\n                }\n                prev_note = note;\n            }\n            nums_list.push({\n                note,\n                num,\n                pos,\n                line: props.line,\n                shiftL: shiftLeft,\n                shiftR: shiftRight,\n            });\n        }\n        // Sort fingernumbers by line number.\n        nums_list.sort((a, b) => b.line - a.line);\n        let numShiftL = 0;\n        let numShiftR = 0;\n        let xWidthL = 0;\n        let xWidthR = 0;\n        let lastLine = null;\n        let lastNote = null;\n        for (let i = 0; i < nums_list.length; ++i) {\n            let num_shift = 0;\n            const { note, pos, num, line, shiftL, shiftR } = nums_list[i];\n            // Reset the position of the string number every line.\n            if (line !== lastLine || note !== lastNote) {\n                numShiftL = left_shift + shiftL;\n                numShiftR = right_shift + shiftR;\n            }\n            const numWidth = num.getWidth() + num_spacing;\n            if (pos === Modifier.Position.LEFT) {\n                num.setXShift(left_shift + numShiftL);\n                num_shift = left_shift + numWidth; // spacing\n                xWidthL = num_shift > xWidthL ? num_shift : xWidthL;\n            }\n            else if (pos === Modifier.Position.RIGHT) {\n                num.setXShift(numShiftR);\n                num_shift = shiftRight + numWidth; // spacing\n                xWidthR = num_shift > xWidthR ? num_shift : xWidthR;\n            }\n            lastLine = line;\n            lastNote = note;\n        }\n        state.left_shift += xWidthL;\n        state.right_shift += xWidthR;\n        return true;\n    }\n    static easyScoreHook({ fingerings } = {}, note, builder) {\n        fingerings === null || fingerings === void 0 ? void 0 : fingerings.split(',').map((fingeringString) => {\n            const split = fingeringString.trim().split('.');\n            const params = { number: split[0] };\n            if (split[1])\n                params.position = split[1];\n            return builder.getFactory().Fingering(params);\n        }).map((fingering, index) => note.addModifier(fingering, index));\n    }\n    setFretHandFinger(finger) {\n        this.finger = finger;\n        return this;\n    }\n    getFretHandFinger() {\n        return this.finger;\n    }\n    setOffsetX(x) {\n        this.x_offset = x;\n        return this;\n    }\n    setOffsetY(y) {\n        this.y_offset = y;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(this.position, this.index);\n        let dot_x = start.x + this.x_shift + this.x_offset;\n        let dot_y = start.y + this.y_shift + this.y_offset + 5;\n        switch (this.position) {\n            case Modifier.Position.ABOVE:\n                dot_x -= 4;\n                dot_y -= 12;\n                break;\n            case Modifier.Position.BELOW:\n                dot_x -= 2;\n                dot_y += 10;\n                break;\n            case Modifier.Position.LEFT:\n                dot_x -= this.width;\n                break;\n            case Modifier.Position.RIGHT:\n                dot_x += 1;\n                break;\n            default:\n                throw new RuntimeError('InvalidPosition', `The position ${this.position} does not exist`);\n        }\n        ctx.save();\n        ctx.setFont(this.textFont);\n        ctx.fillText('' + this.finger, dot_x, dot_y);\n        ctx.restore();\n    }\n}\nFretHandFinger.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: 9,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { BoundingBox } from './boundingbox';\nimport { Glyph } from './glyph';\nimport { Note } from './note';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (NoteHead.DEBUG)\n        log('Vex.Flow.NoteHead', args);\n}\n/**\n * Draw slashnote head manually. No glyph exists for this.\n * @param ctx the Canvas context\n * @param duration the duration of the note. ex: \"4\"\n * @param x the x coordinate to draw at\n * @param y the y coordinate to draw at\n * @param stem_direction the direction of the stem\n */\nfunction drawSlashNoteHead(ctx, duration, x, y, stem_direction, staveSpace) {\n    const width = Tables.SLASH_NOTEHEAD_WIDTH;\n    ctx.save();\n    ctx.setLineWidth(Tables.STEM_WIDTH);\n    let fill = false;\n    if (Tables.durationToNumber(duration) > 2) {\n        fill = true;\n    }\n    if (!fill)\n        x -= (Tables.STEM_WIDTH / 2) * stem_direction;\n    ctx.beginPath();\n    ctx.moveTo(x, y + staveSpace);\n    ctx.lineTo(x, y + 1);\n    ctx.lineTo(x + width, y - staveSpace);\n    ctx.lineTo(x + width, y);\n    ctx.lineTo(x, y + staveSpace);\n    ctx.closePath();\n    if (fill) {\n        ctx.fill();\n    }\n    else {\n        ctx.stroke();\n    }\n    if (Tables.durationToFraction(duration).equals(0.5)) {\n        const breve_lines = [-3, -1, width + 1, width + 3];\n        for (let i = 0; i < breve_lines.length; i++) {\n            ctx.beginPath();\n            ctx.moveTo(x + breve_lines[i], y - 10);\n            ctx.lineTo(x + breve_lines[i], y + 11);\n            ctx.stroke();\n        }\n    }\n    ctx.restore();\n}\n/**\n * `NoteHeads` are typically not manipulated\n * directly, but used internally in `StaveNote`.\n *\n * See `tests/notehead_tests.ts` for usage examples.\n */\nexport class NoteHead extends Note {\n    constructor(noteStruct) {\n        super(noteStruct);\n        this.custom_glyph = false;\n        this.stem_up_x_offset = 0;\n        this.stem_down_x_offset = 0;\n        this.index = noteStruct.index;\n        this.x = noteStruct.x || 0;\n        this.y = noteStruct.y || 0;\n        if (noteStruct.note_type)\n            this.noteType = noteStruct.note_type;\n        this.displaced = noteStruct.displaced || false;\n        this.stem_direction = noteStruct.stem_direction || Stem.UP;\n        this.line = noteStruct.line || 0;\n        // Get glyph code based on duration and note type. This could be\n        // regular notes, rests, or other custom codes.\n        this.glyph = Tables.getGlyphProps(this.duration, this.noteType);\n        defined(this.glyph, 'BadArguments', `No glyph found for duration '${this.duration}' and type '${this.noteType}'`);\n        // Swap out the glyph with leger lines\n        if ((this.line > 5 || this.line < 0) && this.glyph.leger_code_head) {\n            this.glyph.code_head = this.glyph.leger_code_head;\n        }\n        this.glyph_code = this.glyph.code_head;\n        this.x_shift = noteStruct.x_shift || 0;\n        if (noteStruct.custom_glyph_code) {\n            this.custom_glyph = true;\n            this.glyph_code = noteStruct.custom_glyph_code;\n            this.stem_up_x_offset = noteStruct.stem_up_x_offset || 0;\n            this.stem_down_x_offset = noteStruct.stem_down_x_offset || 0;\n        }\n        this.style = noteStruct.style;\n        this.slashed = noteStruct.slashed || false;\n        this.render_options = Object.assign(Object.assign({}, this.render_options), { \n            // font size for note heads\n            glyph_font_scale: noteStruct.glyph_font_scale || Tables.NOTATION_FONT_SCALE });\n        this.setWidth(this.glyph.getWidth(this.render_options.glyph_font_scale));\n    }\n    static get CATEGORY() {\n        return Category.NoteHead;\n    }\n    /** Get the width of the notehead. */\n    getWidth() {\n        return this.width;\n    }\n    /** Determine if the notehead is displaced. */\n    isDisplaced() {\n        return this.displaced === true;\n    }\n    /** Get the glyph data. */\n    getGlyph() {\n        return this.glyph;\n    }\n    /** Set the X coordinate. */\n    setX(x) {\n        this.x = x;\n        return this;\n    }\n    /** Get the Y coordinate. */\n    getY() {\n        return this.y;\n    }\n    /** Set the Y coordinate. */\n    setY(y) {\n        this.y = y;\n        return this;\n    }\n    /** Get the stave line the notehead is placed on. */\n    getLine() {\n        return this.line;\n    }\n    /** Set the stave line the notehead is placed on. */\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    /** Get the canvas `x` coordinate position of the notehead. */\n    getAbsoluteX() {\n        // If the note has not been preformatted, then get the static x value\n        // Otherwise, it's been formatted and we should use it's x value relative\n        // to its tick context\n        const x = !this.preFormatted ? this.x : super.getAbsoluteX();\n        // For a more natural displaced notehead, we adjust the displacement amount\n        // by half the stem width in order to maintain a slight overlap with the stem\n        const displacementStemAdjustment = Stem.WIDTH / 2;\n        const musicFont = Tables.currentMusicFont();\n        const fontShift = musicFont.lookupMetric('notehead.shiftX', 0) * this.stem_direction;\n        const displacedFontShift = musicFont.lookupMetric('noteHead.displaced.shiftX', 0) * this.stem_direction;\n        return (x +\n            fontShift +\n            (this.displaced ? (this.width - displacementStemAdjustment) * this.stem_direction + displacedFontShift : 0));\n    }\n    /** Get the `BoundingBox` for the `NoteHead`. */\n    getBoundingBox() {\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call getBoundingBox on an unformatted note.\");\n        }\n        const spacing = this.checkStave().getSpacingBetweenLines();\n        const half_spacing = spacing / 2;\n        const min_y = this.y - half_spacing;\n        return new BoundingBox(this.getAbsoluteX(), min_y, this.width, spacing);\n    }\n    /** Set notehead to a provided `stave`. */\n    setStave(stave) {\n        const line = this.getLine();\n        this.stave = stave;\n        if (this.stave) {\n            this.setY(this.stave.getYForNote(line));\n            this.setContext(this.stave.getContext());\n        }\n        return this;\n    }\n    /** Pre-render formatting. */\n    preFormat() {\n        if (this.preFormatted)\n            return this;\n        const width = this.getWidth() + this.leftDisplacedHeadPx + this.rightDisplacedHeadPx;\n        this.setWidth(width);\n        this.preFormatted = true;\n        return this;\n    }\n    /** Draw the notehead. */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        let head_x = this.getAbsoluteX();\n        if (this.custom_glyph) {\n            // head_x += this.x_shift;\n            head_x += this.stem_direction === Stem.UP ? this.stem_up_x_offset : this.stem_down_x_offset;\n        }\n        const y = this.y;\n        L(\"Drawing note head '\", this.noteType, this.duration, \"' at\", head_x, y);\n        // Begin and end positions for head.\n        const stem_direction = this.stem_direction;\n        const glyph_font_scale = this.render_options.glyph_font_scale;\n        if (this.style) {\n            this.applyStyle(ctx);\n        }\n        const categorySuffix = `${this.glyph_code}Stem${stem_direction === Stem.UP ? 'Up' : 'Down'}`;\n        if (this.noteType === 's') {\n            const staveSpace = this.checkStave().getSpacingBetweenLines();\n            drawSlashNoteHead(ctx, this.duration, head_x, y, stem_direction, staveSpace);\n        }\n        else {\n            Glyph.renderGlyph(ctx, head_x, y, glyph_font_scale, this.glyph_code, {\n                category: this.custom_glyph ? `noteHead.custom.${categorySuffix}` : `noteHead.standard.${categorySuffix}`,\n            });\n        }\n        if (this.style) {\n            this.restoreStyle(ctx);\n        }\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.NoteHead.DEBUG` to `true`. */\nNoteHead.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// `StemmableNote` is an abstract interface for notes with optional stems.\n// Examples of stemmable notes are `StaveNote` and `TabNote`\nimport { Glyph } from './glyph';\nimport { Note } from './note';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class StemmableNote extends Note {\n    constructor(noteStruct) {\n        super(noteStruct);\n    }\n    static get CATEGORY() {\n        return Category.StemmableNote;\n    }\n    // Get and set the note's `Stem`\n    getStem() {\n        return this.stem;\n    }\n    checkStem() {\n        if (!this.stem) {\n            throw new RuntimeError('NoStem', 'No stem attached to instance');\n        }\n        return this.stem;\n    }\n    setStem(stem) {\n        this.stem = stem;\n        this.addChildElement(stem);\n        return this;\n    }\n    // Builds and sets a new stem\n    buildStem() {\n        const stem = new Stem();\n        this.setStem(stem);\n        return this;\n    }\n    buildFlag(category = 'flag') {\n        const { glyph } = this;\n        if (this.hasFlag()) {\n            const flagCode = this.getStemDirection() === Stem.DOWN ? glyph.code_flag_downstem : glyph.code_flag_upstem;\n            this.flag = new Glyph(flagCode, this.render_options.glyph_font_scale, { category });\n        }\n    }\n    // Get the custom glyph associated with the outer note head on the base of the stem.\n    getBaseCustomNoteHeadGlyph() {\n        if (this.getStemDirection() === Stem.DOWN) {\n            return this.customGlyphs[this.customGlyphs.length - 1];\n        }\n        else {\n            return this.customGlyphs[0];\n        }\n    }\n    // Get the full length of stem\n    getStemLength() {\n        return Stem.HEIGHT + this.getStemExtension();\n    }\n    // Get the number of beams for this duration\n    getBeamCount() {\n        const glyph = this.getGlyph();\n        if (glyph) {\n            return glyph.beam_count;\n        }\n        else {\n            return 0;\n        }\n    }\n    // Get the minimum length of stem\n    getStemMinimumLength() {\n        const frac = Tables.durationToFraction(this.duration);\n        let length = frac.value() <= 1 ? 0 : 20;\n        // if note is flagged, cannot shorten beam\n        switch (this.duration) {\n            case '8':\n                if (this.beam == undefined)\n                    length = 35;\n                break;\n            case '16':\n                length = this.beam == undefined ? 35 : 25;\n                break;\n            case '32':\n                length = this.beam == undefined ? 45 : 35;\n                break;\n            case '64':\n                length = this.beam == undefined ? 50 : 40;\n                break;\n            case '128':\n                length = this.beam == undefined ? 55 : 45;\n                break;\n            default:\n                break;\n        }\n        return length;\n    }\n    // Get/set the direction of the stem\n    getStemDirection() {\n        if (!this.stem_direction)\n            throw new RuntimeError('NoStem', 'No stem attached to this note.');\n        return this.stem_direction;\n    }\n    setStemDirection(direction) {\n        if (!direction)\n            direction = Stem.UP;\n        if (direction !== Stem.UP && direction !== Stem.DOWN) {\n            throw new RuntimeError('BadArgument', `Invalid stem direction: ${direction}`);\n        }\n        this.stem_direction = direction;\n        // Reset and reformat everything. Flag has to be built before calling getStemExtension.\n        this.reset();\n        if (this.hasFlag()) {\n            this.buildFlag();\n        }\n        this.beam = undefined;\n        if (this.stem) {\n            this.stem.setDirection(direction);\n            this.stem.setExtension(this.getStemExtension());\n            // Lookup the base custom notehead (closest to the base of the stem) to extend or shorten\n            // the stem appropriately. If there's no custom note head, lookup the standard notehead.\n            const glyph = this.getBaseCustomNoteHeadGlyph() || this.getGlyph();\n            // Get the font-specific customizations for the note heads.\n            const offsets = Tables.currentMusicFont().lookupMetric(`stem.noteHead.${glyph.code_head}`, {\n                offsetYBaseStemUp: 0,\n                offsetYTopStemUp: 0,\n                offsetYBaseStemDown: 0,\n                offsetYTopStemDown: 0,\n            });\n            // Configure the stem to use these offsets.\n            this.stem.setOptions({\n                stem_up_y_offset: offsets.offsetYTopStemUp,\n                stem_down_y_offset: offsets.offsetYTopStemDown,\n                stem_up_y_base_offset: offsets.offsetYBaseStemUp,\n                stem_down_y_base_offset: offsets.offsetYBaseStemDown, // glyph.stem_down_y_base_offset,\n            });\n        }\n        if (this.preFormatted) {\n            this.preFormat();\n        }\n        return this;\n    }\n    // Get the `x` coordinate of the stem\n    getStemX() {\n        const x_begin = this.getAbsoluteX() + this.x_shift;\n        const x_end = this.getAbsoluteX() + this.x_shift + this.getGlyphWidth();\n        const stem_x = this.stem_direction === Stem.DOWN ? x_begin : x_end;\n        return stem_x;\n    }\n    // Get the `x` coordinate for the center of the glyph.\n    // Used for `TabNote` stems and stemlets over rests\n    getCenterGlyphX() {\n        return this.getAbsoluteX() + this.x_shift + this.getGlyphWidth() / 2;\n    }\n    // Get the stem extension for the current duration\n    getStemExtension() {\n        const glyph = this.getGlyph();\n        if (this.stem_extension_override != undefined) {\n            return this.stem_extension_override;\n        }\n        // Use stem_beam_extension with beams\n        if (this.beam) {\n            return glyph.stem_beam_extension;\n        }\n        if (glyph) {\n            return this.getStemDirection() === Stem.UP ? glyph.stem_up_extension : glyph.stem_down_extension;\n        }\n        return 0;\n    }\n    // Set the stem length to a specific. Will override the default length.\n    setStemLength(height) {\n        this.stem_extension_override = height - Stem.HEIGHT;\n        return this;\n    }\n    // Get the top and bottom `y` values of the stem.\n    getStemExtents() {\n        if (!this.stem)\n            throw new RuntimeError('NoStem', 'No stem attached to this note.');\n        return this.stem.getExtents();\n    }\n    /** Gets the `y` value for the top modifiers at a specific `textLine`. */\n    getYForTopText(textLine) {\n        const stave = this.checkStave();\n        if (this.hasStem()) {\n            const extents = this.getStemExtents();\n            if (!extents)\n                throw new RuntimeError('InvalidState', 'Stem does not have extents.');\n            return Math.min(stave.getYForTopText(textLine), extents.topY - this.render_options.annotation_spacing * (textLine + 1));\n        }\n        else {\n            return stave.getYForTopText(textLine);\n        }\n    }\n    /** Gets the `y` value for the bottom modifiers at a specific `textLine`. */\n    getYForBottomText(textLine) {\n        const stave = this.checkStave();\n        if (this.hasStem()) {\n            const extents = this.getStemExtents();\n            if (!extents)\n                throw new RuntimeError('InvalidState', 'Stem does not have extents.');\n            return Math.max(stave.getYForTopText(textLine), extents.baseY + this.render_options.annotation_spacing * textLine);\n        }\n        else {\n            return stave.getYForBottomText(textLine);\n        }\n    }\n    hasFlag() {\n        return Tables.getGlyphProps(this.duration).flag && !this.beam;\n    }\n    /** Post formats the note. */\n    postFormat() {\n        var _a;\n        (_a = this.beam) === null || _a === void 0 ? void 0 : _a.postFormat();\n        this.postFormatted = true;\n        return this;\n    }\n    /** Renders the stem onto the canvas. */\n    drawStem(stemOptions) {\n        var _a;\n        this.checkContext();\n        this.setRendered();\n        this.setStem(new Stem(stemOptions));\n        (_a = this.stem) === null || _a === void 0 ? void 0 : _a.setContext(this.getContext()).draw();\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// This file implements notes for standard notation. This consists of one or\n// more `NoteHeads`, an optional stem, and an optional flag.\n//\n// Throughout these comments, a \"note\" refers to the entire `StaveNote`,\n// and a \"key\" refers to a specific pitch/notehead within a note.\n//\n// See `tests/stavenote_tests.ts` for usage examples.\nimport { BoundingBox } from './boundingbox';\nimport { Modifier } from './modifier';\nimport { NoteHead } from './notehead';\nimport { Stem } from './stem';\nimport { StemmableNote } from './stemmablenote';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, log, midLine, RuntimeError } from './util';\nfunction showDeprecationWarningForNoteHeads() {\n    // eslint-disable-next-line\n    console.warn('StaveNote.note_heads is deprecated. Use StaveNote.noteHeads instead.', 'This accessor will be removed in VexFlow 5.0.');\n}\n// To enable logging for this class. Set `Vex.Flow.StaveNote.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (StaveNote.DEBUG)\n        log('Vex.Flow.StaveNote', args);\n}\nconst isInnerNoteIndex = (note, index) => index === (note.getStemDirection() === Stem.UP ? note.keyProps.length - 1 : 0);\n// Helper methods for rest positioning in ModifierContext.\nfunction shiftRestVertical(rest, note, dir) {\n    const delta = dir;\n    rest.line += delta;\n    rest.maxLine += delta;\n    rest.minLine += delta;\n    rest.note.setKeyLine(0, rest.note.getKeyLine(0) + delta);\n}\n// Called from formatNotes :: center a rest between two notes\nfunction centerRest(rest, noteU, noteL) {\n    const delta = rest.line - midLine(noteU.minLine, noteL.maxLine);\n    rest.note.setKeyLine(0, rest.note.getKeyLine(0) - delta);\n    rest.line -= delta;\n    rest.maxLine -= delta;\n    rest.minLine -= delta;\n}\nexport class StaveNote extends StemmableNote {\n    constructor(noteStruct) {\n        var _a, _b, _c;\n        super(noteStruct);\n        //////////////////////////////////////////////////////////////////////////////////////////////////\n        // INSTANCE MEMBERS\n        this.minLine = 0;\n        this.maxLine = 0;\n        // Sorted variant of keyProps used internally\n        this.sortedKeyProps = [];\n        this.ledgerLineStyle = {};\n        this.clef = (_a = noteStruct.clef) !== null && _a !== void 0 ? _a : 'treble';\n        this.octave_shift = (_b = noteStruct.octave_shift) !== null && _b !== void 0 ? _b : 0;\n        // Pull note rendering properties.\n        this.glyph = Tables.getGlyphProps(this.duration, this.noteType);\n        defined(this.glyph, 'BadArguments', `No glyph found for duration '${this.duration}' and type '${this.noteType}'`);\n        // if true, displace note to right\n        this.displaced = false;\n        this.dot_shiftY = 0;\n        // for displaced ledger lines\n        this.use_default_head_x = false;\n        // Drawing\n        this._noteHeads = [];\n        this.modifiers = [];\n        this.render_options = Object.assign(Object.assign({}, this.render_options), { \n            // font size for note heads and rests\n            glyph_font_scale: noteStruct.glyph_font_scale || Tables.NOTATION_FONT_SCALE, \n            // number of stroke px to the left and right of head\n            stroke_px: noteStruct.stroke_px || StaveNote.LEDGER_LINE_OFFSET });\n        this.calculateKeyProps();\n        this.buildStem();\n        // Set the stem direction\n        if (noteStruct.auto_stem) {\n            this.autoStem();\n        }\n        else {\n            this.setStemDirection((_c = noteStruct.stem_direction) !== null && _c !== void 0 ? _c : Stem.UP);\n        }\n        this.reset();\n        this.buildFlag();\n    }\n    static get CATEGORY() {\n        return Category.StaveNote;\n    }\n    /**\n     * @deprecated Use Stem.UP.\n     */\n    static get STEM_UP() {\n        return Stem.UP;\n    }\n    /**\n     * @deprecated Use Stem.DOWN.\n     */\n    static get STEM_DOWN() {\n        return Stem.DOWN;\n    }\n    static get LEDGER_LINE_OFFSET() {\n        return 3;\n    }\n    static get minNoteheadPadding() {\n        const musicFont = Tables.currentMusicFont();\n        return musicFont.lookupMetric('glyphs.noteHead.minPadding');\n    }\n    /** Format notes inside a ModifierContext. */\n    static format(notes, state) {\n        if (!notes || notes.length < 2)\n            return false;\n        const notesList = [];\n        for (let i = 0; i < notes.length; i++) {\n            // Formatting uses sortedKeyProps to calculate line and minL.\n            const props = notes[i].sortedKeyProps;\n            const line = props[0].keyProps.line;\n            let minL = props[props.length - 1].keyProps.line;\n            const stemDirection = notes[i].getStemDirection();\n            const stemMax = notes[i].getStemLength() / 10;\n            const stemMin = notes[i].getStemMinimumLength() / 10;\n            let maxL;\n            if (notes[i].isRest()) {\n                maxL = line + notes[i].glyph.line_above;\n                minL = line - notes[i].glyph.line_below;\n            }\n            else {\n                maxL =\n                    stemDirection === 1 ? props[props.length - 1].keyProps.line + stemMax : props[props.length - 1].keyProps.line;\n                minL = stemDirection === 1 ? props[0].keyProps.line : props[0].keyProps.line - stemMax;\n            }\n            notesList.push({\n                line: props[0].keyProps.line,\n                maxLine: maxL,\n                minLine: minL,\n                isrest: notes[i].isRest(),\n                stemDirection: stemDirection,\n                stemMax,\n                stemMin,\n                voice_shift: notes[i].getVoiceShiftWidth(),\n                is_displaced: notes[i].isDisplaced(),\n                note: notes[i],\n            });\n        }\n        let voices = 0;\n        let noteU = undefined;\n        let noteM = undefined;\n        let noteL = undefined;\n        const draw = [false, false, false];\n        for (let i = 0; i < notesList.length; i++) {\n            draw[i] = notesList[i].note.render_options.draw == false ? false : true;\n        }\n        if (draw[0] && draw[1] && draw[2]) {\n            // Three visible notes\n            voices = 3;\n            noteU = notesList[0];\n            noteM = notesList[1];\n            noteL = notesList[2];\n        }\n        else if (draw[0] && draw[1]) {\n            // Two visible notes, 0 & 1\n            voices = 2;\n            noteU = notesList[0];\n            noteL = notesList[1];\n        }\n        else if (draw[0] && draw[2]) {\n            // Two visible notes, 0 & 2\n            voices = 2;\n            noteU = notesList[0];\n            noteL = notesList[2];\n        }\n        else if (draw[1] && draw[2]) {\n            // Two visible notes, 1 & 2\n            voices = 2;\n            noteU = notesList[1];\n            noteL = notesList[2];\n        }\n        else {\n            // No shift required for less than 2 visible notes\n            return true;\n        }\n        // for two voice backward compatibility, ensure upper voice is stems up\n        // for three voices, the voices must be in order (upper, middle, lower)\n        if (voices === 2 && noteU.stemDirection === -1 && noteL.stemDirection === 1) {\n            noteU = notesList[1];\n            noteL = notesList[0];\n        }\n        const voiceXShift = Math.max(noteU.voice_shift, noteL.voice_shift);\n        let xShift = 0;\n        // Test for two voice note intersection\n        if (voices === 2) {\n            const lineSpacing = noteU.note.hasStem() && noteL.note.hasStem() && noteU.stemDirection === noteL.stemDirection ? 0.0 : 0.5;\n            if (noteL.isrest && noteU.isrest && noteU.note.duration === noteL.note.duration) {\n                noteL.note.render_options.draw = false;\n            }\n            else if (noteU.minLine <= noteL.maxLine + lineSpacing) {\n                if (noteU.isrest) {\n                    // shift rest up\n                    shiftRestVertical(noteU, noteL, 1);\n                }\n                else if (noteL.isrest) {\n                    // shift rest down\n                    shiftRestVertical(noteL, noteU, -1);\n                }\n                else {\n                    //Instead of shifting notes, remove the appropriate flag\n                    //If we are sharing a line, switch one notes stem direction.\n                    //If we are sharing a line and in the same voice, only then offset one note\n                    const lineDiff = Math.abs(noteU.line - noteL.line);\n                    if (noteU.note.hasStem() && noteL.note.hasStem()) {\n                        //If we have different dot values, must offset\n                        //Or If we have a white mixed with a black notehead, must offset\n                        let whiteNoteHeadCount = 0;\n                        let blackNoteHeadCount = 0;\n                        if (Tables.durationToNumber(noteU.note.duration) === 2) {\n                            whiteNoteHeadCount++;\n                        }\n                        else if (Tables.durationToNumber(noteU.note.duration) > 2) {\n                            blackNoteHeadCount++;\n                        }\n                        if (Tables.durationToNumber(noteL.note.duration) === 2) {\n                            whiteNoteHeadCount++;\n                        }\n                        else if (Tables.durationToNumber(noteL.note.duration) > 2) {\n                            blackNoteHeadCount++;\n                        }\n                        if ((whiteNoteHeadCount !== 2 && blackNoteHeadCount !== 2) ||\n                            noteU.note.getModifiersByType(Category.Dot).length !== noteL.note.getModifiersByType(Category.Dot).length) {\n                            xShift = voiceXShift + 2;\n                            if (noteU.stemDirection === noteL.stemDirection) {\n                                // upper voice is middle voice, so shift it right\n                                noteU.note.setXShift(xShift);\n                            }\n                            else {\n                                // shift lower voice right\n                                noteL.note.setXShift(xShift);\n                            }\n                        }\n                        else if (lineDiff < 1 && lineDiff > 0) {\n                            //if the notes are quite close but not on the same line, shift\n                            xShift = voiceXShift + 2;\n                            if (noteU.stemDirection === noteL.stemDirection) {\n                                // upper voice is middle voice, so shift it right\n                                noteU.note.setXShift(xShift);\n                            }\n                            else {\n                                // shift lower voice right\n                                noteL.note.setXShift(xShift);\n                            }\n                        }\n                        else if (noteU.note.voice !== noteL.note.voice) {\n                            //If we are not in the same voice\n                            if (noteU.stemDirection === noteL.stemDirection) {\n                                if (noteU.line != noteL.line) {\n                                    xShift = voiceXShift + 2;\n                                    noteU.note.setXShift(xShift);\n                                }\n                                else {\n                                    //same line, swap stem direction for one note\n                                    if (noteL.stemDirection === 1) {\n                                        noteL.stemDirection = -1;\n                                        noteL.note.setStemDirection(-1);\n                                    }\n                                }\n                            }\n                        } //Very close whole notes\n                    }\n                    else if (lineDiff < 1) {\n                        xShift = voiceXShift + 2;\n                        if (noteU.stemDirection === noteL.stemDirection) {\n                            // upper voice is middle voice, so shift it right\n                            noteU.note.setXShift(xShift);\n                        }\n                        else {\n                            // shift lower voice right\n                            noteL.note.setXShift(xShift);\n                        }\n                    }\n                    else if (noteU.note.hasStem()) {\n                        noteU.stemDirection = -noteU.note.getStemDirection();\n                        noteU.note.setStemDirection(noteU.stemDirection);\n                    }\n                    else if (noteL.note.hasStem()) {\n                        noteL.stemDirection = -noteL.note.getStemDirection();\n                        noteL.note.setStemDirection(noteL.stemDirection);\n                    }\n                }\n            }\n            // format complete\n            state.right_shift += xShift;\n            return true;\n        }\n        if (!noteM)\n            throw new RuntimeError('InvalidState', 'noteM not defined.');\n        // For three voices, test if rests can be repositioned\n        //\n        // Special case 1 :: middle voice rest between two notes\n        //\n        if (noteM.isrest && !noteU.isrest && !noteL.isrest) {\n            if (noteU.minLine <= noteM.maxLine || noteM.minLine <= noteL.maxLine) {\n                const restHeight = noteM.maxLine - noteM.minLine;\n                const space = noteU.minLine - noteL.maxLine;\n                if (restHeight < space) {\n                    // center middle voice rest between the upper and lower voices\n                    centerRest(noteM, noteU, noteL);\n                }\n                else {\n                    xShift = voiceXShift + 2; // shift middle rest right\n                    noteM.note.setXShift(xShift);\n                    if (noteL.note.hasBeam() === false) {\n                        noteL.stemDirection = -1;\n                        noteL.note.setStemDirection(-1);\n                    }\n                    if (noteU.minLine <= noteL.maxLine && noteU.note.hasBeam() === false) {\n                        noteU.stemDirection = 1;\n                        noteU.note.setStemDirection(1);\n                    }\n                }\n                // format complete\n                state.right_shift += xShift;\n                return true;\n            }\n        }\n        // Special case 2 :: all voices are rests\n        if (noteU.isrest && noteM.isrest && noteL.isrest) {\n            // Hide upper voice rest\n            noteU.note.render_options.draw = false;\n            // Hide lower voice rest\n            noteL.note.render_options.draw = false;\n            // format complete\n            state.right_shift += xShift;\n            return true;\n        }\n        // Test if any other rests can be repositioned\n        if (noteM.isrest && noteU.isrest && noteM.minLine <= noteL.maxLine) {\n            // Hide middle voice rest\n            noteM.note.render_options.draw = false;\n        }\n        if (noteM.isrest && noteL.isrest && noteU.minLine <= noteM.maxLine) {\n            // Hide middle voice rest\n            noteM.note.render_options.draw = false;\n        }\n        if (noteU.isrest && noteU.minLine <= noteM.maxLine) {\n            // shift upper voice rest up;\n            shiftRestVertical(noteU, noteM, 1);\n        }\n        if (noteL.isrest && noteM.minLine <= noteL.maxLine) {\n            // shift lower voice rest down\n            shiftRestVertical(noteL, noteM, -1);\n        }\n        // If middle voice intersects upper or lower voice\n        if (noteU.minLine <= noteM.maxLine + 0.5 || noteM.minLine <= noteL.maxLine) {\n            // shift middle note right\n            xShift = voiceXShift + 2;\n            noteM.note.setXShift(xShift);\n            if (noteL.note.hasBeam() === false) {\n                noteL.stemDirection = -1;\n                noteL.note.setStemDirection(-1);\n            }\n            if (noteU.minLine <= noteL.maxLine && noteU.note.hasBeam() === false) {\n                noteU.stemDirection = 1;\n                noteU.note.setStemDirection(1);\n            }\n        }\n        state.right_shift += xShift;\n        return true;\n    }\n    static postFormat(notes) {\n        if (!notes)\n            return false;\n        notes.forEach((note) => note.postFormat());\n        return true;\n    }\n    reset() {\n        super.reset();\n        // Save prior noteHead styles & reapply them after making new noteheads.\n        const noteHeadStyles = this._noteHeads.map((noteHead) => noteHead.getStyle());\n        this.buildNoteHeads();\n        this._noteHeads.forEach((noteHead, index) => {\n            const noteHeadStyle = noteHeadStyles[index];\n            if (noteHeadStyle)\n                noteHead.setStyle(noteHeadStyle);\n        });\n        const stave = this.stave;\n        if (stave) {\n            this._noteHeads.forEach((head) => head.setStave(stave));\n        }\n        this.calcNoteDisplacements();\n        return this;\n    }\n    setBeam(beam) {\n        this.beam = beam;\n        this.calcNoteDisplacements();\n        // Update stem extension if a beam is assigned.\n        if (this.stem) {\n            this.stem.setExtension(this.getStemExtension());\n        }\n        return this;\n    }\n    // Builds a `Stem` for the note\n    buildStem() {\n        this.setStem(new Stem({ hide: !!this.isRest() }));\n        return this;\n    }\n    // Builds a `NoteHead` for each key in the note\n    buildNoteHeads() {\n        this._noteHeads = [];\n        const stemDirection = this.getStemDirection();\n        const keys = this.getKeys();\n        let lastLine = undefined;\n        let lineDiff = undefined;\n        let displaced = false;\n        // Draw notes from bottom to top.\n        // For down-stem notes, we draw from top to bottom.\n        let start;\n        let end;\n        let step;\n        if (stemDirection === Stem.UP) {\n            start = 0;\n            end = keys.length;\n            step = 1;\n        }\n        else {\n            start = keys.length - 1;\n            end = -1;\n            step = -1;\n        }\n        for (let i = start; i !== end; i += step) {\n            // Building noteheads rely on sortedKeNotes in order to calculate the displacements\n            const noteProps = this.sortedKeyProps[i].keyProps;\n            const line = noteProps.line;\n            // Keep track of last line with a note head, so that consecutive heads\n            // are correctly displaced.\n            if (lastLine === undefined) {\n                lastLine = line;\n            }\n            else {\n                lineDiff = Math.abs(lastLine - line);\n                if (lineDiff === 0 || lineDiff === 0.5) {\n                    displaced = !displaced;\n                }\n                else {\n                    displaced = false;\n                    this.use_default_head_x = true;\n                }\n            }\n            lastLine = line;\n            const notehead = new NoteHead({\n                duration: this.duration,\n                note_type: this.noteType,\n                displaced,\n                stem_direction: stemDirection,\n                custom_glyph_code: noteProps.code,\n                glyph_font_scale: this.render_options.glyph_font_scale,\n                x_shift: noteProps.shift_right,\n                stem_up_x_offset: noteProps.stem_up_x_offset,\n                stem_down_x_offset: noteProps.stem_down_x_offset,\n                line: noteProps.line,\n            });\n            this.addChildElement(notehead);\n            this._noteHeads[this.sortedKeyProps[i].index] = notehead;\n        }\n    }\n    // Automatically sets the stem direction based on the keys in the note\n    autoStem() {\n        this.setStemDirection(this.calculateOptimalStemDirection());\n    }\n    calculateOptimalStemDirection() {\n        // Figure out optimal stem direction based on given notes\n        // minLine & maxLine rely on sortedKeyProps\n        this.minLine = this.sortedKeyProps[0].keyProps.line;\n        this.maxLine = this.sortedKeyProps[this.keyProps.length - 1].keyProps.line;\n        const MIDDLE_LINE = 3;\n        const decider = (this.minLine + this.maxLine) / 2;\n        const stemDirection = decider < MIDDLE_LINE ? Stem.UP : Stem.DOWN;\n        return stemDirection;\n    }\n    // Calculates and stores the properties for each key in the note\n    calculateKeyProps() {\n        let lastLine;\n        for (let i = 0; i < this.keys.length; ++i) {\n            const key = this.keys[i];\n            // All rests use the same position on the line.\n            // if (this.glyph.rest) key = this.glyph.position;\n            if (this.glyph.rest)\n                this.glyph.position = key;\n            const options = { octave_shift: this.octave_shift || 0, duration: this.duration };\n            const props = Tables.keyProperties(key, this.clef, options);\n            if (!props) {\n                throw new RuntimeError('BadArguments', `Invalid key for note properties: ${key}`);\n            }\n            // Override line placement for default rests\n            if (props.key === 'R') {\n                if (this.duration === '1' || this.duration === 'w') {\n                    props.line = 4;\n                }\n                else {\n                    props.line = 3;\n                }\n            }\n            // Calculate displacement of this note\n            const line = props.line;\n            if (lastLine == undefined) {\n                lastLine = line;\n            }\n            else {\n                if (Math.abs(lastLine - line) === 0.5) {\n                    this.displaced = true;\n                    props.displaced = true;\n                    // Have to mark the previous note as\n                    // displaced as well, for modifier placement\n                    if (this.keyProps.length > 0) {\n                        this.keyProps[i - 1].displaced = true;\n                    }\n                }\n            }\n            lastLine = line;\n            this.keyProps.push(props);\n        }\n        // Sort the notes from lowest line to highest line in sortedKeyProps\n        // Warn no longer required as keyProps remains unsorted\n        this.keyProps.forEach((keyProps, index) => {\n            this.sortedKeyProps.push({ keyProps, index });\n        });\n        this.sortedKeyProps.sort((a, b) => a.keyProps.line - b.keyProps.line);\n    }\n    // Get the `BoundingBox` for the entire note\n    getBoundingBox() {\n        var _a, _b;\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call getBoundingBox on an unformatted note.\");\n        }\n        const { width: w, modLeftPx, leftDisplacedHeadPx } = this.getMetrics();\n        const x = this.getAbsoluteX() - modLeftPx - leftDisplacedHeadPx;\n        let minY = 0;\n        let maxY = 0;\n        const halfLineSpacing = ((_b = (_a = this.getStave()) === null || _a === void 0 ? void 0 : _a.getSpacingBetweenLines()) !== null && _b !== void 0 ? _b : 0) / 2;\n        const lineSpacing = halfLineSpacing * 2;\n        if (this.isRest()) {\n            const y = this.ys[0];\n            const frac = Tables.durationToFraction(this.duration);\n            if (frac.equals(1) || frac.equals(2)) {\n                minY = y - halfLineSpacing;\n                maxY = y + halfLineSpacing;\n            }\n            else {\n                minY = y - this.glyph.line_above * lineSpacing;\n                maxY = y + this.glyph.line_below * lineSpacing;\n            }\n        }\n        else if (this.glyph.stem) {\n            const ys = this.getStemExtents();\n            ys.baseY += halfLineSpacing * this.getStemDirection();\n            minY = Math.min(ys.topY, ys.baseY);\n            maxY = Math.max(ys.topY, ys.baseY);\n        }\n        else {\n            minY = 0;\n            maxY = 0;\n            for (let i = 0; i < this.ys.length; ++i) {\n                const yy = this.ys[i];\n                if (i === 0) {\n                    minY = yy;\n                    maxY = yy;\n                }\n                else {\n                    minY = Math.min(yy, minY);\n                    maxY = Math.max(yy, maxY);\n                }\n            }\n            minY -= halfLineSpacing;\n            maxY += halfLineSpacing;\n        }\n        return new BoundingBox(x, minY, w, maxY - minY);\n    }\n    // Gets the line number of the bottom note in the chord.\n    // If `isTopNote` is `true` then get the top note's line number instead\n    getLineNumber(isTopNote) {\n        if (!this.keyProps.length) {\n            throw new RuntimeError('NoKeyProps', \"Can't get bottom note line, because note is not initialized properly.\");\n        }\n        let resultLine = this.keyProps[0].line;\n        // No precondition assumed for sortedness of keyProps array\n        for (let i = 0; i < this.keyProps.length; i++) {\n            const thisLine = this.keyProps[i].line;\n            if (isTopNote) {\n                if (thisLine > resultLine)\n                    resultLine = thisLine;\n            }\n            else {\n                if (thisLine < resultLine)\n                    resultLine = thisLine;\n            }\n        }\n        return resultLine;\n    }\n    /**\n     * @returns true if this note is a type of rest. Rests don't have pitches, but take up space in the score.\n     */\n    isRest() {\n        return this.glyph.rest;\n    }\n    // Determine if the current note is a chord\n    isChord() {\n        return !this.isRest() && this.keys.length > 1;\n    }\n    // Determine if the `StaveNote` has a stem\n    hasStem() {\n        return this.glyph.stem;\n    }\n    hasFlag() {\n        return super.hasFlag() && !this.isRest();\n    }\n    getStemX() {\n        if (this.noteType === 'r') {\n            return this.getCenterGlyphX();\n        }\n        else {\n            // We adjust the origin of the stem because we want the stem left-aligned\n            // with the notehead if stemmed-down, and right-aligned if stemmed-up\n            return super.getStemX() + (this.stem_direction ? Stem.WIDTH / (2 * -this.stem_direction) : 0);\n        }\n    }\n    // Get the `y` coordinate for text placed on the top/bottom of a\n    // note at a desired `text_line`\n    getYForTopText(textLine) {\n        const extents = this.getStemExtents();\n        return Math.min(this.checkStave().getYForTopText(textLine), extents.topY - this.render_options.annotation_spacing * (textLine + 1));\n    }\n    getYForBottomText(textLine) {\n        const extents = this.getStemExtents();\n        return Math.max(this.checkStave().getYForTopText(textLine), extents.baseY + this.render_options.annotation_spacing * textLine);\n    }\n    // Sets the current note to the provided `stave`. This applies\n    // `y` values to the `NoteHeads`.\n    setStave(stave) {\n        super.setStave(stave);\n        const ys = this._noteHeads.map((notehead) => {\n            notehead.setStave(stave);\n            return notehead.getY();\n        });\n        this.setYs(ys);\n        if (this.stem) {\n            const { y_top, y_bottom } = this.getNoteHeadBounds();\n            this.stem.setYBounds(y_top, y_bottom);\n        }\n        return this;\n    }\n    // Check if note is shifted to the right\n    isDisplaced() {\n        return this.displaced;\n    }\n    // Sets whether shift note to the right. `displaced` is a `boolean`\n    setNoteDisplaced(displaced) {\n        this.displaced = displaced;\n        return this;\n    }\n    // Get the starting `x` coordinate for a `StaveTie`\n    getTieRightX() {\n        let tieStartX = this.getAbsoluteX();\n        tieStartX += this.getGlyphWidth() + this.x_shift + this.rightDisplacedHeadPx;\n        if (this.modifierContext)\n            tieStartX += this.modifierContext.getRightShift();\n        return tieStartX;\n    }\n    // Get the ending `x` coordinate for a `StaveTie`\n    getTieLeftX() {\n        let tieEndX = this.getAbsoluteX();\n        tieEndX += this.x_shift - this.leftDisplacedHeadPx;\n        return tieEndX;\n    }\n    // Get the stave line on which to place a rest\n    getLineForRest() {\n        let restLine = this.keyProps[0].line;\n        if (this.keyProps.length > 1) {\n            const lastLine = this.keyProps[this.keyProps.length - 1].line;\n            const top = Math.max(restLine, lastLine);\n            const bot = Math.min(restLine, lastLine);\n            restLine = midLine(top, bot);\n        }\n        return restLine;\n    }\n    // Get the default `x` and `y` coordinates for the provided `position`\n    // and key `index`\n    getModifierStartXY(position, index, options = {}) {\n        var _a, _b;\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n        }\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', 'No Y-Values calculated for this note.');\n        }\n        const { ABOVE, BELOW, LEFT, RIGHT } = Modifier.Position;\n        let x = 0;\n        if (position === LEFT) {\n            // FIXME: Left modifier padding, move to font file\n            x = -1 * 2;\n        }\n        else if (position === RIGHT) {\n            // FIXME: Right modifier padding, move to font file\n            x = this.getGlyphWidth() + this.x_shift + 2;\n            if (this.stem_direction === Stem.UP &&\n                this.hasFlag() &&\n                (options.forceFlagRight || isInnerNoteIndex(this, index))) {\n                x += (_b = (_a = this === null || this === void 0 ? void 0 : this.flag) === null || _a === void 0 ? void 0 : _a.getMetrics().width) !== null && _b !== void 0 ? _b : 0;\n            }\n        }\n        else if (position === BELOW || position === ABOVE) {\n            x = this.getGlyphWidth() / 2;\n        }\n        return {\n            x: this.getAbsoluteX() + x,\n            y: this.ys[index],\n        };\n    }\n    // Sets the style of the complete StaveNote, including all keys\n    // and the stem.\n    setStyle(style) {\n        return super.setGroupStyle(style);\n    }\n    setStemStyle(style) {\n        const stem = this.getStem();\n        if (stem)\n            stem.setStyle(style);\n        return this;\n    }\n    getStemStyle() {\n        var _a;\n        return (_a = this.stem) === null || _a === void 0 ? void 0 : _a.getStyle();\n    }\n    setLedgerLineStyle(style) {\n        this.ledgerLineStyle = style;\n    }\n    getLedgerLineStyle() {\n        return this.ledgerLineStyle;\n    }\n    setFlagStyle(style) {\n        this.flagStyle = style;\n    }\n    getFlagStyle() {\n        return this.flagStyle;\n    }\n    // Sets the notehead at `index` to the provided coloring `style`.\n    //\n    // `style` is an `object` with the following properties: `shadowColor`,\n    // `shadowBlur`, `fillStyle`, `strokeStyle`\n    setKeyStyle(index, style) {\n        this._noteHeads[index].setStyle(style);\n        return this;\n    }\n    setKeyLine(index, line) {\n        this.keyProps[index].line = line;\n        this.reset();\n        return this;\n    }\n    getKeyLine(index) {\n        return this.keyProps[index].line;\n    }\n    // Get the width of the note if it is displaced. Used for `Voice`\n    // formatting\n    getVoiceShiftWidth() {\n        // TODO: may need to accomodate for dot here.\n        return this.getGlyphWidth() * (this.displaced ? 2 : 1);\n    }\n    // Calculates and sets the extra pixels to the left or right\n    // if the note is displaced.\n    calcNoteDisplacements() {\n        this.setLeftDisplacedHeadPx(this.displaced && this.stem_direction === Stem.DOWN ? this.getGlyphWidth() : 0);\n        // For upstems with flags, the extra space is unnecessary, since it's taken\n        // up by the flag.\n        this.setRightDisplacedHeadPx(!this.hasFlag() && this.displaced && this.stem_direction === Stem.UP ? this.getGlyphWidth() : 0);\n    }\n    // Pre-render formatting\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        let noteHeadPadding = 0;\n        if (this.modifierContext) {\n            this.modifierContext.preFormat();\n            // If there are no modifiers on this note, make sure there is adequate padding\n            // between the notes.\n            if (this.modifierContext.getWidth() === 0) {\n                noteHeadPadding = StaveNote.minNoteheadPadding;\n            }\n        }\n        let width = this.getGlyphWidth() + this.leftDisplacedHeadPx + this.rightDisplacedHeadPx + noteHeadPadding;\n        // For upward flagged notes, the width of the flag needs to be added\n        if (this.shouldDrawFlag() && this.stem_direction === Stem.UP) {\n            width += this.getGlyphWidth();\n            // TODO: Add flag width as a separate metric\n        }\n        this.setWidth(width);\n        this.preFormatted = true;\n    }\n    /**\n     * @typedef {Object} noteHeadBounds\n     * @property {number} y_top the highest notehead bound\n     * @property {number} y_bottom the lowest notehead bound\n     * @property {number|Null} displaced_x the starting x for displaced noteheads\n     * @property {number|Null} non_displaced_x the starting x for non-displaced noteheads\n     * @property {number} highest_line the highest notehead line in traditional music line\n     *  numbering (bottom line = 1, top line = 5)\n     * @property {number} lowest_line the lowest notehead line\n     * @property {number|false} highest_displaced_line the highest staff line number\n     *   for a displaced notehead\n     * @property {number|false} lowest_displaced_line\n     * @property {number} highest_non_displaced_line\n     * @property {number} lowest_non_displaced_line\n     */\n    /**\n     * Get the staff line and y value for the highest & lowest noteheads\n     * @returns {noteHeadBounds}\n     */\n    getNoteHeadBounds() {\n        // Top and bottom Y values for stem.\n        let yTop = +Infinity;\n        let yBottom = -Infinity;\n        let nonDisplacedX;\n        let displacedX;\n        let highestLine = this.checkStave().getNumLines();\n        let lowestLine = 1;\n        let highestDisplacedLine;\n        let lowestDisplacedLine;\n        let highestNonDisplacedLine = highestLine;\n        let lowestNonDisplacedLine = lowestLine;\n        this._noteHeads.forEach((notehead) => {\n            const line = notehead.getLine();\n            const y = notehead.getY();\n            yTop = Math.min(y, yTop);\n            yBottom = Math.max(y, yBottom);\n            if (displacedX === undefined && notehead.isDisplaced()) {\n                displacedX = notehead.getAbsoluteX();\n            }\n            if (nonDisplacedX === undefined && !notehead.isDisplaced()) {\n                nonDisplacedX = notehead.getAbsoluteX();\n            }\n            highestLine = Math.max(line, highestLine);\n            lowestLine = Math.min(line, lowestLine);\n            if (notehead.isDisplaced()) {\n                highestDisplacedLine = highestDisplacedLine === undefined ? line : Math.max(line, highestDisplacedLine);\n                lowestDisplacedLine = lowestDisplacedLine === undefined ? line : Math.min(line, lowestDisplacedLine);\n            }\n            else {\n                highestNonDisplacedLine = Math.max(line, highestNonDisplacedLine);\n                lowestNonDisplacedLine = Math.min(line, lowestNonDisplacedLine);\n            }\n        }, this);\n        return {\n            y_top: yTop,\n            y_bottom: yBottom,\n            displaced_x: displacedX,\n            non_displaced_x: nonDisplacedX,\n            highest_line: highestLine,\n            lowest_line: lowestLine,\n            highest_displaced_line: highestDisplacedLine,\n            lowest_displaced_line: lowestDisplacedLine,\n            highest_non_displaced_line: highestNonDisplacedLine,\n            lowest_non_displaced_line: lowestNonDisplacedLine,\n        };\n    }\n    // Get the starting `x` coordinate for the noteheads\n    getNoteHeadBeginX() {\n        return this.getAbsoluteX() + this.x_shift;\n    }\n    // Get the ending `x` coordinate for the noteheads\n    getNoteHeadEndX() {\n        const xBegin = this.getNoteHeadBeginX();\n        return xBegin + this.getGlyphWidth();\n    }\n    get noteHeads() {\n        return this._noteHeads.slice();\n    }\n    /** @deprecated use StaveNote.noteHeads instead. */\n    get note_heads() {\n        showDeprecationWarningForNoteHeads();\n        return this.noteHeads;\n    }\n    // Draw the ledger lines between the stave and the highest/lowest keys\n    drawLedgerLines() {\n        const stave = this.checkStave();\n        const { glyph, render_options: { stroke_px }, } = this;\n        const ctx = this.checkContext();\n        const width = glyph.getWidth() + stroke_px * 2;\n        const doubleWidth = 2 * (glyph.getWidth() + stroke_px) - Stem.WIDTH / 2;\n        if (this.isRest())\n            return;\n        if (!ctx) {\n            throw new RuntimeError('NoCanvasContext', \"Can't draw without a canvas context.\");\n        }\n        const { highest_line, lowest_line, highest_displaced_line, highest_non_displaced_line, lowest_displaced_line, lowest_non_displaced_line, displaced_x, non_displaced_x, } = this.getNoteHeadBounds();\n        // Early out if there are no ledger lines to draw.\n        if (highest_line < 6 && lowest_line > 0)\n            return;\n        const min_x = Math.min(displaced_x !== null && displaced_x !== void 0 ? displaced_x : 0, non_displaced_x !== null && non_displaced_x !== void 0 ? non_displaced_x : 0);\n        const drawLedgerLine = (y, normal, displaced) => {\n            let x;\n            if (displaced && normal)\n                x = min_x - stroke_px;\n            else if (normal)\n                x = (non_displaced_x !== null && non_displaced_x !== void 0 ? non_displaced_x : 0) - stroke_px;\n            else\n                x = (displaced_x !== null && displaced_x !== void 0 ? displaced_x : 0) - stroke_px;\n            const ledgerWidth = normal && displaced ? doubleWidth : width;\n            ctx.beginPath();\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + ledgerWidth, y);\n            ctx.stroke();\n        };\n        const style = Object.assign(Object.assign({}, stave.getDefaultLedgerLineStyle()), this.getLedgerLineStyle());\n        this.applyStyle(ctx, style);\n        // Draw ledger lines below the staff:\n        for (let line = 6; line <= highest_line; ++line) {\n            const normal = non_displaced_x !== undefined && line <= highest_non_displaced_line;\n            const displaced = highest_displaced_line !== undefined && line <= highest_displaced_line;\n            drawLedgerLine(stave.getYForNote(line), normal, displaced);\n        }\n        // Draw ledger lines above the staff:\n        for (let line = 0; line >= lowest_line; --line) {\n            const normal = non_displaced_x !== undefined && line >= lowest_non_displaced_line;\n            const displaced = lowest_displaced_line !== undefined && line >= lowest_displaced_line;\n            drawLedgerLine(stave.getYForNote(line), normal, displaced);\n        }\n        this.restoreStyle(ctx, style);\n    }\n    // Draw all key modifiers\n    drawModifiers() {\n        const ctx = this.checkContext();\n        ctx.openGroup('modifiers');\n        for (let i = 0; i < this.modifiers.length; i++) {\n            const modifier = this.modifiers[i];\n            const index = modifier.checkIndex();\n            const notehead = this._noteHeads[index];\n            const noteheadStyle = notehead.getStyle();\n            notehead.applyStyle(ctx, noteheadStyle);\n            modifier.setContext(ctx);\n            modifier.drawWithStyle();\n            notehead.restoreStyle(ctx, noteheadStyle);\n        }\n        ctx.closeGroup();\n    }\n    shouldDrawFlag() {\n        const hasStem = this.stem !== undefined;\n        const hasFlag = this.glyph.flag; // specified in tables.js\n        const hasNoBeam = this.beam === undefined;\n        return hasStem && hasFlag && hasNoBeam;\n    }\n    // Draw the flag for the note\n    drawFlag() {\n        var _a, _b, _c, _d, _e;\n        const ctx = this.checkContext();\n        if (!ctx) {\n            throw new RuntimeError('NoCanvasContext', \"Can't draw without a canvas context.\");\n        }\n        if (this.shouldDrawFlag()) {\n            const { y_top, y_bottom } = this.getNoteHeadBounds();\n            // eslint-disable-next-line\n            const noteStemHeight = this.stem.getHeight();\n            const flagX = this.getStemX();\n            // What's with the magic +/- 2\n            // ANSWER: a corner of the note stem pokes out beyond the tip of the flag.\n            // The extra +/- 2 pushes the flag glyph outward so it covers the stem entirely.\n            // Alternatively, we could shorten the stem.\n            const flagY = this.getStemDirection() === Stem.DOWN\n                ? // Down stems are below the note head and have flags on the right.\n                    y_top -\n                        noteStemHeight +\n                        2 -\n                        (this.glyph ? this.glyph.stem_down_extension : 0) * this.getStaveNoteScale() -\n                        ((_b = (_a = this.flag) === null || _a === void 0 ? void 0 : _a.getMetrics().y_shift) !== null && _b !== void 0 ? _b : 0) * (1 - this.getStaveNoteScale())\n                : // Up stems are above the note head and have flags on the right.\n                    y_bottom -\n                        noteStemHeight -\n                        2 +\n                        (this.glyph ? this.glyph.stem_up_extension : 0) * this.getStaveNoteScale() -\n                        ((_d = (_c = this.flag) === null || _c === void 0 ? void 0 : _c.getMetrics().y_shift) !== null && _d !== void 0 ? _d : 0) * (1 - this.getStaveNoteScale());\n            // Draw the Flag\n            ctx.openGroup('flag', undefined, { pointerBBox: true });\n            this.applyStyle(ctx, this.getFlagStyle());\n            (_e = this.flag) === null || _e === void 0 ? void 0 : _e.render(ctx, flagX, flagY);\n            this.restoreStyle(ctx, this.getFlagStyle());\n            ctx.closeGroup();\n        }\n    }\n    // Draw the NoteHeads\n    drawNoteHeads() {\n        const ctx = this.checkContext();\n        this._noteHeads.forEach((notehead) => {\n            ctx.openGroup('notehead', undefined, { pointerBBox: true });\n            notehead.setContext(ctx).draw();\n            ctx.closeGroup();\n        });\n    }\n    drawStem(stemOptions) {\n        // GCR TODO: I can't find any context in which this is called with the stemStruct\n        // argument in the codebase or tests. Nor can I find a case where super.drawStem\n        // is called at all. Perhaps these should be removed?\n        const ctx = this.checkContext();\n        if (stemOptions) {\n            this.setStem(new Stem(stemOptions));\n        }\n        // If we will render a flag, we shorten the stem so that the tip\n        // does not poke through the flag.\n        if (this.shouldDrawFlag() && this.stem) {\n            this.stem.adjustHeightForFlag();\n        }\n        if (this.stem) {\n            ctx.openGroup('stem', undefined, { pointerBBox: true });\n            this.stem.setContext(ctx).draw();\n            ctx.closeGroup();\n        }\n    }\n    /** Primarily used as the scaling factor for grace notes, GraceNote will return the required scale. */\n    getStaveNoteScale() {\n        return 1.0;\n    }\n    /**\n     * Override stemmablenote stem extension to adjust for distance from middle line.\n     */\n    getStemExtension() {\n        const super_stem_extension = super.getStemExtension();\n        if (!this.glyph.stem) {\n            return super_stem_extension;\n        }\n        const stem_direction = this.getStemDirection();\n        if (stem_direction !== this.calculateOptimalStemDirection()) {\n            return super_stem_extension; // no adjustment for manually set stem direction.\n        }\n        let mid_line_distance;\n        const MIDDLE_LINE = 3;\n        if (stem_direction === Stem.UP) {\n            // Note that the use of maxLine here instead of minLine might\n            // seem counterintuitive, but in the case of (say) treble clef\n            // chord(F2, E4) stem up, we do not want to extend the stem because\n            // of F2, when a normal octave-length stem above E4 is fine.\n            //\n            // maxLine and minLine are set in calculateOptimalStemDirection() so\n            // will be known.\n            mid_line_distance = MIDDLE_LINE - this.maxLine;\n        }\n        else {\n            mid_line_distance = this.minLine - MIDDLE_LINE;\n        }\n        // how many lines more than an octave is the relevant notehead?\n        const lines_over_octave_from_mid_line = mid_line_distance - 3.5;\n        if (lines_over_octave_from_mid_line <= 0) {\n            return super_stem_extension;\n        }\n        const stave = this.getStave();\n        let spacing_between_lines = 10;\n        if (stave != undefined) {\n            spacing_between_lines = stave.getSpacingBetweenLines();\n        }\n        return super_stem_extension + lines_over_octave_from_mid_line * spacing_between_lines;\n    }\n    // Draws all the `StaveNote` parts. This is the main drawing method.\n    draw() {\n        if (this.render_options.draw === false)\n            return;\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', \"Can't draw note without Y values.\");\n        }\n        const ctx = this.checkContext();\n        const xBegin = this.getNoteHeadBeginX();\n        const shouldRenderStem = this.hasStem() && !this.beam;\n        // Format note head x positions\n        this._noteHeads.forEach((notehead) => notehead.setX(xBegin));\n        if (this.stem) {\n            // Format stem x positions\n            const stemX = this.getStemX();\n            this.stem.setNoteHeadXBounds(stemX, stemX);\n        }\n        L('Rendering ', this.isChord() ? 'chord :' : 'note :', this.keys);\n        // Apply the overall style -- may be contradicted by local settings:\n        this.applyStyle();\n        this.setAttribute('el', ctx.openGroup('stavenote', this.getAttribute('id')));\n        this.drawLedgerLines();\n        ctx.openGroup('note', undefined, { pointerBBox: true });\n        if (shouldRenderStem)\n            this.drawStem();\n        this.drawNoteHeads();\n        this.drawFlag();\n        ctx.closeGroup();\n        this.drawModifiers();\n        ctx.closeGroup();\n        this.restoreStyle();\n        this.setRendered();\n    }\n}\nStaveNote.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\nimport { Element } from './element';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class StaveTie extends Element {\n    /**\n     * @param notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     *\n     * @param text\n     */\n    constructor(notes, text) {\n        super();\n        this.setNotes(notes);\n        this.text = text;\n        this.render_options = {\n            cp1: 8,\n            cp2: 12,\n            text_shift_x: 0,\n            first_x_shift: 0,\n            last_x_shift: 0,\n            y_shift: 7,\n            tie_spacing: 0,\n        };\n        this.resetFont();\n    }\n    static get CATEGORY() {\n        return Category.StaveTie;\n    }\n    setDirection(direction) {\n        this.direction = direction;\n        return this;\n    }\n    /**\n     * Set the notes to attach this tie to.\n     *\n     * @param {!Object} notes The notes to tie up.\n     */\n    setNotes(notes) {\n        if (!notes.first_note && !notes.last_note) {\n            throw new RuntimeError('BadArguments', 'Tie needs to have either first_note or last_note set.');\n        }\n        if (!notes.first_indices) {\n            notes.first_indices = [0];\n        }\n        if (!notes.last_indices) {\n            notes.last_indices = [0];\n        }\n        if (notes.first_indices.length !== notes.last_indices.length) {\n            throw new RuntimeError('BadArguments', 'Tied notes must have same number of indices.');\n        }\n        this.notes = notes;\n        return this;\n    }\n    /**\n     * @return {boolean} Returns true if this is a partial bar.\n     */\n    isPartial() {\n        return !this.notes.first_note || !this.notes.last_note;\n    }\n    renderTie(params) {\n        if (params.first_ys.length === 0 || params.last_ys.length === 0) {\n            throw new RuntimeError('BadArguments', 'No Y-values to render');\n        }\n        const ctx = this.checkContext();\n        let cp1 = this.render_options.cp1;\n        let cp2 = this.render_options.cp2;\n        if (Math.abs(params.last_x_px - params.first_x_px) < 10) {\n            cp1 = 2;\n            cp2 = 8;\n        }\n        const first_x_shift = this.render_options.first_x_shift;\n        const last_x_shift = this.render_options.last_x_shift;\n        const y_shift = this.render_options.y_shift * params.direction;\n        // setNotes(...) verified that first_indices and last_indices are not undefined.\n        // As a result, we use the ! non-null assertion operator here.\n        // eslint-disable-next-line\n        const first_indices = this.notes.first_indices;\n        // eslint-disable-next-line\n        const last_indices = this.notes.last_indices;\n        for (let i = 0; i < first_indices.length; ++i) {\n            const cp_x = (params.last_x_px + last_x_shift + (params.first_x_px + first_x_shift)) / 2;\n            const first_y_px = params.first_ys[first_indices[i]] + y_shift;\n            const last_y_px = params.last_ys[last_indices[i]] + y_shift;\n            if (isNaN(first_y_px) || isNaN(last_y_px)) {\n                throw new RuntimeError('BadArguments', 'Bad indices for tie rendering.');\n            }\n            const top_cp_y = (first_y_px + last_y_px) / 2 + cp1 * params.direction;\n            const bottom_cp_y = (first_y_px + last_y_px) / 2 + cp2 * params.direction;\n            // id probably unnecessary if we save the group to 'el' via setAttribute\n            // let id: string = \"\";\n            // if (this.notes.first_note) {\n            //   id = this.notes.first_note.getAttribute('id') + '-tie';\n            // }\n            // this.setAttribute('el', ctx.openGroup('stavetie', id));\n            this.setAttribute('el', ctx.openGroup('stavetie'));\n            ctx.beginPath();\n            ctx.moveTo(params.first_x_px + first_x_shift, first_y_px);\n            ctx.quadraticCurveTo(cp_x, top_cp_y, params.last_x_px + last_x_shift, last_y_px);\n            ctx.quadraticCurveTo(cp_x, bottom_cp_y, params.first_x_px + first_x_shift, first_y_px);\n            ctx.closePath();\n            ctx.fill();\n            ctx.closeGroup();\n        }\n    }\n    renderText(first_x_px, last_x_px) {\n        var _a, _b, _c;\n        if (!this.text)\n            return;\n        const ctx = this.checkContext();\n        let center_x = (first_x_px + last_x_px) / 2;\n        center_x -= ctx.measureText(this.text).width / 2;\n        const stave = (_b = (_a = this.notes.first_note) === null || _a === void 0 ? void 0 : _a.checkStave()) !== null && _b !== void 0 ? _b : (_c = this.notes.last_note) === null || _c === void 0 ? void 0 : _c.checkStave();\n        if (stave) {\n            ctx.save();\n            ctx.setFont(this.textFont);\n            ctx.fillText(this.text, center_x + this.render_options.text_shift_x, stave.getYForTopText() - 1);\n            ctx.restore();\n        }\n    }\n    draw() {\n        this.checkContext();\n        this.setRendered();\n        const first_note = this.notes.first_note;\n        const last_note = this.notes.last_note;\n        // Provide some default values so the compiler doesn't complain.\n        let first_x_px = 0;\n        let last_x_px = 0;\n        let first_ys = [0];\n        let last_ys = [0];\n        let stem_direction = 0;\n        if (first_note) {\n            first_x_px = first_note.getTieRightX() + this.render_options.tie_spacing;\n            stem_direction = first_note.getStemDirection();\n            first_ys = first_note.getYs();\n        }\n        else if (last_note) {\n            const stave = last_note.checkStave();\n            first_x_px = stave.getTieStartX();\n            first_ys = last_note.getYs();\n            this.notes.first_indices = this.notes.last_indices;\n        }\n        if (last_note) {\n            last_x_px = last_note.getTieLeftX() + this.render_options.tie_spacing;\n            stem_direction = last_note.getStemDirection();\n            last_ys = last_note.getYs();\n        }\n        else if (first_note) {\n            const stave = first_note.checkStave();\n            last_x_px = stave.getTieEndX();\n            last_ys = first_note.getYs();\n            this.notes.last_indices = this.notes.first_indices;\n        }\n        if (this.direction) {\n            stem_direction = this.direction;\n        }\n        this.renderTie({\n            first_x_px,\n            last_x_px,\n            first_ys,\n            last_ys,\n            direction: stem_direction,\n        });\n        this.renderText(first_x_px, last_x_px);\n        return true;\n    }\n}\n/** Default text font. */\nStaveTie.TEXT_FONT = Object.assign({}, Element.TEXT_FONT);\n","// / [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\nimport { StaveTie } from './stavetie';\nimport { Category } from './typeguard';\nexport class TabTie extends StaveTie {\n    static get CATEGORY() {\n        return Category.TabTie;\n    }\n    static createHammeron(notes) {\n        return new TabTie(notes, 'H');\n    }\n    static createPulloff(notes) {\n        return new TabTie(notes, 'P');\n    }\n    /**\n     * @param notes is a struct that has:\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     *\n     * @param text\n     */\n    constructor(notes, text) {\n        super(notes, text);\n        this.render_options.cp1 = 9;\n        this.render_options.cp2 = 11;\n        this.render_options.y_shift = 3;\n        this.direction = -1; // Tab tie's are always face up.\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\nexport var VoiceMode;\n(function (VoiceMode) {\n    VoiceMode[VoiceMode[\"STRICT\"] = 1] = \"STRICT\";\n    VoiceMode[VoiceMode[\"SOFT\"] = 2] = \"SOFT\";\n    VoiceMode[VoiceMode[\"FULL\"] = 3] = \"FULL\";\n})(VoiceMode || (VoiceMode = {}));\n/**\n * `Voice` is mainly a container object to group `Tickables` for formatting.\n */\nexport class Voice extends Element {\n    constructor(time) {\n        super();\n        this.resolutionMultiplier = 1;\n        this.mode = VoiceMode.STRICT;\n        this.preFormatted = false;\n        this.ticksUsed = new Fraction(0, 1);\n        this.largestTickWidth = 0;\n        this.tickables = [];\n        this.options = {\n            softmaxFactor: Tables.SOFTMAX_FACTOR,\n        };\n        // Convert the `time` string into a VoiceTime object if necessary.\n        let voiceTime;\n        if (typeof time === 'string') {\n            // Time signature shortcut: \"4/4\", \"3/8\", etc.\n            const match = time.match(/(\\d+)\\/(\\d+)/);\n            if (match) {\n                voiceTime = {\n                    num_beats: parseInt(match[1]),\n                    beat_value: parseInt(match[2]),\n                };\n            }\n        }\n        else {\n            voiceTime = time;\n        }\n        // Default time signature is 4/4.\n        this.time = Object.assign({ num_beats: 4, beat_value: 4, resolution: Tables.RESOLUTION }, voiceTime);\n        // Recalculate total ticks.\n        this.totalTicks = new Fraction(this.time.num_beats * (this.time.resolution / this.time.beat_value), 1);\n        this.smallestTickCount = this.totalTicks.clone();\n    }\n    static get CATEGORY() {\n        return Category.Voice;\n    }\n    /**\n     * Modes allow the addition of ticks in three different ways:\n     * - STRICT: This is the default. Ticks must fill the voice.\n     * - SOFT: Ticks can be added without restrictions.\n     * - FULL: Ticks do not need to fill the voice, but can't exceed the maximum tick length.\n     */\n    static get Mode() {\n        return VoiceMode;\n    }\n    /** Get the total ticks in the voice. */\n    getTotalTicks() {\n        return this.totalTicks;\n    }\n    /** Get the total ticks used in the voice by all the tickables. */\n    getTicksUsed() {\n        return this.ticksUsed;\n    }\n    /** Get the largest width of all the tickables. */\n    getLargestTickWidth() {\n        return this.largestTickWidth;\n    }\n    /** Get the tick count for the shortest tickable */\n    getSmallestTickCount() {\n        return this.smallestTickCount;\n    }\n    /** Get the tickables in the voice. */\n    getTickables() {\n        return this.tickables;\n    }\n    /** Get the voice mode. */\n    getMode() {\n        return this.mode;\n    }\n    /**\n     * Set the voice mode.\n     * @param mode value from `VoiceMode`\n     */\n    setMode(mode) {\n        this.mode = mode;\n        return this;\n    }\n    /** Get the resolution multiplier for the voice. */\n    getResolutionMultiplier() {\n        return this.resolutionMultiplier;\n    }\n    /** Get the actual tick resolution for the voice. */\n    getActualResolution() {\n        return this.resolutionMultiplier * this.time.resolution;\n    }\n    /** Set the voice's stave. */\n    setStave(stave) {\n        this.stave = stave;\n        // Reset the bounding box so we can reformat.\n        this.boundingBox = undefined;\n        return this;\n    }\n    getStave() {\n        return this.stave;\n    }\n    /** Get the bounding box for the voice. */\n    getBoundingBox() {\n        if (!this.boundingBox) {\n            const stave = this.checkStave();\n            let boundingBox = undefined;\n            for (let i = 0; i < this.tickables.length; ++i) {\n                const tickable = this.tickables[i];\n                tickable.setStave(stave);\n                const bb = tickable.getBoundingBox();\n                if (bb) {\n                    boundingBox = boundingBox ? boundingBox.mergeWith(bb) : bb;\n                }\n            }\n            this.boundingBox = boundingBox;\n        }\n        return this.boundingBox;\n    }\n    /** Set the voice mode to strict or soft. */\n    setStrict(strict) {\n        this.mode = strict ? VoiceMode.STRICT : VoiceMode.SOFT;\n        return this;\n    }\n    /** Determine if the voice is complete according to the voice mode. */\n    isComplete() {\n        if (this.mode === VoiceMode.STRICT || this.mode === VoiceMode.FULL) {\n            return this.ticksUsed.equals(this.totalTicks);\n        }\n        else {\n            return true;\n        }\n    }\n    /**\n     * We use softmax to layout the tickables proportional to the exponent of\n     * their duration. The softmax factor is used to determine the 'linearness' of\n     * the layout.\n     *\n     * The softmax of all the tickables in this voice should sum to 1.\n     */\n    setSoftmaxFactor(factor) {\n        this.options.softmaxFactor = factor;\n        return this;\n    }\n    /**\n     * Calculate the sum of the exponents of all the ticks in this voice to use\n     * as the denominator of softmax.\n     */\n    reCalculateExpTicksUsed() {\n        const totalTicks = this.ticksUsed.value();\n        const exp = (tickable) => Math.pow(this.options.softmaxFactor, tickable.getTicks().value() / totalTicks);\n        this.expTicksUsed = this.tickables.map(exp).reduce((a, b) => a + b, 0);\n        return this.expTicksUsed;\n    }\n    /** Get the softmax-scaled value of a tick duration. 'tickValue' is a number. */\n    softmax(tickValue) {\n        if (!this.expTicksUsed) {\n            this.expTicksUsed = this.reCalculateExpTicksUsed();\n        }\n        const totalTicks = this.ticksUsed.value();\n        const exp = (v) => Math.pow(this.options.softmaxFactor, v / totalTicks);\n        const sm = exp(tickValue) / this.expTicksUsed;\n        return sm;\n    }\n    /** Add a tickable to the voice. */\n    addTickable(tickable) {\n        if (!tickable.shouldIgnoreTicks()) {\n            const ticks = tickable.getTicks();\n            // Update the total ticks for this line.\n            this.ticksUsed.add(ticks);\n            this.expTicksUsed = 0; // reset\n            if ((this.mode === VoiceMode.STRICT || this.mode === VoiceMode.FULL) &&\n                this.ticksUsed.greaterThan(this.totalTicks)) {\n                this.ticksUsed.subtract(ticks);\n                throw new RuntimeError('BadArgument', 'Too many ticks.');\n            }\n            // Track the smallest tickable for formatting.\n            if (ticks.lessThan(this.smallestTickCount)) {\n                this.smallestTickCount = ticks.clone();\n            }\n            this.resolutionMultiplier = this.ticksUsed.denominator;\n            // Expand total ticks using denominator from ticks used.\n            this.totalTicks.add(0, this.ticksUsed.denominator);\n        }\n        // Add the tickable to the line.\n        this.tickables.push(tickable);\n        tickable.setVoice(this);\n        return this;\n    }\n    /** Add an array of tickables to the voice. */\n    addTickables(tickables) {\n        for (let i = 0; i < tickables.length; ++i) {\n            this.addTickable(tickables[i]);\n        }\n        return this;\n    }\n    /** Preformat the voice by applying the voice's stave to each note. */\n    preFormat() {\n        if (this.preFormatted)\n            return this;\n        const stave = this.checkStave();\n        this.tickables.forEach((tickable) => {\n            if (!tickable.getStave()) {\n                tickable.setStave(stave);\n            }\n        });\n        this.preFormatted = true;\n        return this;\n    }\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    /**\n     * Render the voice onto the canvas `context` and an optional `stave`.\n     * If `stave` is omitted, it is expected that the notes have staves\n     * already set.\n     *\n     * This method also calculates the voice's boundingBox while drawing\n     * the notes. Note the similarities with this.getBoundingBox().\n     */\n    draw(context = this.checkContext(), stave) {\n        stave = stave !== null && stave !== void 0 ? stave : this.stave;\n        this.setRendered();\n        let boundingBox = undefined;\n        for (let i = 0; i < this.tickables.length; ++i) {\n            const tickable = this.tickables[i];\n            // Set the stave if provided.\n            if (stave) {\n                tickable.setStave(stave);\n            }\n            defined(tickable.getStave(), 'MissingStave', 'The voice cannot draw tickables without staves.');\n            const bb = tickable.getBoundingBox();\n            if (bb) {\n                boundingBox = boundingBox ? boundingBox.mergeWith(bb) : bb;\n            }\n            tickable.setContext(context);\n            tickable.drawWithStyle();\n        }\n        this.boundingBox = boundingBox;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `GraceNoteGroup` which is used to format and\n// render grace notes.\nimport { Beam } from './beam';\nimport { Formatter } from './formatter';\nimport { Modifier } from './modifier';\nimport { StaveNote } from './stavenote';\nimport { StaveTie } from './stavetie';\nimport { Tables } from './tables';\nimport { TabTie } from './tabtie';\nimport { Category, isStaveNote } from './typeguard';\nimport { log } from './util';\nimport { Voice } from './voice';\n// To enable logging for this class. Set `GraceNoteGroup.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (GraceNoteGroup.DEBUG)\n        log('Vex.Flow.GraceNoteGroup', args);\n}\n/** GraceNoteGroup is used to format and render grace notes. */\nexport class GraceNoteGroup extends Modifier {\n    //** `GraceNoteGroup` inherits from `Modifier` and is placed inside a `ModifierContext`. */\n    constructor(grace_notes, show_slur) {\n        super();\n        this.preFormatted = false;\n        this.position = Modifier.Position.LEFT;\n        this.grace_notes = grace_notes;\n        this.width = 0;\n        this.show_slur = show_slur;\n        this.slur = undefined;\n        this.voice = new Voice({\n            num_beats: 4,\n            beat_value: 4,\n            resolution: Tables.RESOLUTION,\n        }).setStrict(false);\n        this.render_options = {\n            slur_y_shift: 0,\n        };\n        this.beams = [];\n        this.voice.addTickables(this.grace_notes);\n        return this;\n    }\n    static get CATEGORY() {\n        return Category.GraceNoteGroup;\n    }\n    /** Arranges groups inside a `ModifierContext`. */\n    static format(gracenote_groups, state) {\n        const group_spacing_stave = 4;\n        const group_spacing_tab = 0;\n        if (!gracenote_groups || gracenote_groups.length === 0)\n            return false;\n        const group_list = [];\n        let prev_note = null;\n        let shiftL = 0;\n        for (let i = 0; i < gracenote_groups.length; ++i) {\n            const gracenote_group = gracenote_groups[i];\n            const note = gracenote_group.getNote();\n            const is_stavenote = isStaveNote(note);\n            const spacing = is_stavenote ? group_spacing_stave : group_spacing_tab;\n            if (is_stavenote && note !== prev_note) {\n                // Iterate through all notes to get the displaced pixels\n                for (let n = 0; n < note.keys.length; ++n) {\n                    shiftL = Math.max(note.getLeftDisplacedHeadPx(), shiftL);\n                }\n                prev_note = note;\n            }\n            group_list.push({ shift: shiftL, gracenote_group, spacing });\n        }\n        // If first note left shift in case it is displaced\n        let group_shift = group_list[0].shift;\n        let formatWidth;\n        for (let i = 0; i < group_list.length; ++i) {\n            const gracenote_group = group_list[i].gracenote_group;\n            gracenote_group.preFormat();\n            formatWidth = gracenote_group.getWidth() + group_list[i].spacing;\n            group_shift = Math.max(formatWidth, group_shift);\n        }\n        for (let i = 0; i < group_list.length; ++i) {\n            const gracenote_group = group_list[i].gracenote_group;\n            formatWidth = gracenote_group.getWidth() + group_list[i].spacing;\n            gracenote_group.setSpacingFromNextModifier(group_shift - Math.min(formatWidth, group_shift) + StaveNote.minNoteheadPadding);\n        }\n        state.left_shift += group_shift;\n        return true;\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        if (!this.formatter) {\n            this.formatter = new Formatter();\n        }\n        this.formatter.joinVoices([this.voice]).format([this.voice], 0, {});\n        this.setWidth(this.formatter.getMinTotalWidth());\n        this.preFormatted = true;\n    }\n    beamNotes(grace_notes) {\n        grace_notes = grace_notes || this.grace_notes;\n        if (grace_notes.length > 1) {\n            const beam = new Beam(grace_notes);\n            beam.render_options.beam_width = 3;\n            beam.render_options.partial_beam_length = 4;\n            this.beams.push(beam);\n        }\n        return this;\n    }\n    setWidth(width) {\n        this.width = width;\n        return this;\n    }\n    getWidth() {\n        return this.width + StaveNote.minNoteheadPadding;\n    }\n    getGraceNotes() {\n        return this.grace_notes;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        L('Drawing grace note group for:', note);\n        this.alignSubNotesWithNote(this.getGraceNotes(), note); // Modifier function\n        // Draw grace notes.\n        this.grace_notes.forEach((graceNote) => graceNote.setContext(ctx).draw());\n        // Draw beams.\n        this.beams.forEach((beam) => beam.setContext(ctx).draw());\n        if (this.show_slur) {\n            // Create and draw slur.\n            const is_stavenote = isStaveNote(note);\n            const TieClass = is_stavenote ? StaveTie : TabTie;\n            this.slur = new TieClass({\n                last_note: this.grace_notes[0],\n                first_note: note,\n                first_indices: [0],\n                last_indices: [0],\n            });\n            this.slur.render_options.cp2 = 12;\n            this.slur.render_options.y_shift = (is_stavenote ? 7 : 5) + this.render_options.slur_y_shift;\n            this.slur.setContext(ctx).draw();\n        }\n    }\n}\nGraceNoteGroup.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2016\n//\n// ## Description\n//\n// This file implements `NoteSubGroup` which is used to format and\n// render notes as a `Modifier`\n// ex) ClefNote, TimeSigNote and BarNote.\nimport { Formatter } from './formatter';\nimport { Modifier } from './modifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { Voice } from './voice';\nexport class NoteSubGroup extends Modifier {\n    constructor(subNotes) {\n        super();\n        this.preFormatted = false;\n        this.position = Modifier.Position.LEFT;\n        this.subNotes = subNotes;\n        this.subNotes.forEach((subNote) => {\n            subNote.setIgnoreTicks(false);\n        });\n        this.width = 0;\n        this.formatter = new Formatter();\n        this.voice = new Voice({\n            num_beats: 4,\n            beat_value: 4,\n            resolution: Tables.RESOLUTION,\n        }).setStrict(false);\n        this.voice.addTickables(this.subNotes);\n    }\n    static get CATEGORY() {\n        return Category.NoteSubGroup;\n    }\n    // Arrange groups inside a `ModifierContext`\n    static format(groups, state) {\n        if (!groups || groups.length === 0)\n            return false;\n        let width = 0;\n        for (let i = 0; i < groups.length; ++i) {\n            const group = groups[i];\n            group.preFormat();\n            width += group.getWidth();\n        }\n        state.left_shift += width;\n        return true;\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        this.formatter.joinVoices([this.voice]).format([this.voice], 0);\n        this.setWidth(this.formatter.getMinTotalWidth());\n        this.preFormatted = true;\n    }\n    setWidth(width) {\n        this.width = width;\n        return this;\n    }\n    getWidth() {\n        return this.width;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        this.alignSubNotesWithNote(this.subNotes, note); // Modifier function\n        this.subNotes.forEach((subNote) => subNote.setContext(ctx).drawWithStyle());\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// A formatter for abstract tickable objects, such as notes, chords,\n// tabs, etc.\nimport { Fraction } from './fraction';\nimport { RuntimeError } from './util';\n/**\n * TickContext formats abstract tickable objects, such as notes, chords, tabs, etc.\n */\nexport class TickContext {\n    constructor(options) {\n        this.preFormatted = false;\n        this.postFormatted = false;\n        this.tickID = options && options.tickID ? options.tickID : 0;\n        this.currentTick = new Fraction(0, 1);\n        this.maxTicks = new Fraction(0, 1);\n        this.maxTickable = undefined; // Biggest tickable\n        this.minTicks = undefined; // this can remian null if all tickables have ignore_ticks\n        this.minTickable = undefined;\n        this.padding = 0; // padding on each side (width += padding * 2)\n        this.x = 0;\n        this.xBase = 0; // base x position without xOffset\n        this.xOffset = 0; // xBase and xOffset are an alternative way to describe x (x = xB + xO)\n        this.tickables = []; // Notes, tabs, chords, lyrics.\n        this.tickablesByVoice = {}; // Tickables indexed by voice number\n        // Formatting metrics\n        this.notePx = 0; // width of widest note in this context\n        this.glyphPx = 0; // width of glyph (note head)\n        this.leftDisplacedHeadPx = 0; // Extra left pixels for displaced notes\n        this.rightDisplacedHeadPx = 0; // Extra right pixels for displaced notes\n        this.modLeftPx = 0; // Left modifier pixels\n        this.modRightPx = 0; // Right modifier pixels\n        this.totalLeftPx = 0; // Total left pixels\n        this.totalRightPx = 0; // Total right pixels\n        this.tContexts = []; // Parent array of tick contexts\n        this.width = 0;\n        this.formatterMetrics = {\n            // The freedom of a tickcontext is the distance it can move without colliding\n            // with neighboring elements. A formatter can set these values during its\n            // formatting pass, which a different formatter can then use to fine tune.\n            freedom: { left: 0, right: 0 },\n        };\n    }\n    static getNextContext(tContext) {\n        const contexts = tContext.tContexts;\n        const index = contexts.indexOf(tContext);\n        if (index + 1 < contexts.length)\n            return contexts[index + 1];\n    }\n    getTickID() {\n        return this.tickID;\n    }\n    getX() {\n        return this.x;\n    }\n    setX(x) {\n        this.x = x;\n        this.xBase = x;\n        this.xOffset = 0;\n        return this;\n    }\n    getXBase() {\n        return this.xBase;\n    } // use of xBase and xOffset is optional, avoids offset creep\n    setXBase(xBase) {\n        this.xBase = xBase;\n        this.x = xBase + this.xOffset;\n    }\n    getXOffset() {\n        return this.xOffset;\n    }\n    setXOffset(xOffset) {\n        this.xOffset = xOffset;\n        this.x = this.xBase + xOffset;\n    }\n    getWidth() {\n        return this.width + this.padding * 2;\n    }\n    setPadding(padding) {\n        this.padding = padding;\n        return this;\n    }\n    getMaxTicks() {\n        return this.maxTicks;\n    }\n    getMinTicks() {\n        return this.minTicks;\n    }\n    getMaxTickable() {\n        return this.maxTickable;\n    }\n    getMinTickable() {\n        return this.minTickable;\n    }\n    getTickables() {\n        return this.tickables;\n    }\n    /**\n     * Introduced on 2020-04-17 as getTickablesForVoice(voiceIndex).\n     *   https://github.com/0xfe/vexflow/blame/dc97b0cc5bb93171c0038638c34362dc958222ca/src/tickcontext.js#L63\n     * Renamed on 2021-08-05 to getTickableForVoice(voiceIndex). Method renamed to singular, since it returns one Tickable.\n     */\n    getTickableForVoice(voiceIndex) {\n        return this.tickablesByVoice[voiceIndex];\n    }\n    getTickablesByVoice() {\n        return this.tickablesByVoice;\n    }\n    getCenterAlignedTickables() {\n        return this.tickables.filter((tickable) => tickable.isCenterAligned());\n    }\n    /** Gets widths context, note and left/right modifiers for formatting. */\n    getMetrics() {\n        const { width, glyphPx, notePx, leftDisplacedHeadPx, rightDisplacedHeadPx, modLeftPx, modRightPx, totalLeftPx, totalRightPx, } = this;\n        return {\n            width,\n            glyphPx,\n            notePx,\n            leftDisplacedHeadPx,\n            rightDisplacedHeadPx,\n            modLeftPx,\n            modRightPx,\n            totalLeftPx,\n            totalRightPx,\n        };\n    }\n    getCurrentTick() {\n        return this.currentTick;\n    }\n    setCurrentTick(tick) {\n        this.currentTick = tick;\n        this.preFormatted = false;\n    }\n    addTickable(tickable, voiceIndex) {\n        if (!tickable) {\n            throw new RuntimeError('BadArgument', 'Invalid tickable added.');\n        }\n        if (!tickable.shouldIgnoreTicks()) {\n            const ticks = tickable.getTicks();\n            if (ticks.greaterThan(this.maxTicks)) {\n                this.maxTicks = ticks.clone();\n                this.maxTickable = tickable;\n            }\n            if (this.minTicks == null) {\n                this.minTicks = ticks.clone();\n                this.minTickable = tickable;\n            }\n            else if (ticks.lessThan(this.minTicks)) {\n                this.minTicks = ticks.clone();\n                this.minTickable = tickable;\n            }\n        }\n        tickable.setTickContext(this);\n        this.tickables.push(tickable);\n        this.tickablesByVoice[voiceIndex || 0] = tickable;\n        this.preFormatted = false;\n        return this;\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return this;\n        for (let i = 0; i < this.tickables.length; ++i) {\n            const tickable = this.tickables[i];\n            tickable.preFormat();\n            const metrics = tickable.getMetrics();\n            // Maintain max displaced head pixels from all tickables in the context\n            this.leftDisplacedHeadPx = Math.max(this.leftDisplacedHeadPx, metrics.leftDisplacedHeadPx);\n            this.rightDisplacedHeadPx = Math.max(this.rightDisplacedHeadPx, metrics.rightDisplacedHeadPx);\n            // Maintain the widest note for all tickables in the context\n            this.notePx = Math.max(this.notePx, metrics.notePx);\n            // Maintain the widest note head\n            this.glyphPx = Math.max(this.glyphPx, metrics.glyphWidth || 0);\n            // Total modifier shift\n            this.modLeftPx = Math.max(this.modLeftPx, metrics.modLeftPx);\n            this.modRightPx = Math.max(this.modRightPx, metrics.modRightPx);\n            // Total shift\n            this.totalLeftPx = Math.max(this.totalLeftPx, metrics.modLeftPx + metrics.leftDisplacedHeadPx);\n            this.totalRightPx = Math.max(this.totalRightPx, metrics.modRightPx + metrics.rightDisplacedHeadPx);\n            // Recalculate the tick context total width\n            this.width = this.notePx + this.totalLeftPx + this.totalRightPx;\n        }\n        return this;\n    }\n    postFormat() {\n        if (this.postFormatted)\n            return this;\n        this.postFormatted = true;\n        return this;\n    }\n    getFormatterMetrics() {\n        return this.formatterMetrics;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n// MIT License\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { TickContext } from './tickcontext';\nimport { Category, isTabNote } from './typeguard';\nimport { defined, log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Ornament.DEBUG)\n        log('Vex.Flow.Ornament', args);\n}\n/**\n * Ornament implements ornaments as modifiers that can be\n * attached to notes. The complete list of ornaments is available in\n * `tables.ts` under `Vex.Flow.ornamentCodes`.\n *\n * See `tests/ornament_tests.ts` for usage examples.\n */\nexport class Ornament extends Modifier {\n    /**\n     * Create a new ornament of type `type`, which is an entry in\n     * `Vex.Flow.ornamentCodes` in `tables.ts`.\n     */\n    constructor(type) {\n        super();\n        this.type = type;\n        this.delayed = false;\n        this.render_options = {\n            font_scale: 38,\n            accidentalLowerPadding: 3,\n            accidentalUpperPadding: 3,\n        };\n        this.ornament = Tables.ornamentCodes(this.type);\n        // new ornaments have their origin at the origin, and have more specific\n        // metrics.  Legacy ornaments do some\n        // x scaling, and have hard-coded metrics\n        const metrics = this.getMetrics();\n        // some jazz ornaments are above or below depending on stem direction.\n        this.adjustForStemDirection = false;\n        // some jazz ornaments like falls are supposed to overlap with future bars\n        // and so we report a different width than they actually take up.\n        this.reportedWidth = metrics && metrics.reportedWidth ? metrics.reportedWidth : 0;\n        this.stemUpYOffset = metrics && metrics.stemUpYOffset ? metrics.stemUpYOffset : 0;\n        this.ornamentAlignWithNoteHead = Ornament.ornamentAlignWithNoteHead.indexOf(this.type) >= 0;\n        if (!this.ornament) {\n            throw new RuntimeError('ArgumentError', `Ornament not found: '${this.type}'`);\n        }\n        this.x_shift = metrics ? metrics.xOffset : 0;\n        this.y_shift = metrics ? metrics.yOffset : 0;\n        this.glyph = new Glyph(this.ornament.code, this.render_options.font_scale, {\n            category: `ornament.${this.ornament.code}`,\n        });\n        // Is this a jazz ornament that goes between this note and the next note.\n        if (Ornament.ornamentNoteTransition.indexOf(this.type) >= 0) {\n            this.delayed = true;\n        }\n        // Legacy ornaments need this.  I don't know why, but horizontal spacing issues\n        // happen if I don't set it.\n        if (!metrics) {\n            this.glyph.setOrigin(0.5, 1.0); // FIXME: SMuFL won't require a vertical origin shift\n        }\n    }\n    /** Ornaments category string. */\n    static get CATEGORY() {\n        return Category.Ornament;\n    }\n    static get minPadding() {\n        const musicFont = Tables.currentMusicFont();\n        return musicFont.lookupMetric('glyphs.noteHead.minPadding');\n    }\n    /** Arrange ornaments inside `ModifierContext` */\n    static format(ornaments, state) {\n        if (!ornaments || ornaments.length === 0)\n            return false;\n        let width = 0; // width is used by ornaments, which are always centered on the note head\n        let right_shift = state.right_shift; // jazz ornaments calculate r/l shift separately\n        let left_shift = state.left_shift;\n        let yOffset = 0;\n        for (let i = 0; i < ornaments.length; ++i) {\n            const ornament = ornaments[i];\n            const increment = 2;\n            if (Ornament.ornamentRelease.indexOf(ornament.type) >= 0) {\n                ornament.x_shift += right_shift + 2;\n            }\n            if (Ornament.ornamentAttack.indexOf(ornament.type) >= 0) {\n                ornament.x_shift -= left_shift + 2;\n            }\n            if (ornament.reportedWidth && ornament.x_shift < 0) {\n                left_shift += ornament.reportedWidth;\n            }\n            else if (ornament.reportedWidth && ornament.x_shift >= 0) {\n                right_shift += ornament.reportedWidth + Ornament.minPadding;\n            }\n            else {\n                width = Math.max(ornament.getWidth(), width);\n            }\n            // articulations above/below the line can be stacked.\n            if (Ornament.ornamentArticulation.indexOf(ornament.type) >= 0) {\n                // Unfortunately we don't know the stem direction.  So we base it\n                // on the line number, but also allow it to be overridden.\n                const ornamentNote = defined(ornament.note, 'NoAttachedNote');\n                if (ornamentNote.getLineNumber() >= 3 || ornament.getPosition() === Modifier.Position.ABOVE) {\n                    state.top_text_line += increment;\n                    ornament.y_shift += yOffset;\n                    yOffset -= ornament.glyph.bbox.getH();\n                }\n                else {\n                    state.text_line += increment;\n                    ornament.y_shift += yOffset;\n                    yOffset += ornament.glyph.bbox.getH();\n                }\n            }\n            else {\n                if (ornament.getPosition() === Modifier.Position.ABOVE) {\n                    ornament.setTextLine(state.top_text_line);\n                    state.top_text_line += increment;\n                }\n                else {\n                    ornament.setTextLine(state.text_line);\n                    state.text_line += increment;\n                }\n            }\n        }\n        // Note: 'legit' ornaments don't consider other modifiers when calculating their\n        // X position, but jazz ornaments sometimes need to.\n        state.left_shift = left_shift + width / 2;\n        state.right_shift = right_shift + width / 2;\n        return true;\n    }\n    /**\n     * ornamentNoteTransition means the jazz ornament represents an effect from one note to another,\n     * these are generally on the top of the staff.\n     */\n    static get ornamentNoteTransition() {\n        return ['flip', 'jazzTurn', 'smear'];\n    }\n    /**\n     * ornamentAttack indicates something that happens in the attach, placed before the note and\n     * any accidentals\n     */\n    static get ornamentAttack() {\n        return ['scoop'];\n    }\n    /**\n     * The ornament is aligned based on the note head, but without regard to whether the\n     * stem goes up or down.\n     */\n    static get ornamentAlignWithNoteHead() {\n        return ['doit', 'fall', 'fallLong', 'doitLong', 'bend', 'plungerClosed', 'plungerOpen', 'scoop'];\n    }\n    /**\n     * An ornament that happens on the release of the note, generally placed after the\n     * note and overlapping the next beat/measure..\n     */\n    static get ornamentRelease() {\n        return ['doit', 'fall', 'fallLong', 'doitLong', 'jazzTurn', 'smear', 'flip'];\n    }\n    /** ornamentArticulation goes above/below the note based on space availablity */\n    static get ornamentArticulation() {\n        return ['bend', 'plungerClosed', 'plungerOpen'];\n    }\n    /**\n     * Legacy ornaments have hard-coded metrics.  If additional ornament types are\n     * added, get their metrics here.\n     */\n    // eslint-disable-next-line\n    getMetrics() {\n        return Tables.currentMusicFont().getMetrics().glyphs.jazzOrnaments[this.ornament.code];\n    }\n    /** Set whether the ornament is to be delayed. */\n    setDelayed(delayed) {\n        this.delayed = delayed;\n        return this;\n    }\n    /** Set the upper accidental for the ornament. */\n    setUpperAccidental(accid) {\n        const scale = this.render_options.font_scale / 1.3;\n        this.accidentalUpper = new Glyph(Tables.accidentalCodes(accid).code, scale);\n        this.accidentalUpper.setOrigin(0.5, 1.0);\n        return this;\n    }\n    /** Set the lower accidental for the ornament. */\n    setLowerAccidental(accid) {\n        const scale = this.render_options.font_scale / 1.3;\n        this.accidentalLower = new Glyph(Tables.accidentalCodes(accid).code, scale);\n        this.accidentalLower.setOrigin(0.5, 1.0);\n        return this;\n    }\n    /** Render ornament in position next to note. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const stemDir = note.getStemDirection();\n        const stave = note.checkStave();\n        const classString = Object.keys(this.getAttribute('classes')).join(' ');\n        ctx.openGroup(classString, this.getAttribute('id'));\n        // Get stem extents\n        const stemExtents = note.checkStem().getExtents();\n        let y = stemDir === Stem.DOWN ? stemExtents.baseY : stemExtents.topY;\n        // TabNotes don't have stems attached to them. Tab stems are rendered outside the stave.\n        if (isTabNote(note)) {\n            if (note.hasStem()) {\n                if (stemDir === Stem.DOWN) {\n                    y = stave.getYForTopText(this.text_line);\n                }\n            }\n            else {\n                // Without a stem\n                y = stave.getYForTopText(this.text_line);\n            }\n        }\n        const isPlacedOnNoteheadSide = stemDir === Stem.DOWN;\n        const spacing = stave.getSpacingBetweenLines();\n        let lineSpacing = 1;\n        // Beamed stems are longer than quarter note stems, adjust accordingly\n        if (!isPlacedOnNoteheadSide && note.hasBeam()) {\n            lineSpacing += 0.5;\n        }\n        const totalSpacing = spacing * (this.text_line + lineSpacing);\n        const glyphYBetweenLines = y - totalSpacing;\n        // Get initial coordinates for the modifier position\n        const start = note.getModifierStartXY(this.position, this.index);\n        let glyphX = start.x;\n        // If the ornament is aligned with the note head, don't consider the stave y\n        // but use the 'natural' modifier y\n        let glyphY = this.ornamentAlignWithNoteHead\n            ? start.y\n            : Math.min(stave.getYForTopText(this.text_line), glyphYBetweenLines);\n        glyphY += this.y_shift;\n        // Ajdust x position if ornament is delayed\n        if (this.delayed) {\n            let delayXShift = 0;\n            const startX = glyphX - (stave.getX() - 10);\n            if (this.delayXShift !== undefined) {\n                delayXShift = this.delayXShift;\n            }\n            else {\n                delayXShift += this.glyph.getMetrics().width / 2;\n                const nextContext = TickContext.getNextContext(note.getTickContext());\n                if (nextContext) {\n                    delayXShift += (nextContext.getX() - startX) * 0.5;\n                }\n                else {\n                    delayXShift += (stave.getX() + stave.getWidth() - startX) * 0.5;\n                }\n                this.delayXShift = delayXShift;\n            }\n            glyphX += delayXShift;\n        }\n        L('Rendering ornament: ', this.ornament, glyphX, glyphY);\n        if (this.accidentalLower) {\n            this.accidentalLower.render(ctx, glyphX, glyphY);\n            glyphY -= this.accidentalLower.getMetrics().height;\n            glyphY -= this.render_options.accidentalLowerPadding;\n        }\n        if (this.stemUpYOffset && note.hasStem() && note.getStemDirection() === 1) {\n            glyphY += this.stemUpYOffset;\n        }\n        if (note.getLineNumber() < 5 && Ornament.ornamentNoteTransition.indexOf(this.type) >= 0) {\n            glyphY = note.checkStave().getBoundingBox().getY() + 40;\n        }\n        this.glyph.render(ctx, glyphX + this.x_shift, glyphY);\n        if (this.accidentalUpper) {\n            glyphY -= this.glyph.getMetrics().height + this.render_options.accidentalUpperPadding;\n            this.accidentalUpper.render(ctx, glyphX, glyphY);\n        }\n        ctx.closeGroup();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Ornament.DEBUG` to `true`. */\nOrnament.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Rodrigo Vilar\n// MIT License\nimport { Glyph } from './glyph';\nimport { Modifier, ModifierPosition } from './modifier';\nimport { Tables } from './tables';\nimport { Category, isGraceNote } from './typeguard';\n/** Parenthesis implements parenthesis modifiers for notes. */\nexport class Parenthesis extends Modifier {\n    /**\n     * Constructor\n     *\n     * @param position Modifier.Position.LEFT (default) or Modifier.Position.RIGHT\n     */\n    constructor(position) {\n        super();\n        this.position = position !== null && position !== void 0 ? position : Modifier.Position.LEFT;\n        this.point = Tables.currentMusicFont().lookupMetric('parenthesis.default.point');\n        this.setWidth(Tables.currentMusicFont().lookupMetric('parenthesis.default.width'));\n    }\n    static get CATEGORY() {\n        return Category.Parenthesis;\n    }\n    /** Add parentheses to the notes. */\n    static buildAndAttach(notes) {\n        for (const note of notes) {\n            for (let i = 0; i < note.keys.length; i++) {\n                note.addModifier(new Parenthesis(ModifierPosition.LEFT), i);\n                note.addModifier(new Parenthesis(ModifierPosition.RIGHT), i);\n            }\n        }\n    }\n    /** Arrange parentheses inside a ModifierContext. */\n    static format(parentheses, state) {\n        if (!parentheses || parentheses.length === 0)\n            return false;\n        let x_widthL = 0;\n        let x_widthR = 0;\n        for (let i = 0; i < parentheses.length; ++i) {\n            const parenthesis = parentheses[i];\n            const note = parenthesis.getNote();\n            const pos = parenthesis.getPosition();\n            const index = parenthesis.checkIndex();\n            let shift = 0;\n            if (pos === ModifierPosition.RIGHT) {\n                shift = note.getRightParenthesisPx(index);\n                x_widthR = x_widthR > shift + parenthesis.width ? x_widthR : shift + parenthesis.width;\n            }\n            if (pos === ModifierPosition.LEFT) {\n                shift = note.getLeftParenthesisPx(index);\n                x_widthL = x_widthL > shift + parenthesis.width ? x_widthL : shift + parenthesis.width;\n            }\n            parenthesis.setXShift(shift);\n        }\n        state.left_shift += x_widthL;\n        state.right_shift += x_widthR;\n        return true;\n    }\n    /** Set the associated note. */\n    setNote(note) {\n        this.note = note;\n        this.point = Tables.currentMusicFont().lookupMetric('parenthesis.default.point');\n        this.setWidth(Tables.currentMusicFont().lookupMetric('parenthesis.default.width'));\n        if (isGraceNote(note)) {\n            this.point = Tables.currentMusicFont().lookupMetric('parenthesis.gracenote.point');\n            this.setWidth(Tables.currentMusicFont().lookupMetric('parenthesis.gracenote.width'));\n        }\n        return this;\n    }\n    /** Render the parenthesis. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(this.position, this.index, { forceFlagRight: true });\n        const x = start.x + this.x_shift;\n        const y = start.y + this.y_shift;\n        if (this.position == Modifier.Position.RIGHT) {\n            Glyph.renderGlyph(ctx, x + 1, y, this.point, 'noteheadParenthesisRight', {\n                category: `noteHead.standard.noteheadParenthesisRight`,\n            });\n        }\n        else if (this.position == Modifier.Position.LEFT) {\n            Glyph.renderGlyph(ctx, x - 2, y, this.point, 'noteheadParenthesisLeft', {\n                category: `noteHead.standard.noteheadParenthesisLeft`,\n            });\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Ron B. Yeh\n// MIT License\n//\n// Utilities for working with Web APIs.\n// See: https://developer.mozilla.org/en-US/docs/Web/API\nimport { globalObject } from './util';\n// eslint-disable-next-line\nexport function isHTMLCanvas(element) {\n    if (!element)\n        return false;\n    const global = globalObject();\n    return (\n    // It's either an instance of the HTMLCanvasElement class,\n    (typeof global.HTMLCanvasElement === 'function' && element instanceof global.HTMLCanvasElement) ||\n        // OR it's pretending to be a <canvas> element. Good enough!\n        // Do not rely on .tagName, because node-canvas doesn't provide a tagName.\n        (typeof element.getContext === 'function' && typeof element.toDataURL === 'function'));\n}\n// eslint-disable-next-line\nexport function isHTMLDiv(element) {\n    if (!element)\n        return false;\n    const global = globalObject();\n    return (\n    // It's either an instance of the HTMLDivElement class.\n    (typeof global.HTMLDivElement === 'function' && element instanceof global.HTMLDivElement) ||\n        // OR it's pretending to be a <div>. See: svgcontext.ts.\n        (typeof element.appendChild === 'function' && typeof element.style === 'object'));\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font } from './font';\nimport { RenderContext } from './rendercontext';\nimport { globalObject, warn } from './util';\nimport { isHTMLCanvas } from './web';\n/**\n * A rendering context for the Canvas backend. This class serves as a proxy for the\n * underlying CanvasRenderingContext2D object, part of the browser's API.\n */\nexport class CanvasContext extends RenderContext {\n    constructor(context) {\n        super();\n        /** Height of one line of text (in pixels). */\n        this.textHeight = 0;\n        this.context2D = context;\n        if (!context.canvas) {\n            this.canvas = {\n                width: CanvasContext.WIDTH,\n                height: CanvasContext.HEIGHT,\n            };\n        }\n        else {\n            this.canvas = context.canvas;\n        }\n    }\n    static get WIDTH() {\n        return 600;\n    }\n    static get HEIGHT() {\n        return 400;\n    }\n    static get CANVAS_BROWSER_SIZE_LIMIT() {\n        return 32767; // Chrome/Firefox. Could be determined more precisely by npm module canvas-size.\n    }\n    /**\n     * Ensure that width and height do not exceed the browser limit.\n     * @returns array of [width, height] clamped to the browser limit.\n     */\n    static sanitizeCanvasDims(width, height) {\n        const limit = this.CANVAS_BROWSER_SIZE_LIMIT;\n        if (Math.max(width, height) > limit) {\n            warn('Canvas dimensions exceed browser limit. Cropping to ' + limit);\n            if (width > limit) {\n                width = limit;\n            }\n            if (height > limit) {\n                height = limit;\n            }\n        }\n        return [width, height];\n    }\n    /**\n     * Set all pixels to transparent black rgba(0,0,0,0).\n     */\n    clear() {\n        this.context2D.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n    // eslint-disable-next-line\n    openGroup(cls, id, attrs) {\n        // Containers not implemented.\n    }\n    closeGroup() {\n        // Containers not implemented.\n    }\n    // eslint-disable-next-line\n    add(child) {\n        // Containers not implemented.\n    }\n    setFillStyle(style) {\n        this.context2D.fillStyle = style;\n        return this;\n    }\n    /** CanvasContext ignores `setBackgroundFillStyle()`. */\n    // eslint-disable-next-line\n    setBackgroundFillStyle(style) {\n        // DO NOTHING\n        return this;\n    }\n    setStrokeStyle(style) {\n        this.context2D.strokeStyle = style;\n        return this;\n    }\n    setShadowColor(color) {\n        this.context2D.shadowColor = color;\n        return this;\n    }\n    setShadowBlur(blur) {\n        // CanvasRenderingContext2D does not scale the shadow blur by the current\n        // transform, so we have to do it manually. We assume uniform scaling\n        // (though allow for rotation) because the blur can only be scaled\n        // uniformly anyway.\n        const t = this.context2D.getTransform();\n        const scale = Math.sqrt(t.a * t.a + t.b * t.b + t.c * t.c + t.d * t.d);\n        this.context2D.shadowBlur = scale * blur;\n        return this;\n    }\n    setLineWidth(width) {\n        this.context2D.lineWidth = width;\n        return this;\n    }\n    setLineCap(capType) {\n        this.context2D.lineCap = capType;\n        return this;\n    }\n    setLineDash(dash) {\n        this.context2D.setLineDash(dash);\n        return this;\n    }\n    scale(x, y) {\n        this.context2D.scale(x, y);\n        return this;\n    }\n    resize(width, height) {\n        const canvas = this.context2D.canvas;\n        const devicePixelRatio = globalObject().devicePixelRatio || 1;\n        // Scale the canvas size by the device pixel ratio clamping to the maximum supported size.\n        [width, height] = CanvasContext.sanitizeCanvasDims(width * devicePixelRatio, height * devicePixelRatio);\n        // Divide back down by the pixel ratio and convert to integers.\n        width = (width / devicePixelRatio) | 0;\n        height = (height / devicePixelRatio) | 0;\n        canvas.width = width * devicePixelRatio;\n        canvas.height = height * devicePixelRatio;\n        // The canvas could be an instance of either HTMLCanvasElement or an OffscreenCanvas.\n        // Only HTMLCanvasElement has a style attribute.\n        if (isHTMLCanvas(canvas)) {\n            canvas.style.width = width + 'px';\n            canvas.style.height = height + 'px';\n        }\n        return this.scale(devicePixelRatio, devicePixelRatio);\n    }\n    rect(x, y, width, height) {\n        this.context2D.rect(x, y, width, height);\n        return this;\n    }\n    fillRect(x, y, width, height) {\n        this.context2D.fillRect(x, y, width, height);\n        return this;\n    }\n    /**\n     * Set the pixels in a rectangular area to transparent black rgba(0,0,0,0).\n     */\n    clearRect(x, y, width, height) {\n        this.context2D.clearRect(x, y, width, height);\n        return this;\n    }\n    beginPath() {\n        this.context2D.beginPath();\n        return this;\n    }\n    moveTo(x, y) {\n        this.context2D.moveTo(x, y);\n        return this;\n    }\n    lineTo(x, y) {\n        this.context2D.lineTo(x, y);\n        return this;\n    }\n    bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {\n        this.context2D.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n        return this;\n    }\n    quadraticCurveTo(cpx, cpy, x, y) {\n        this.context2D.quadraticCurveTo(cpx, cpy, x, y);\n        return this;\n    }\n    arc(x, y, radius, startAngle, endAngle, counterclockwise) {\n        this.context2D.arc(x, y, radius, startAngle, endAngle, counterclockwise);\n        return this;\n    }\n    fill() {\n        this.context2D.fill();\n        return this;\n    }\n    stroke() {\n        this.context2D.stroke();\n        return this;\n    }\n    closePath() {\n        this.context2D.closePath();\n        return this;\n    }\n    measureText(text) {\n        const metrics = this.context2D.measureText(text);\n        let y = 0;\n        let height = 0;\n        if (metrics.fontBoundingBoxAscent) {\n            y = -metrics.fontBoundingBoxAscent;\n            height = metrics.fontBoundingBoxDescent + metrics.fontBoundingBoxAscent;\n        }\n        else {\n            y = -metrics.actualBoundingBoxAscent;\n            height = metrics.actualBoundingBoxDescent + metrics.actualBoundingBoxAscent;\n        }\n        // Return x, y, width & height in the same manner as svg getBBox\n        return {\n            x: 0,\n            y: y,\n            width: metrics.width,\n            height: height,\n        };\n    }\n    fillText(text, x, y) {\n        this.context2D.fillText(text, x, y);\n        return this;\n    }\n    save() {\n        this.context2D.save();\n        return this;\n    }\n    restore() {\n        this.context2D.restore();\n        return this;\n    }\n    set fillStyle(style) {\n        this.context2D.fillStyle = style;\n    }\n    get fillStyle() {\n        return this.context2D.fillStyle;\n    }\n    set strokeStyle(style) {\n        this.context2D.strokeStyle = style;\n    }\n    get strokeStyle() {\n        return this.context2D.strokeStyle;\n    }\n    /**\n     * @param f is 1) a `FontInfo` object or\n     *             2) a string formatted as CSS font shorthand (e.g., 'bold 10pt Arial') or\n     *             3) a string representing the font family (one of `size`, `weight`, or `style` must also be provided).\n     * @param size a string specifying the font size and unit (e.g., '16pt'), or a number (the unit is assumed to be 'pt').\n     * @param weight is a string (e.g., 'bold', 'normal') or a number (100, 200, ... 900).\n     * @param style is a string (e.g., 'italic', 'normal').\n     */\n    setFont(f, size, weight, style) {\n        const fontInfo = Font.validate(f, size, weight, style);\n        this.context2D.font = Font.toCSSString(fontInfo);\n        this.textHeight = Font.convertSizeToPixelValue(fontInfo.size);\n        return this;\n    }\n    /** Return a string of the form `'italic bold 15pt Arial'` */\n    getFont() {\n        return this.context2D.font;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n// @author Gregory Ristow (2015)\nimport { Font, FontStyle, FontWeight } from './font';\nimport { RenderContext } from './rendercontext';\nimport { normalizeAngle, prefix, RuntimeError } from './util';\n/** For a particular element type (e.g., rect), we will not apply certain presentation attributes. */\nconst ATTRIBUTES_TO_IGNORE = {\n    path: {\n        x: true,\n        y: true,\n        width: true,\n        height: true,\n        'font-family': true,\n        'font-weight': true,\n        'font-style': true,\n        'font-size': true,\n    },\n    rect: {\n        'font-family': true,\n        'font-weight': true,\n        'font-style': true,\n        'font-size': true,\n    },\n    text: {\n        width: true,\n        height: true,\n    },\n};\n/** Create the SVG in the SVG namespace. */\nconst SVG_NS = 'http://www.w3.org/2000/svg';\nconst TWO_PI = 2 * Math.PI;\nclass MeasureTextCache {\n    constructor() {\n        // The cache is keyed first by the text string, then by the font attributes\n        // joined together.\n        this.cache = {};\n    }\n    lookup(text, svg, attributes) {\n        let entries = this.cache[text];\n        if (entries === undefined) {\n            entries = {};\n            this.cache[text] = entries;\n        }\n        const family = attributes['font-family'];\n        const size = attributes['font-size'];\n        const weight = attributes['font-weight'];\n        const style = attributes['font-style'];\n        const key = `${family}%${size}%${weight}%${style}`;\n        let entry = entries[key];\n        if (entry === undefined) {\n            entry = this.measureImpl(text, svg, attributes);\n            entries[key] = entry;\n        }\n        return entry;\n    }\n    measureImpl(text, svg, attributes) {\n        let txt = this.txt;\n        if (!txt) {\n            // Create the SVG text element that will be used to measure text in the event\n            // of a cache miss.\n            txt = document.createElementNS(SVG_NS, 'text');\n            this.txt = txt;\n        }\n        txt.textContent = text;\n        txt.setAttributeNS(null, 'font-family', attributes['font-family']);\n        txt.setAttributeNS(null, 'font-size', attributes['font-size']);\n        txt.setAttributeNS(null, 'font-style', attributes['font-style']);\n        txt.setAttributeNS(null, 'font-weight', attributes['font-weight']);\n        svg.appendChild(txt);\n        const bbox = txt.getBBox();\n        svg.removeChild(txt);\n        return { x: bbox.x, y: bbox.y, width: bbox.width, height: bbox.height };\n    }\n}\n/**\n * SVG rendering context with an API similar to CanvasRenderingContext2D.\n */\nexport class SVGContext extends RenderContext {\n    constructor(element) {\n        super();\n        this.width = 0;\n        this.height = 0;\n        this.backgroundFillStyle = 'white';\n        /** Formatted as CSS font shorthand (e.g., 'italic bold 12pt Arial') */\n        this.fontCSSString = '';\n        this.element = element;\n        // Create a SVG element and add it to the container element.\n        const svg = this.create('svg');\n        this.element.appendChild(svg);\n        this.svg = svg;\n        this.parent = this.svg;\n        this.groups = [this.svg];\n        this.path = '';\n        this.pen = { x: NaN, y: NaN };\n        this.lineWidth = 1.0;\n        const defaultFontAttributes = {\n            'font-family': Font.SANS_SERIF,\n            'font-size': Font.SIZE + 'pt',\n            'font-weight': FontWeight.NORMAL,\n            'font-style': FontStyle.NORMAL,\n        };\n        this.state = Object.assign({ scale: { x: 1, y: 1 } }, defaultFontAttributes);\n        this.attributes = Object.assign({ 'stroke-width': 0.3, 'stroke-dasharray': 'none', fill: 'black', stroke: 'black' }, defaultFontAttributes);\n        this.shadow_attributes = {\n            width: 0,\n            color: 'black',\n        };\n        this.state_stack = [];\n    }\n    create(svgElementType) {\n        return document.createElementNS(SVG_NS, svgElementType);\n    }\n    // Allow grouping elements in containers for interactivity.\n    openGroup(cls, id, attrs) {\n        const group = this.create('g');\n        this.groups.push(group);\n        this.parent.appendChild(group);\n        this.parent = group;\n        if (cls)\n            group.setAttribute('class', prefix(cls));\n        if (id)\n            group.setAttribute('id', prefix(id));\n        if (attrs && attrs.pointerBBox) {\n            group.setAttribute('pointer-events', 'bounding-box');\n        }\n        return group;\n    }\n    closeGroup() {\n        this.groups.pop();\n        this.parent = this.groups[this.groups.length - 1];\n    }\n    add(elem) {\n        this.parent.appendChild(elem);\n    }\n    setFillStyle(style) {\n        this.attributes.fill = style;\n        return this;\n    }\n    /**\n     * Used to set the fill color for `clearRect()`. This allows us to simulate\n     * cutting a \"hole\" into the SVG drawing.\n     */\n    setBackgroundFillStyle(style) {\n        this.backgroundFillStyle = style;\n        return this;\n    }\n    setStrokeStyle(style) {\n        this.attributes.stroke = style;\n        return this;\n    }\n    setShadowColor(color) {\n        this.shadow_attributes.color = color;\n        return this;\n    }\n    /**\n     * @param blur A non-negative float specifying the level of shadow blur, where 0\n     *             represents no blur and larger numbers represent increasingly more blur.\n     * @returns this\n     */\n    setShadowBlur(blur) {\n        this.shadow_attributes.width = blur;\n        return this;\n    }\n    /**\n     * @param width\n     * @returns this\n     */\n    setLineWidth(width) {\n        this.attributes['stroke-width'] = width;\n        this.lineWidth = width;\n        return this;\n    }\n    /**\n     * @param lineDash an array of integers in the form of [dash, space, dash, space, etc...]\n     * @returns this\n     *\n     * See: [SVG `stroke-dasharray` attribute](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray)\n     */\n    setLineDash(lineDash) {\n        if (Object.prototype.toString.call(lineDash) === '[object Array]') {\n            this.attributes['stroke-dasharray'] = lineDash.join(',');\n            return this;\n        }\n        else {\n            throw new RuntimeError('ArgumentError', 'lineDash must be an array of integers.');\n        }\n    }\n    /**\n     * @param capType\n     * @returns this\n     */\n    setLineCap(capType) {\n        this.attributes['stroke-linecap'] = capType;\n        return this;\n    }\n    // ### Sizing & Scaling Methods:\n    // TODO (GCR): See note at scale() -- separate our internal\n    // conception of pixel-based width/height from the style.width\n    // and style.height properties eventually to allow users to\n    // apply responsive sizing attributes to the SVG.\n    resize(width, height) {\n        this.width = width;\n        this.height = height;\n        this.element.style.width = width.toString();\n        this.svg.style.width = width.toString();\n        this.svg.style.height = height.toString();\n        const attributes = {\n            width,\n            height,\n        };\n        this.applyAttributes(this.svg, attributes);\n        this.scale(this.state.scale.x, this.state.scale.y);\n        return this;\n    }\n    scale(x, y) {\n        // uses viewBox to scale\n        // TODO (GCR): we may at some point want to distinguish the\n        // style.width / style.height properties that are applied to\n        // the SVG object from our internal conception of the SVG\n        // width/height.  This would allow us to create automatically\n        // scaling SVG's that filled their containers, for instance.\n        //\n        // As this isn't implemented in Canvas contexts,\n        // I've left as is for now, but in using the viewBox to\n        // handle internal scaling, am trying to make it possible\n        // for us to eventually move in that direction.\n        this.state.scale = { x, y };\n        const visibleWidth = this.width / x;\n        const visibleHeight = this.height / y;\n        this.setViewBox(0, 0, visibleWidth, visibleHeight);\n        return this;\n    }\n    /**\n     * 1 arg: string in the \"x y w h\" format\n     * 4 args: x:number, y:number, w:number, h:number\n     */\n    setViewBox(viewBox_or_minX, minY, width, height) {\n        if (typeof viewBox_or_minX === 'string') {\n            this.svg.setAttribute('viewBox', viewBox_or_minX);\n        }\n        else {\n            const viewBoxString = viewBox_or_minX + ' ' + minY + ' ' + width + ' ' + height;\n            this.svg.setAttribute('viewBox', viewBoxString);\n        }\n    }\n    // ### Drawing helper methods:\n    applyAttributes(element, attributes) {\n        const attrNamesToIgnore = ATTRIBUTES_TO_IGNORE[element.nodeName];\n        for (const attrName in attributes) {\n            if (attrNamesToIgnore && attrNamesToIgnore[attrName]) {\n                continue;\n            }\n            element.setAttributeNS(null, attrName, attributes[attrName]);\n        }\n        return element;\n    }\n    // ### Shape & Path Methods:\n    clear() {\n        // Clear the SVG by removing all inner children.\n        // (This approach is usually slightly more efficient\n        // than removing the old SVG & adding a new one to\n        // the container element, since it does not cause the\n        // container to resize twice.  Also, the resize\n        // triggered by removing the entire SVG can trigger\n        // a touchcancel event when the element resizes away\n        // from a touch point.)\n        while (this.svg.lastChild) {\n            this.svg.removeChild(this.svg.lastChild);\n        }\n        // Replace the viewbox attribute we just removed.\n        this.scale(this.state.scale.x, this.state.scale.y);\n    }\n    // ## Rectangles:\n    rect(x, y, width, height, attributes) {\n        // Avoid invalid negative height attributes by flipping the rectangle on its head:\n        if (height < 0) {\n            y += height;\n            height *= -1;\n        }\n        const rectangle = this.create('rect');\n        attributes = attributes !== null && attributes !== void 0 ? attributes : { fill: 'none', 'stroke-width': this.lineWidth, stroke: 'black' };\n        this.applyAttributes(rectangle, Object.assign({ x, y, width, height }, attributes));\n        this.add(rectangle);\n        return this;\n    }\n    fillRect(x, y, width, height) {\n        const attributes = { fill: this.attributes.fill };\n        this.rect(x, y, width, height, attributes);\n        return this;\n    }\n    clearRect(x, y, width, height) {\n        // Currently this fills a rect with the backgroundFillStyle, rather\n        // than \"cut a hole\" into the existing shapes.\n        //\n        // Since tabNote seems to be the only module that makes use of this\n        // it may be worth creating a separate tabStave that would\n        // draw lines around locations of tablature fingering.\n        this.rect(x, y, width, height, { 'stroke-width': 0, fill: this.backgroundFillStyle });\n        return this;\n    }\n    // ## Paths:\n    beginPath() {\n        this.path = '';\n        this.pen.x = NaN;\n        this.pen.y = NaN;\n        return this;\n    }\n    moveTo(x, y) {\n        this.path += 'M' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n    }\n    lineTo(x, y) {\n        this.path += 'L' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n    }\n    bezierCurveTo(x1, y1, x2, y2, x, y) {\n        this.path += 'C' + x1 + ' ' + y1 + ',' + x2 + ' ' + y2 + ',' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n    }\n    quadraticCurveTo(x1, y1, x, y) {\n        this.path += 'Q' + x1 + ' ' + y1 + ',' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n    }\n    arc(x, y, radius, startAngle, endAngle, counterclockwise) {\n        const x0 = x + radius * Math.cos(startAngle);\n        const y0 = y + radius * Math.sin(startAngle);\n        // Handle the edge case where arc length is greater than or equal to\n        // the circle's circumference:\n        //   https://html.spec.whatwg.org/multipage/canvas.html#ellipse-method-steps\n        if ((!counterclockwise && endAngle - startAngle >= TWO_PI) ||\n            (counterclockwise && startAngle - endAngle >= TWO_PI)) {\n            const x1 = x + radius * Math.cos(startAngle + Math.PI);\n            const y1 = y + radius * Math.sin(startAngle + Math.PI);\n            // There's no way to specify a completely circular arc in SVG so we have to\n            // use two semi-circular arcs.\n            this.path += `M${x0} ${y0} A${radius} ${radius} 0 0 0 ${x1} ${y1} `;\n            this.path += `A${radius} ${radius} 0 0 0 ${x0} ${y0}`;\n            this.pen.x = x0;\n            this.pen.y = y0;\n        }\n        else {\n            const x1 = x + radius * Math.cos(endAngle);\n            const y1 = y + radius * Math.sin(endAngle);\n            startAngle = normalizeAngle(startAngle);\n            endAngle = normalizeAngle(endAngle);\n            let large;\n            if (Math.abs(endAngle - startAngle) < Math.PI) {\n                large = counterclockwise;\n            }\n            else {\n                large = !counterclockwise;\n            }\n            if (startAngle > endAngle) {\n                large = !large;\n            }\n            const sweep = !counterclockwise;\n            this.path += `M${x0} ${y0} A${radius} ${radius} 0 ${+large} ${+sweep} ${x1} ${y1}`;\n            this.pen.x = x1;\n            this.pen.y = y1;\n        }\n        return this;\n    }\n    closePath() {\n        this.path += 'Z';\n        return this;\n    }\n    getShadowStyle() {\n        const sa = this.shadow_attributes;\n        // A CSS drop-shadow filter blur looks different than a canvas shadowBlur\n        // of the same radius, so we scale the drop-shadow radius here to make it\n        // look close to the canvas shadow.\n        return `filter: drop-shadow(0 0 ${sa.width / 1.5}px ${sa.color})`;\n    }\n    fill(attributes) {\n        const path = this.create('path');\n        if (typeof attributes === 'undefined') {\n            attributes = Object.assign(Object.assign({}, this.attributes), { stroke: 'none' });\n        }\n        attributes.d = this.path;\n        if (this.shadow_attributes.width > 0) {\n            attributes.style = this.getShadowStyle();\n        }\n        this.applyAttributes(path, attributes);\n        this.add(path);\n        return this;\n    }\n    stroke() {\n        const path = this.create('path');\n        const attributes = Object.assign(Object.assign({}, this.attributes), { fill: 'none', 'stroke-width': this.lineWidth, d: this.path });\n        if (this.shadow_attributes.width > 0) {\n            attributes.style = this.getShadowStyle();\n        }\n        this.applyAttributes(path, attributes);\n        this.add(path);\n        return this;\n    }\n    // ## Text Methods:\n    measureText(text) {\n        return SVGContext.measureTextCache.lookup(text, this.svg, this.attributes);\n    }\n    fillText(text, x, y) {\n        if (!text || text.length <= 0) {\n            return this;\n        }\n        const attributes = Object.assign(Object.assign({}, this.attributes), { stroke: 'none', x,\n            y });\n        const txt = this.create('text');\n        txt.textContent = text;\n        this.applyAttributes(txt, attributes);\n        this.add(txt);\n        return this;\n    }\n    // TODO: State should be deep-copied.\n    save() {\n        this.state_stack.push({\n            state: {\n                'font-family': this.state['font-family'],\n                'font-weight': this.state['font-weight'],\n                'font-style': this.state['font-style'],\n                'font-size': this.state['font-size'],\n                scale: this.state.scale,\n            },\n            attributes: {\n                'font-family': this.attributes['font-family'],\n                'font-weight': this.attributes['font-weight'],\n                'font-style': this.attributes['font-style'],\n                'font-size': this.attributes['font-size'],\n                fill: this.attributes.fill,\n                stroke: this.attributes.stroke,\n                'stroke-width': this.attributes['stroke-width'],\n                'stroke-dasharray': this.attributes['stroke-dasharray'],\n            },\n            shadow_attributes: {\n                width: this.shadow_attributes.width,\n                color: this.shadow_attributes.color,\n            },\n            lineWidth: this.lineWidth,\n        });\n        return this;\n    }\n    // TODO: State should be deep-restored.\n    restore() {\n        const savedState = this.state_stack.pop();\n        if (savedState) {\n            const state = savedState;\n            this.state['font-family'] = state.state['font-family'];\n            this.state['font-weight'] = state.state['font-weight'];\n            this.state['font-style'] = state.state['font-style'];\n            this.state['font-size'] = state.state['font-size'];\n            this.state.scale = state.state.scale;\n            this.attributes['font-family'] = state.attributes['font-family'];\n            this.attributes['font-weight'] = state.attributes['font-weight'];\n            this.attributes['font-style'] = state.attributes['font-style'];\n            this.attributes['font-size'] = state.attributes['font-size'];\n            this.attributes.fill = state.attributes.fill;\n            this.attributes.stroke = state.attributes.stroke;\n            this.attributes['stroke-width'] = state.attributes['stroke-width'];\n            this.attributes['stroke-dasharray'] = state.attributes['stroke-dasharray'];\n            this.shadow_attributes.width = state.shadow_attributes.width;\n            this.shadow_attributes.color = state.shadow_attributes.color;\n            this.lineWidth = state.lineWidth;\n        }\n        return this;\n    }\n    set fillStyle(style) {\n        this.setFillStyle(style);\n    }\n    get fillStyle() {\n        return this.attributes.fill;\n    }\n    set strokeStyle(style) {\n        this.setStrokeStyle(style);\n    }\n    get strokeStyle() {\n        return this.attributes.stroke;\n    }\n    /**\n     * @param f is 1) a `FontInfo` object or\n     *             2) a string formatted as CSS font shorthand (e.g., 'bold 10pt Arial') or\n     *             3) a string representing the font family (one of `size`, `weight`, or `style` must also be provided).\n     * @param size a string specifying the font size and unit (e.g., '16pt'), or a number (the unit is assumed to be 'pt').\n     * @param weight is a string (e.g., 'bold', 'normal') or a number (100, 200, ... 900). It is inserted\n     *               into the font-weight attribute (e.g., font-weight=\"bold\")\n     * @param style is a string (e.g., 'italic', 'normal') that is inserted into the\n     *              font-style attribute (e.g., font-style=\"italic\")\n     */\n    setFont(f, size, weight, style) {\n        const fontInfo = Font.validate(f, size, weight, style);\n        this.fontCSSString = Font.toCSSString(fontInfo);\n        const fontAttributes = {\n            'font-family': fontInfo.family,\n            'font-size': fontInfo.size,\n            'font-weight': fontInfo.weight,\n            'font-style': fontInfo.style,\n        };\n        this.attributes = Object.assign(Object.assign({}, this.attributes), fontAttributes);\n        this.state = Object.assign(Object.assign({}, this.state), fontAttributes);\n        return this;\n    }\n    /** Return a string of the form `'italic bold 15pt Arial'` */\n    getFont() {\n        return this.fontCSSString;\n    }\n}\nSVGContext.measureTextCache = new MeasureTextCache();\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { CanvasContext } from './canvascontext';\nimport { SVGContext } from './svgcontext';\nimport { isRenderContext } from './typeguard';\nimport { RuntimeError } from './util';\nimport { isHTMLCanvas, isHTMLDiv } from './web';\nexport var RendererBackends;\n(function (RendererBackends) {\n    RendererBackends[RendererBackends[\"CANVAS\"] = 1] = \"CANVAS\";\n    RendererBackends[RendererBackends[\"SVG\"] = 2] = \"SVG\";\n})(RendererBackends || (RendererBackends = {}));\n// End of line types\nexport var RendererLineEndType;\n(function (RendererLineEndType) {\n    RendererLineEndType[RendererLineEndType[\"NONE\"] = 1] = \"NONE\";\n    RendererLineEndType[RendererLineEndType[\"UP\"] = 2] = \"UP\";\n    RendererLineEndType[RendererLineEndType[\"DOWN\"] = 3] = \"DOWN\";\n})(RendererLineEndType || (RendererLineEndType = {}));\n/**\n * Support Canvas & SVG rendering contexts.\n */\nexport class Renderer {\n    constructor(arg0, arg1) {\n        if (isRenderContext(arg0)) {\n            // The user has provided what looks like a RenderContext, let's just use it.\n            this.ctx = arg0;\n        }\n        else {\n            if (arg1 === undefined) {\n                // The backend must be specified if the render context isn't directly provided.\n                throw new RuntimeError('InvalidArgument', 'Missing backend argument');\n            }\n            const backend = arg1;\n            let element;\n            if (typeof arg0 == 'string') {\n                const maybeElement = document.getElementById(arg0);\n                if (!maybeElement) {\n                    throw new RuntimeError('BadElementId', `Can't find element with ID \"${maybeElement}\"`);\n                }\n                element = maybeElement;\n            }\n            else {\n                element = arg0;\n            }\n            // Verify backend and create context\n            if (backend === Renderer.Backends.CANVAS) {\n                if (!isHTMLCanvas(element)) {\n                    throw new RuntimeError('BadElement', 'CANVAS context requires an HTMLCanvasElement.');\n                }\n                const context = element.getContext('2d');\n                if (!context) {\n                    throw new RuntimeError('BadElement', \"Can't get canvas context\");\n                }\n                this.ctx = new CanvasContext(context);\n            }\n            else if (backend === Renderer.Backends.SVG) {\n                if (!isHTMLDiv(element)) {\n                    throw new RuntimeError('BadElement', 'SVG context requires an HTMLDivElement.');\n                }\n                this.ctx = new SVGContext(element);\n            }\n            else {\n                throw new RuntimeError('InvalidBackend', `No support for backend: ${backend}`);\n            }\n        }\n    }\n    static buildContext(elementId, backend, width, height, background = '#FFF') {\n        const renderer = new Renderer(elementId, backend);\n        if (width && height) {\n            renderer.resize(width, height);\n        }\n        const ctx = renderer.getContext();\n        ctx.setBackgroundFillStyle(background);\n        Renderer.lastContext = ctx;\n        return ctx;\n    }\n    static getCanvasContext(elementId, width, height, background) {\n        return Renderer.buildContext(elementId, Renderer.Backends.CANVAS, width, height, background);\n    }\n    static getSVGContext(elementId, width, height, background) {\n        return Renderer.buildContext(elementId, Renderer.Backends.SVG, width, height, background);\n    }\n    // Draw a dashed line (horizontal, vertical or diagonal\n    // dashPattern = [3,3] draws a 3 pixel dash followed by a three pixel space.\n    // setting the second number to 0 draws a solid line.\n    static drawDashedLine(context, fromX, fromY, toX, toY, dashPattern) {\n        context.beginPath();\n        const dx = toX - fromX;\n        const dy = toY - fromY;\n        const angle = Math.atan2(dy, dx);\n        let x = fromX;\n        let y = fromY;\n        context.moveTo(fromX, fromY);\n        let idx = 0;\n        let draw = true;\n        while (!((dx < 0 ? x <= toX : x >= toX) && (dy < 0 ? y <= toY : y >= toY))) {\n            const dashLength = dashPattern[idx++ % dashPattern.length];\n            const nx = x + Math.cos(angle) * dashLength;\n            x = dx < 0 ? Math.max(toX, nx) : Math.min(toX, nx);\n            const ny = y + Math.sin(angle) * dashLength;\n            y = dy < 0 ? Math.max(toY, ny) : Math.min(toY, ny);\n            if (draw) {\n                context.lineTo(x, y);\n            }\n            else {\n                context.moveTo(x, y);\n            }\n            draw = !draw;\n        }\n        context.closePath();\n        context.stroke();\n    }\n    resize(width, height) {\n        this.ctx.resize(width, height);\n        return this;\n    }\n    getContext() {\n        return this.ctx;\n    }\n}\nRenderer.Backends = RendererBackends;\nRenderer.LineEndType = RendererLineEndType;\n// Used by vexflow_test_helpers.ts\n// Should this be private?\n// Can we do this in a cleaner way?\nRenderer.lastContext = undefined;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { Note } from './note';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport var TextJustification;\n(function (TextJustification) {\n    TextJustification[TextJustification[\"LEFT\"] = 1] = \"LEFT\";\n    TextJustification[TextJustification[\"CENTER\"] = 2] = \"CENTER\";\n    TextJustification[TextJustification[\"RIGHT\"] = 3] = \"RIGHT\";\n})(TextJustification || (TextJustification = {}));\n/**\n * `TextNote` is a notation element that is positioned in time. Generally\n * meant for objects that sit above/below the staff and inline with each other.\n * `TextNote` has to be assigned to a `Stave` before rendering by means of `setStave`.\n * Examples of this would be such as dynamics, lyrics, chord changes, etc.\n */\nexport class TextNote extends Note {\n    constructor(noteStruct) {\n        super(noteStruct);\n        this.text = noteStruct.text || '';\n        this.superscript = noteStruct.superscript;\n        this.subscript = noteStruct.subscript;\n        this.setFont(noteStruct.font);\n        this.line = noteStruct.line || 0;\n        this.smooth = noteStruct.smooth || false;\n        this.ignore_ticks = noteStruct.ignore_ticks || false;\n        this.justification = TextJustification.LEFT;\n        // Determine and set initial note width. Note that the text width is\n        // an approximation and isn't very accurate. The only way to accurately\n        // measure the length of text is with `CanvasRenderingContext2D.measureText()`.\n        if (noteStruct.glyph) {\n            const struct = TextNote.GLYPHS[noteStruct.glyph];\n            if (!struct)\n                throw new RuntimeError('Invalid glyph type: ' + noteStruct.glyph);\n            this.glyph = new Glyph(struct.code, 40, { category: 'textNote' });\n            this.setWidth(this.glyph.getMetrics().width);\n        }\n        else {\n            this.glyph = undefined;\n        }\n    }\n    static get CATEGORY() {\n        return Category.TextNote;\n    }\n    /** Glyph data. */\n    static get GLYPHS() {\n        return {\n            segno: {\n                code: 'segno',\n            },\n            tr: {\n                code: 'ornamentTrill',\n            },\n            mordent: {\n                code: 'ornamentMordent',\n            },\n            mordent_upper: {\n                code: 'ornamentShortTrill',\n            },\n            mordent_lower: {\n                code: 'ornamentMordent',\n            },\n            f: {\n                code: 'dynamicForte',\n            },\n            p: {\n                code: 'dynamicPiano',\n            },\n            m: {\n                code: 'dynamicMezzo',\n            },\n            s: {\n                code: 'dynamicSforzando',\n            },\n            z: {\n                code: 'dynamicZ',\n            },\n            coda: {\n                code: 'coda',\n            },\n            pedal_open: {\n                code: 'keyboardPedalPed',\n            },\n            pedal_close: {\n                code: 'keyboardPedalUp',\n            },\n            caesura_straight: {\n                code: 'caesura',\n            },\n            caesura_curved: {\n                code: 'caesuraCurved',\n            },\n            breath: {\n                code: 'breathMarkComma',\n            },\n            tick: {\n                code: 'breathMarkTick',\n            },\n            turn: {\n                code: 'ornamentTurn',\n            },\n            turn_inverted: {\n                code: 'ornamentTurnSlash',\n            },\n        };\n    }\n    /** Set the horizontal justification of the TextNote. */\n    setJustification(just) {\n        this.justification = just;\n        return this;\n    }\n    /** Set the Stave line on which the note should be placed. */\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    /** Pre-render formatting. */\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        const tickContext = this.checkTickContext(`Can't preformat without a TickContext.`);\n        if (this.smooth) {\n            this.setWidth(0);\n        }\n        else {\n            if (this.glyph) {\n                // Width already set.\n            }\n            else {\n                const ctx = this.checkContext();\n                ctx.setFont(this.textFont);\n                this.setWidth(ctx.measureText(this.text).width);\n            }\n        }\n        if (this.justification === TextJustification.CENTER) {\n            this.leftDisplacedHeadPx = this.width / 2;\n        }\n        else if (this.justification === TextJustification.RIGHT) {\n            this.leftDisplacedHeadPx = this.width;\n        }\n        // We reposition to the center of the note head\n        this.rightDisplacedHeadPx = tickContext.getMetrics().glyphPx / 2;\n        this.preFormatted = true;\n    }\n    /**\n     * Renders the TextNote.\n     * `TextNote` has to be assigned to a `Stave` before rendering by means of `setStave`.\n     */\n    draw() {\n        const ctx = this.checkContext();\n        const stave = this.checkStave();\n        const tickContext = this.checkTickContext(`Can't draw without a TickContext.`);\n        this.setRendered();\n        // Reposition to center of note head\n        let x = this.getAbsoluteX() + tickContext.getMetrics().glyphPx / 2;\n        // Align based on tick-context width.\n        const width = this.getWidth();\n        if (this.justification === TextJustification.CENTER) {\n            x -= width / 2;\n        }\n        else if (this.justification === TextJustification.RIGHT) {\n            x -= width;\n        }\n        let y;\n        if (this.glyph) {\n            y = stave.getYForLine(this.line + -3);\n            this.glyph.render(ctx, x, y);\n        }\n        else {\n            y = stave.getYForLine(this.line + -3);\n            this.applyStyle(ctx);\n            ctx.setFont(this.textFont);\n            ctx.fillText(this.text, x, y);\n            const height = ctx.measureText(this.text).height;\n            // We called this.setFont(...) in the constructor, so we know this.textFont is available.\n            // eslint-disable-next-line\n            const { family, size, weight, style } = this.textFont;\n            // Scale the font size by 1/1.3.\n            const smallerFontSize = Font.scaleSize(size, 0.769231);\n            if (this.superscript) {\n                ctx.setFont(family, smallerFontSize, weight, style);\n                ctx.fillText(this.superscript, x + this.width + 2, y - height / 2.2);\n            }\n            if (this.subscript) {\n                ctx.setFont(family, smallerFontSize, weight, style);\n                ctx.fillText(this.subscript, x + this.width + 2, y + height / 2.2 - 1);\n            }\n            this.restoreStyle(ctx);\n        }\n    }\n}\nTextNote.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: 12,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.NORMAL,\n};\nTextNote.Justification = TextJustification;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\nimport { Font, FontStyle, FontWeight } from './font';\nimport { StaveModifier } from './stavemodifier';\nimport { Category } from './typeguard';\nexport var VoltaType;\n(function (VoltaType) {\n    VoltaType[VoltaType[\"NONE\"] = 1] = \"NONE\";\n    VoltaType[VoltaType[\"BEGIN\"] = 2] = \"BEGIN\";\n    VoltaType[VoltaType[\"MID\"] = 3] = \"MID\";\n    VoltaType[VoltaType[\"END\"] = 4] = \"END\";\n    VoltaType[VoltaType[\"BEGIN_END\"] = 5] = \"BEGIN_END\";\n})(VoltaType || (VoltaType = {}));\nexport class Volta extends StaveModifier {\n    constructor(type, number, x, y_shift) {\n        super();\n        this.volta = type;\n        this.x = x;\n        this.y_shift = y_shift;\n        this.number = number;\n        this.resetFont();\n    }\n    static get CATEGORY() {\n        return Category.Volta;\n    }\n    static get type() {\n        return VoltaType;\n    }\n    setShiftY(y) {\n        this.y_shift = y;\n        return this;\n    }\n    draw(stave, x) {\n        const ctx = stave.checkContext();\n        this.setRendered();\n        let width = stave.getWidth() - x; // don't include x (offset) for width\n        const top_y = stave.getYForTopText(stave.getNumLines()) + this.y_shift;\n        const vert_height = 1.5 * stave.getSpacingBetweenLines();\n        switch (this.volta) {\n            case VoltaType.BEGIN:\n                ctx.fillRect(this.x + x, top_y, 1, vert_height);\n                break;\n            case VoltaType.END:\n                width -= 5;\n                ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n                break;\n            case VoltaType.BEGIN_END:\n                width -= 3;\n                ctx.fillRect(this.x + x, top_y, 1, vert_height);\n                ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n                break;\n            default:\n                break;\n        }\n        // If the beginning of a volta, draw measure number\n        if (this.volta === VoltaType.BEGIN || this.volta === VoltaType.BEGIN_END) {\n            ctx.save();\n            ctx.setFont(this.textFont);\n            ctx.fillText(this.number, this.x + x + 5, top_y + 15);\n            ctx.restore();\n        }\n        ctx.fillRect(this.x + x, top_y, width, 1);\n        return this;\n    }\n}\nVolta.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: 9,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns\n//\n// This file implements the `StringNumber` class which renders string\n// number annotations beside notes.\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Modifier, ModifierPosition } from './modifier';\nimport { Renderer } from './renderer';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category, isStaveNote, isStemmableNote } from './typeguard';\nimport { RuntimeError } from './util';\nexport class StringNumber extends Modifier {\n    constructor(number) {\n        super();\n        this.string_number = number;\n        this.position = Modifier.Position.ABOVE; // Default position above stem or note head\n        this.x_shift = 0;\n        this.y_shift = 0;\n        this.text_line = 0;\n        this.stem_offset = 0;\n        this.x_offset = 0; // Horizontal offset from default\n        this.y_offset = 0; // Vertical offset from default\n        this.dashed = true; // true - draw dashed extension  false - no extension\n        this.leg = Renderer.LineEndType.NONE; // draw upward/downward leg at the of extension line\n        this.radius = 8;\n        this.drawCircle = true;\n        this.setWidth(this.radius * 2 + 4);\n        this.resetFont();\n    }\n    static get CATEGORY() {\n        return Category.StringNumber;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static get metrics() {\n        return Tables.currentMusicFont().getMetrics().glyphs.stringNumber;\n    }\n    // ## Static Methods\n    // Arrange string numbers inside a `ModifierContext`\n    static format(nums, state) {\n        const left_shift = state.left_shift;\n        const right_shift = state.right_shift;\n        const num_spacing = 1;\n        if (!nums || nums.length === 0)\n            return false;\n        const nums_list = [];\n        let prev_note = null;\n        let shift_left = 0;\n        let shift_right = 0;\n        const modLines = 0;\n        for (let i = 0; i < nums.length; ++i) {\n            const num = nums[i];\n            const note = num.getNote();\n            const pos = num.getPosition();\n            if (!isStaveNote(note)) {\n                throw new RuntimeError('NoStaveNote');\n            }\n            const index = num.checkIndex();\n            const props = note.getKeyProps()[index];\n            const mc = note.getModifierContext();\n            const verticalSpaceNeeded = (num.radius * 2) / Tables.STAVE_LINE_DISTANCE + 0.5;\n            if (mc) {\n                if (pos === ModifierPosition.ABOVE) {\n                    num.text_line = mc.getState().top_text_line;\n                    state.top_text_line += verticalSpaceNeeded;\n                }\n                else if (pos === ModifierPosition.BELOW) {\n                    num.text_line = mc.getState().text_line;\n                    state.text_line += verticalSpaceNeeded;\n                }\n            }\n            if (note !== prev_note) {\n                for (let n = 0; n < note.keys.length; ++n) {\n                    if (left_shift === 0) {\n                        shift_left = Math.max(note.getLeftDisplacedHeadPx(), shift_left);\n                    }\n                    if (right_shift === 0) {\n                        shift_right = Math.max(note.getRightDisplacedHeadPx(), shift_right);\n                    }\n                }\n                prev_note = note;\n            }\n            const glyphLine = modLines === 0 ? props.line : modLines;\n            nums_list.push({\n                pos,\n                note,\n                num,\n                line: glyphLine,\n                shiftL: shift_left,\n                shiftR: shift_right,\n            });\n        }\n        // Sort string numbers by line number.\n        nums_list.sort((a, b) => b.line - a.line);\n        let num_shiftR = 0;\n        let x_widthL = 0;\n        let x_widthR = 0;\n        let last_line = null;\n        let last_note = null;\n        for (let i = 0; i < nums_list.length; ++i) {\n            let num_shift = 0;\n            const note = nums_list[i].note;\n            const pos = nums_list[i].pos;\n            const num = nums_list[i].num;\n            const line = nums_list[i].line;\n            const shiftR = nums_list[i].shiftR;\n            // Reset the position of the string number every line.\n            if (line !== last_line || note !== last_note) {\n                num_shiftR = right_shift + shiftR;\n            }\n            const num_width = num.getWidth() + num_spacing;\n            if (pos === Modifier.Position.LEFT) {\n                num.setXShift(left_shift);\n                num_shift = shift_left + num_width; // spacing\n                x_widthL = num_shift > x_widthL ? num_shift : x_widthL;\n            }\n            else if (pos === Modifier.Position.RIGHT) {\n                num.setXShift(num_shiftR);\n                num_shift += num_width; // spacing\n                x_widthR = num_shift > x_widthR ? num_shift : x_widthR;\n            }\n            last_line = line;\n            last_note = note;\n        }\n        state.left_shift += x_widthL;\n        state.right_shift += x_widthR;\n        return true;\n    }\n    setLineEndType(leg) {\n        if (leg >= Renderer.LineEndType.NONE && leg <= Renderer.LineEndType.DOWN) {\n            this.leg = leg;\n        }\n        return this;\n    }\n    setStringNumber(number) {\n        this.string_number = number;\n        return this;\n    }\n    setOffsetX(x) {\n        this.x_offset = x;\n        return this;\n    }\n    setOffsetY(y) {\n        this.y_offset = y;\n        return this;\n    }\n    setLastNote(note) {\n        this.last_note = note;\n        return this;\n    }\n    setDashed(dashed) {\n        this.dashed = dashed;\n        return this;\n    }\n    setDrawCircle(drawCircle) {\n        this.drawCircle = drawCircle;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(this.position, this.index);\n        const stemDirection = note.hasStem() ? note.getStemDirection() : Stem.UP;\n        let dot_x = start.x + this.x_shift + this.x_offset;\n        let stem_ext = {};\n        if (note.hasStem()) {\n            stem_ext = note.checkStem().getExtents();\n        }\n        let dot_y = start.y + this.y_shift + this.y_offset;\n        switch (this.position) {\n            case Modifier.Position.ABOVE:\n                {\n                    const ys = note.getYs();\n                    dot_y = ys.reduce((a, b) => (a < b ? a : b));\n                    if (note.hasStem() && stemDirection == Stem.UP) {\n                        dot_y = stem_ext.topY + StringNumber.metrics.stemPadding;\n                    }\n                    dot_y -= this.radius + StringNumber.metrics.verticalPadding + this.text_line * Tables.STAVE_LINE_DISTANCE;\n                }\n                break;\n            case Modifier.Position.BELOW:\n                {\n                    const ys = note.getYs();\n                    dot_y = ys.reduce((a, b) => (a > b ? a : b));\n                    if (note.hasStem() && stemDirection == Stem.DOWN) {\n                        dot_y = stem_ext.topY - StringNumber.metrics.stemPadding;\n                    }\n                    dot_y += this.radius + StringNumber.metrics.verticalPadding + this.text_line * Tables.STAVE_LINE_DISTANCE;\n                }\n                break;\n            case Modifier.Position.LEFT:\n                dot_x -= this.radius / 2 + StringNumber.metrics.leftPadding;\n                break;\n            case Modifier.Position.RIGHT:\n                dot_x += this.radius / 2 + StringNumber.metrics.rightPadding;\n                break;\n            default:\n                throw new RuntimeError('InvalidPosition', `The position ${this.position} is invalid`);\n        }\n        ctx.save();\n        if (this.drawCircle) {\n            ctx.beginPath();\n            ctx.arc(dot_x, dot_y, this.radius, 0, Math.PI * 2, false);\n            ctx.setLineWidth(1.5);\n            ctx.stroke();\n        }\n        ctx.setFont(this.textFont);\n        const x = dot_x - ctx.measureText(this.string_number).width / 2;\n        ctx.fillText('' + this.string_number, x, dot_y + 4.5);\n        const lastNote = this.last_note;\n        if (isStemmableNote(lastNote)) {\n            // Only StemmableNote objects have getStemX().\n            const end = lastNote.getStemX() - note.getX() + 5;\n            ctx.setStrokeStyle('#000000');\n            ctx.setLineCap('round');\n            ctx.setLineWidth(0.6);\n            if (this.dashed) {\n                Renderer.drawDashedLine(ctx, dot_x + 10, dot_y, dot_x + end, dot_y, [3, 3]);\n            }\n            else {\n                Renderer.drawDashedLine(ctx, dot_x + 10, dot_y, dot_x + end, dot_y, [3, 0]);\n            }\n            let len;\n            let pattern;\n            switch (this.leg) {\n                case Renderer.LineEndType.UP:\n                    len = -10;\n                    pattern = this.dashed ? [3, 3] : [3, 0];\n                    Renderer.drawDashedLine(ctx, dot_x + end, dot_y, dot_x + end, dot_y + len, pattern);\n                    break;\n                case Renderer.LineEndType.DOWN:\n                    len = 10;\n                    pattern = this.dashed ? [3, 3] : [3, 0];\n                    Renderer.drawDashedLine(ctx, dot_x + end, dot_y, dot_x + end, dot_y + len, pattern);\n                    break;\n                default:\n                    break;\n            }\n        }\n        ctx.restore();\n    }\n}\nStringNumber.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: Font.SIZE,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns\n//\n// This file implements the `Stroke` class which renders chord strokes\n// that can be arpeggiated, brushed, rasquedo, etc.\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { Category, isNote, isStaveNote, isTabNote } from './typeguard';\nimport { RuntimeError } from './util';\nexport class Stroke extends Modifier {\n    constructor(type, options) {\n        super();\n        this.options = Object.assign({ all_voices: true }, options);\n        // multi voice - span stroke across all voices if true\n        this.all_voices = this.options.all_voices;\n        // multi voice - end note of stroke, set in draw()\n        this.type = type;\n        this.position = Modifier.Position.LEFT;\n        this.render_options = {\n            font_scale: 38,\n        };\n        this.resetFont();\n        this.setXShift(0);\n        this.setWidth(10);\n    }\n    static get CATEGORY() {\n        return Category.Stroke;\n    }\n    // Arrange strokes inside `ModifierContext`\n    static format(strokes, state) {\n        const left_shift = state.left_shift;\n        const stroke_spacing = 0;\n        if (!strokes || strokes.length === 0)\n            return false;\n        const strokeList = strokes.map((stroke) => {\n            const note = stroke.getNote();\n            const index = stroke.checkIndex();\n            if (isStaveNote(note)) {\n                // Only StaveNote objects have getKeyProps().\n                const { line } = note.getKeyProps()[index];\n                const shift = note.getLeftDisplacedHeadPx();\n                return { line, shift, stroke };\n            }\n            else if (isTabNote(note)) {\n                // Only TabNote objects have getPositions().\n                const { str: string } = note.getPositions()[index];\n                return { line: string, shift: 0, stroke };\n            }\n            else {\n                throw new RuntimeError('Internal', 'Unexpected instance.');\n            }\n        });\n        const strokeShift = left_shift;\n        // There can only be one stroke .. if more than one, they overlay each other\n        const xShift = strokeList.reduce((xShift, { stroke, shift }) => {\n            stroke.setXShift(strokeShift + shift);\n            return Math.max(stroke.getWidth() + stroke_spacing, xShift);\n        }, 0);\n        state.left_shift += xShift;\n        return true;\n    }\n    getPosition() {\n        return this.position;\n    }\n    addEndNote(note) {\n        this.note_end = note;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(this.position, this.index);\n        let ys = note.getYs();\n        let topY = start.y;\n        let botY = start.y;\n        const x = start.x - 5;\n        const line_space = note.checkStave().getSpacingBetweenLines();\n        const notes = this.checkModifierContext().getMembers(note.getCategory());\n        for (let i = 0; i < notes.length; i++) {\n            const note = notes[i];\n            if (isNote(note)) {\n                // Only Note objects have getYs().\n                // note is an instance of either StaveNote or TabNote.\n                ys = note.getYs();\n                for (let n = 0; n < ys.length; n++) {\n                    if (this.note === notes[i] || this.all_voices) {\n                        topY = Math.min(topY, ys[n]);\n                        botY = Math.max(botY, ys[n]);\n                    }\n                }\n            }\n        }\n        let arrow = '';\n        let arrow_shift_x = 0;\n        let arrow_y = 0;\n        let text_shift_x = 0;\n        let text_y = 0;\n        switch (this.type) {\n            case Stroke.Type.BRUSH_DOWN:\n                arrow = 'arrowheadBlackUp';\n                arrow_shift_x = -3;\n                arrow_y = topY - line_space / 2 + 10;\n                botY += line_space / 2;\n                break;\n            case Stroke.Type.BRUSH_UP:\n                arrow = 'arrowheadBlackDown';\n                arrow_shift_x = 0.5;\n                arrow_y = botY + line_space / 2;\n                topY -= line_space / 2;\n                break;\n            case Stroke.Type.ROLL_DOWN:\n            case Stroke.Type.RASQUEDO_DOWN:\n                arrow = 'arrowheadBlackUp';\n                arrow_shift_x = -3;\n                text_shift_x = this.x_shift + arrow_shift_x - 2;\n                if (isStaveNote(note)) {\n                    topY += 1.5 * line_space;\n                    if ((botY - topY) % 2 !== 0) {\n                        botY += 0.5 * line_space;\n                    }\n                    else {\n                        botY += line_space;\n                    }\n                    arrow_y = topY - line_space;\n                    text_y = botY + line_space + 2;\n                }\n                else {\n                    topY += 1.5 * line_space;\n                    botY += line_space;\n                    arrow_y = topY - 0.75 * line_space;\n                    text_y = botY + 0.25 * line_space;\n                }\n                break;\n            case Stroke.Type.ROLL_UP:\n            case Stroke.Type.RASQUEDO_UP:\n                arrow = 'arrowheadBlackDown';\n                arrow_shift_x = -4;\n                text_shift_x = this.x_shift + arrow_shift_x - 1;\n                if (isStaveNote(note)) {\n                    arrow_y = line_space / 2;\n                    topY += 0.5 * line_space;\n                    if ((botY - topY) % 2 === 0) {\n                        botY += line_space / 2;\n                    }\n                    arrow_y = botY + 0.5 * line_space;\n                    text_y = topY - 1.25 * line_space;\n                }\n                else {\n                    topY += 0.25 * line_space;\n                    botY += 0.5 * line_space;\n                    arrow_y = botY + 0.25 * line_space;\n                    text_y = topY - line_space;\n                }\n                break;\n            case Stroke.Type.ARPEGGIO_DIRECTIONLESS:\n                topY += 0.5 * line_space;\n                botY += line_space; // * 0.5 can lead to slight underlap instead of overlap sometimes\n                break;\n            default:\n                throw new RuntimeError('InvalidType', `The stroke type ${this.type} does not exist`);\n        }\n        let strokeLine = 'straight';\n        // Draw the stroke\n        if (this.type === Stroke.Type.BRUSH_DOWN || this.type === Stroke.Type.BRUSH_UP) {\n            ctx.fillRect(x + this.x_shift, topY, 1, botY - topY);\n        }\n        else {\n            strokeLine = 'wiggly';\n            if (isStaveNote(note)) {\n                for (let i = topY; i <= botY; i += line_space) {\n                    Glyph.renderGlyph(ctx, x + this.x_shift - 4, i, this.render_options.font_scale, 'vexWiggleArpeggioUp');\n                }\n            }\n            else {\n                let i;\n                for (i = topY; i <= botY; i += 10) {\n                    Glyph.renderGlyph(ctx, x + this.x_shift - 4, i, this.render_options.font_scale, 'vexWiggleArpeggioUp');\n                }\n                if (this.type === Stroke.Type.RASQUEDO_DOWN) {\n                    text_y = i + 0.25 * line_space;\n                }\n            }\n        }\n        if (this.type === Stroke.Type.ARPEGGIO_DIRECTIONLESS) {\n            return; // skip drawing arrow heads or text\n        }\n        // Draw the arrow head\n        Glyph.renderGlyph(ctx, x + this.x_shift + arrow_shift_x, arrow_y, this.render_options.font_scale, arrow, {\n            category: `stroke.${arrow}.${strokeLine}`,\n        });\n        // Draw the rasquedo \"R\"\n        if (this.type === Stroke.Type.RASQUEDO_DOWN || this.type === Stroke.Type.RASQUEDO_UP) {\n            ctx.save();\n            ctx.setFont(this.textFont);\n            ctx.fillText('R', x + text_shift_x, text_y);\n            ctx.restore();\n        }\n    }\n}\nStroke.Type = {\n    BRUSH_DOWN: 1,\n    BRUSH_UP: 2,\n    ROLL_DOWN: 3,\n    ROLL_UP: 4,\n    RASQUEDO_DOWN: 5,\n    RASQUEDO_UP: 6,\n    ARPEGGIO_DIRECTIONLESS: 7, // Arpeggiated chord without upwards or downwards arrow\n};\nStroke.TEXT_FONT = {\n    family: Font.SERIF,\n    size: Font.SIZE,\n    weight: FontWeight.BOLD,\n    style: FontStyle.ITALIC,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Bend } from './bend';\nimport { Modifier } from './modifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\n/** `Vibrato` implements diverse vibratos. */\nexport class Vibrato extends Modifier {\n    constructor() {\n        super();\n        this.position = Modifier.Position.RIGHT;\n        this.render_options = {\n            harsh: false,\n            vibrato_width: 20,\n            wave_height: 6,\n            wave_width: 4,\n            wave_girth: 2,\n        };\n        this.setVibratoWidth(this.render_options.vibrato_width);\n    }\n    static get CATEGORY() {\n        return Category.Vibrato;\n    }\n    /** Arrange vibratos inside a `ModifierContext`. */\n    static format(vibratos, state, context) {\n        if (!vibratos || vibratos.length === 0)\n            return false;\n        // Vibratos are always on top.\n        let text_line = state.top_text_line;\n        let width = 0;\n        let shift = state.right_shift - 7;\n        // If there's a bend, drop the text line\n        const bends = context.getMembers(Bend.CATEGORY);\n        if (bends && bends.length > 0) {\n            const bendHeight = bends.map((bb) => bb.getTextHeight()).reduce((a, b) => (a > b ? a : b)) / Tables.STAVE_LINE_DISTANCE;\n            text_line = text_line - (bendHeight + 1);\n        }\n        else {\n            state.top_text_line += 1;\n        }\n        // Format Vibratos\n        for (let i = 0; i < vibratos.length; ++i) {\n            const vibrato = vibratos[i];\n            vibrato.setXShift(shift);\n            vibrato.setTextLine(text_line);\n            width += vibrato.getWidth();\n            shift += width;\n        }\n        state.right_shift += width;\n        return true;\n    }\n    /** Set harsh vibrato. */\n    setHarsh(harsh) {\n        this.render_options.harsh = harsh;\n        return this;\n    }\n    /** Set vibrato width in pixels. */\n    setVibratoWidth(width) {\n        this.render_options.vibrato_width = width;\n        this.setWidth(width);\n        return this;\n    }\n    /** Draw the vibrato on the rendering context. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(Modifier.Position.RIGHT, this.index);\n        const vx = start.x + this.x_shift;\n        const vy = note.getYForTopText(this.text_line) + 2;\n        Vibrato.renderVibrato(ctx, vx, vy, this.render_options);\n    }\n    /**\n     * Static rendering method that can be called from\n     * other classes (e.g. VibratoBracket).\n     */\n    static renderVibrato(ctx, x, y, opts) {\n        const { harsh, vibrato_width, wave_width, wave_girth, wave_height } = opts;\n        const num_waves = vibrato_width / wave_width;\n        ctx.beginPath();\n        let i;\n        if (harsh) {\n            ctx.moveTo(x, y + wave_girth + 1);\n            for (i = 0; i < num_waves / 2; ++i) {\n                ctx.lineTo(x + wave_width, y - wave_height / 2);\n                x += wave_width;\n                ctx.lineTo(x + wave_width, y + wave_height / 2);\n                x += wave_width;\n            }\n            for (i = 0; i < num_waves / 2; ++i) {\n                ctx.lineTo(x - wave_width, y - wave_height / 2 + wave_girth + 1);\n                x -= wave_width;\n                ctx.lineTo(x - wave_width, y + wave_height / 2 + wave_girth + 1);\n                x -= wave_width;\n            }\n            ctx.fill();\n        }\n        else {\n            ctx.moveTo(x, y + wave_girth);\n            for (i = 0; i < num_waves / 2; ++i) {\n                ctx.quadraticCurveTo(x + wave_width / 2, y - wave_height / 2, x + wave_width, y);\n                x += wave_width;\n                ctx.quadraticCurveTo(x + wave_width / 2, y + wave_height / 2, x + wave_width, y);\n                x += wave_width;\n            }\n            for (i = 0; i < num_waves / 2; ++i) {\n                ctx.quadraticCurveTo(x - wave_width / 2, y + wave_height / 2 + wave_girth, x - wave_width, y + wave_girth);\n                x -= wave_width;\n                ctx.quadraticCurveTo(x - wave_width / 2, y - wave_height / 2 + wave_girth, x - wave_width, y + wave_girth);\n                x -= wave_width;\n            }\n            ctx.fill();\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This class implements various types of members to notes (e.g. bends,\n// fingering positions etc.)\nimport { Accidental } from './accidental';\nimport { Annotation } from './annotation';\nimport { Articulation } from './articulation';\nimport { Bend } from './bend';\nimport { ChordSymbol } from './chordsymbol';\nimport { Dot } from './dot';\nimport { FretHandFinger } from './frethandfinger';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { NoteSubGroup } from './notesubgroup';\nimport { Ornament } from './ornament';\nimport { Parenthesis } from './parenthesis';\nimport { StaveNote } from './stavenote';\nimport { StringNumber } from './stringnumber';\nimport { Stroke } from './strokes';\nimport { Category } from './typeguard';\nimport { log, RuntimeError } from './util';\nimport { Vibrato } from './vibrato';\n// To enable logging for this class. Set `Vex.Flow.ModifierContext.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (ModifierContext.DEBUG)\n        log('Vex.Flow.ModifierContext', args);\n}\nexport class ModifierContext {\n    constructor() {\n        // Formatting data.\n        this.state = {\n            left_shift: 0,\n            right_shift: 0,\n            text_line: 0,\n            top_text_line: 0,\n        };\n        // Current members\n        this.members = {};\n        this.preFormatted = false;\n        this.postFormatted = false;\n        this.formatted = false;\n        this.width = 0;\n        this.spacing = 0;\n    }\n    addModifier(member) {\n        L('addModifier is deprecated, use addMember instead.');\n        return this.addMember(member);\n    }\n    /**\n     * this.members maps CATEGORY strings to arrays of Tickable | Modifier | StaveNote | TabNote.\n     * Here we add a new member to this.members, and create a new array if needed.\n     * @param member\n     * @returns this\n     */\n    addMember(member) {\n        const category = member.getCategory();\n        if (!this.members[category]) {\n            this.members[category] = [];\n        }\n        this.members[category].push(member);\n        member.setModifierContext(this);\n        this.preFormatted = false;\n        return this;\n    }\n    /**\n     * @deprecated\n     */\n    getModifiers(category) {\n        L('getModifiers is deprecated, use getMembers instead.');\n        return this.getMembers(category);\n    }\n    getMembers(category) {\n        var _a;\n        return (_a = this.members[category]) !== null && _a !== void 0 ? _a : [];\n    }\n    getWidth() {\n        return this.width;\n    }\n    getLeftShift() {\n        return this.state.left_shift;\n    }\n    getRightShift() {\n        return this.state.right_shift;\n    }\n    getState() {\n        return this.state;\n    }\n    getMetrics() {\n        if (!this.formatted) {\n            throw new RuntimeError('UnformattedMember', 'Unformatted member has no metrics.');\n        }\n        return {\n            width: this.state.left_shift + this.state.right_shift + this.spacing,\n            spacing: this.spacing,\n        };\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        L('Preformatting ModifierContext');\n        const state = this.state;\n        const members = this.members;\n        // The ordering below determines when different members are formatted and rendered.\n        StaveNote.format(members[Category.StaveNote], state);\n        Parenthesis.format(members[Category.Parenthesis], state);\n        Dot.format(members[Category.Dot], state);\n        FretHandFinger.format(members[Category.FretHandFinger], state);\n        Accidental.format(members[Category.Accidental], state);\n        Stroke.format(members[Category.Stroke], state);\n        GraceNoteGroup.format(members[Category.GraceNoteGroup], state);\n        NoteSubGroup.format(members[Category.NoteSubGroup], state);\n        StringNumber.format(members[Category.StringNumber], state);\n        Articulation.format(members[Category.Articulation], state);\n        Ornament.format(members[Category.Ornament], state);\n        Annotation.format(members[Category.Annotation], state);\n        ChordSymbol.format(members[Category.ChordSymbol], state);\n        Bend.format(members[Category.Bend], state);\n        Vibrato.format(members[Category.Vibrato], state, this);\n        // Update width of this member context\n        this.width = state.left_shift + state.right_shift;\n        this.preFormatted = true;\n    }\n    postFormat() {\n        if (this.postFormatted)\n            return;\n        L('Postformatting ModifierContext');\n        // If post-formatting is required for an element, add more lines below.\n        StaveNote.postFormat(this.getMembers(Category.StaveNote));\n    }\n}\nModifierContext.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna Cheppudira 2013.\n// Co-author: Benjamin W. Bohl\n// MIT License\nimport { Glyph } from './glyph';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Clef.DEBUG)\n        log('Vex.Flow.Clef', args);\n}\n/**\n * Clef implements various types of clefs that can be rendered on a stave.\n *\n * See `tests/clef_tests.ts` for usage examples.\n */\nexport class Clef extends StaveModifier {\n    /** Create a new clef. */\n    constructor(type, size, annotation) {\n        super();\n        /**\n         * The attribute `clef` must be a key from\n         * `Clef.types`\n         */\n        this.clef = Clef.types['treble'];\n        this.setPosition(StaveModifierPosition.BEGIN);\n        this.setType(type, size, annotation);\n        this.setWidth(Tables.currentMusicFont().lookupMetric(`clef.${this.size}.width`));\n        L('Creating clef:', type);\n    }\n    static get CATEGORY() {\n        return Category.Clef;\n    }\n    /**\n     * Every clef name is associated with a glyph code from the font file\n     * and a default stave line number.\n     */\n    static get types() {\n        return {\n            treble: {\n                code: 'gClef',\n                line: 3,\n                point: 0,\n            },\n            bass: {\n                code: 'fClef',\n                line: 1,\n                point: 0,\n            },\n            alto: {\n                code: 'cClef',\n                line: 2,\n                point: 0,\n            },\n            tenor: {\n                code: 'cClef',\n                line: 1,\n                point: 0,\n            },\n            percussion: {\n                code: 'restMaxima',\n                line: 2,\n                point: 0,\n            },\n            soprano: {\n                code: 'cClef',\n                line: 4,\n                point: 0,\n            },\n            'mezzo-soprano': {\n                code: 'cClef',\n                line: 3,\n                point: 0,\n            },\n            'baritone-c': {\n                code: 'cClef',\n                line: 0,\n                point: 0,\n            },\n            'baritone-f': {\n                code: 'fClef',\n                line: 2,\n                point: 0,\n            },\n            subbass: {\n                code: 'fClef',\n                line: 0,\n                point: 0,\n            },\n            french: {\n                code: 'gClef',\n                line: 4,\n                point: 0,\n            },\n            tab: {\n                code: '6stringTabClef',\n                point: 0,\n            },\n        };\n    }\n    /** Set clef type, size and annotation. */\n    setType(type, size, annotation) {\n        this.type = type;\n        this.clef = Clef.types[type];\n        if (size === undefined) {\n            this.size = 'default';\n        }\n        else {\n            this.size = size;\n        }\n        const musicFont = Tables.currentMusicFont();\n        this.clef.point = musicFont.lookupMetric(`clef.${this.size}.point`, 0);\n        this.glyph = new Glyph(this.clef.code, this.clef.point, {\n            category: `clef.${this.clef.code}.${this.size}`,\n        });\n        // If an annotation, such as 8va, is specified, add it to the Clef object.\n        if (annotation !== undefined) {\n            const code = musicFont.lookupMetric(`clef.annotations.${annotation}.smuflCode`);\n            const point = musicFont.lookupMetric(`clef.annotations.${annotation}.${this.size}.point`);\n            const line = musicFont.lookupMetric(`clef.annotations.${annotation}.${this.size}.${this.type}.line`);\n            const x_shift = musicFont.lookupMetric(`clef.annotations.${annotation}.${this.size}.${this.type}.shiftX`);\n            this.annotation = { code, point, line, x_shift };\n            this.attachment = new Glyph(this.annotation.code, this.annotation.point);\n            this.attachment.metrics.x_max = 0;\n            this.attachment.setXShift(this.annotation.x_shift);\n        }\n        else {\n            this.annotation = undefined;\n        }\n        return this;\n    }\n    /** Get clef width. */\n    getWidth() {\n        if (this.type === 'tab') {\n            defined(this.stave, 'ClefError', \"Can't get width without stave.\");\n        }\n        return this.width;\n    }\n    /** Set associated stave. */\n    setStave(stave) {\n        this.stave = stave;\n        if (this.type === 'tab') {\n            const glyph = defined(this.glyph, 'ClefError', \"Can't set stave without glyph.\");\n            const numLines = this.stave.getNumLines();\n            const musicFont = Tables.currentMusicFont();\n            const point = musicFont.lookupMetric(`clef.lineCount.${numLines}.point`);\n            const shiftY = musicFont.lookupMetric(`clef.lineCount.${numLines}.shiftY`);\n            glyph.setPoint(point);\n            glyph.setYShift(shiftY);\n        }\n        return this;\n    }\n    /** Render clef. */\n    draw() {\n        const glyph = defined(this.glyph, 'ClefError', \"Can't draw clef without glyph.\");\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        this.setRendered();\n        ctx.openGroup('clef', this.getAttribute('id'));\n        glyph.setStave(stave);\n        glyph.setContext(ctx);\n        if (this.clef.line !== undefined) {\n            this.placeGlyphOnLine(glyph, stave, this.clef.line);\n        }\n        glyph.renderToStave(this.x);\n        if (this.annotation !== undefined && this.attachment !== undefined) {\n            this.placeGlyphOnLine(this.attachment, stave, this.annotation.line);\n            this.attachment.setStave(stave);\n            this.attachment.setContext(ctx);\n            this.attachment.renderToStave(this.x);\n        }\n        ctx.closeGroup();\n    }\n}\n/** To enable logging for this class, set `Vex.Flow.Clef.DEBUG` to `true`. */\nClef.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// ## Description\n//\n// This file implements key signatures. A key signature sits on a stave\n// and indicates the notes with implicit accidentals.\nimport { Glyph } from './glyph';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined } from './util';\nexport class KeySignature extends StaveModifier {\n    // Create a new Key Signature based on a `key_spec`\n    constructor(keySpec, cancelKeySpec, alterKeySpec) {\n        super();\n        this.accList = [];\n        this.setKeySig(keySpec, cancelKeySpec, alterKeySpec);\n        this.setPosition(StaveModifierPosition.BEGIN);\n        this.glyphFontScale = 38; // TODO(0xFE): Should this match StaveNote?\n        this.glyphs = [];\n        this.xPositions = []; // relative to this.x\n        this.paddingForced = false;\n    }\n    static get CATEGORY() {\n        return Category.KeySignature;\n    }\n    // Add an accidental glyph to the `KeySignature` instance which represents\n    // the provided `acc`. If `nextAcc` is also provided, the appropriate\n    // spacing will be included in the glyph's position\n    convertToGlyph(acc, nextAcc) {\n        const accGlyphData = Tables.accidentalCodes(acc.type);\n        const glyph = new Glyph(accGlyphData.code, this.glyphFontScale);\n        // Determine spacing between current accidental and the next accidental\n        let extraWidth = 1;\n        if (acc.type === 'n' && nextAcc) {\n            const spacing = KeySignature.accidentalSpacing[nextAcc.type];\n            if (spacing) {\n                const isAbove = nextAcc.line >= acc.line;\n                extraWidth = isAbove ? spacing.above : spacing.below;\n            }\n        }\n        // Place the glyph on the stave\n        this.placeGlyphOnLine(glyph, this.checkStave(), acc.line);\n        this.glyphs.push(glyph);\n        const xPosition = this.xPositions[this.xPositions.length - 1];\n        const glyphWidth = glyph.getMetrics().width + extraWidth;\n        // Store the next accidental's x position\n        this.xPositions.push(xPosition + glyphWidth);\n        // Expand size of key signature\n        this.width += glyphWidth;\n    }\n    // Cancel out a key signature provided in the `spec` parameter. This will\n    // place appropriate natural accidentals before the key signature.\n    cancelKey(spec) {\n        this.formatted = false;\n        this.cancelKeySpec = spec;\n        return this;\n    }\n    convertToCancelAccList(spec) {\n        // Get the accidental list for the cancelled key signature\n        const cancel_accList = Tables.keySignature(spec);\n        // If the cancelled key has a different accidental type, ie: # vs b\n        const different_types = this.accList.length > 0 && cancel_accList.length > 0 && cancel_accList[0].type !== this.accList[0].type;\n        // Determine how many naturals needed to add\n        const naturals = different_types ? cancel_accList.length : cancel_accList.length - this.accList.length;\n        // Return if no naturals needed\n        if (naturals < 1)\n            return undefined;\n        // Get the line position for each natural\n        const cancelled = [];\n        for (let i = 0; i < naturals; i++) {\n            let index = i;\n            if (!different_types) {\n                index = cancel_accList.length - naturals + i;\n            }\n            const acc = cancel_accList[index];\n            cancelled.push({ type: 'n', line: acc.line });\n        }\n        // Combine naturals with main accidental list for the key signature\n        this.accList = cancelled.concat(this.accList);\n        return {\n            accList: cancelled,\n            type: cancel_accList[0].type,\n        };\n    }\n    // Deprecated\n    addToStave(stave) {\n        this.paddingForced = true;\n        stave.addModifier(this);\n        return this;\n    }\n    // Apply the accidental staff line placement based on the `clef` and\n    // the  accidental `type` for the key signature ('# or 'b').\n    convertAccLines(clef, type, accList = this.accList) {\n        let offset = 0.0; // if clef === \"treble\"\n        let customLines; // when clef doesn't follow treble key sig shape\n        switch (clef) {\n            // Treble & Subbass both have offsets of 0, so are not included.\n            case 'soprano':\n                if (type === '#')\n                    customLines = [2.5, 0.5, 2, 0, 1.5, -0.5, 1];\n                else\n                    offset = -1;\n                break;\n            case 'mezzo-soprano':\n                if (type === 'b')\n                    customLines = [0, 2, 0.5, 2.5, 1, 3, 1.5];\n                else\n                    offset = 1.5;\n                break;\n            case 'alto':\n                offset = 0.5;\n                break;\n            case 'tenor':\n                if (type === '#')\n                    customLines = [3, 1, 2.5, 0.5, 2, 0, 1.5];\n                else\n                    offset = -0.5;\n                break;\n            case 'baritone-f':\n            case 'baritone-c':\n                if (type === 'b')\n                    customLines = [0.5, 2.5, 1, 3, 1.5, 3.5, 2];\n                else\n                    offset = 2;\n                break;\n            case 'bass':\n            case 'french':\n                offset = 1;\n                break;\n            default:\n                break;\n        }\n        // If there's a special case, assign those lines/spaces:\n        let i;\n        if (typeof customLines !== 'undefined') {\n            for (i = 0; i < accList.length; ++i) {\n                accList[i].line = customLines[i];\n            }\n        }\n        else if (offset !== 0) {\n            for (i = 0; i < accList.length; ++i) {\n                accList[i].line += offset;\n            }\n        }\n    }\n    getPadding(index) {\n        if (!this.formatted)\n            this.format();\n        return this.glyphs.length === 0 || (!this.paddingForced && index < 2) ? 0 : this.padding;\n    }\n    getWidth() {\n        if (!this.formatted)\n            this.format();\n        return this.width;\n    }\n    setKeySig(keySpec, cancelKeySpec, alterKeySpec) {\n        this.formatted = false;\n        this.keySpec = keySpec;\n        this.cancelKeySpec = cancelKeySpec;\n        this.alterKeySpec = alterKeySpec;\n        return this;\n    }\n    // Alter the accidentals of a key spec one by one.\n    // Each alteration is a new accidental that replaces the\n    // original accidental (or the canceled one).\n    alterKey(alterKeySpec) {\n        this.formatted = false;\n        this.alterKeySpec = alterKeySpec;\n        return this;\n    }\n    convertToAlterAccList(alterKeySpec) {\n        const max = Math.min(alterKeySpec.length, this.accList.length);\n        for (let i = 0; i < max; ++i) {\n            if (alterKeySpec[i]) {\n                this.accList[i].type = alterKeySpec[i];\n            }\n        }\n    }\n    format() {\n        const stave = this.checkStave();\n        this.width = 0;\n        this.glyphs = [];\n        this.xPositions = [0]; // initialize with initial x position\n        this.accList = Tables.keySignature(defined(this.keySpec));\n        const accList = this.accList;\n        const firstAccidentalType = accList.length > 0 ? accList[0].type : undefined;\n        let cancelAccList;\n        if (this.cancelKeySpec) {\n            cancelAccList = this.convertToCancelAccList(this.cancelKeySpec);\n        }\n        if (this.alterKeySpec) {\n            this.convertToAlterAccList(this.alterKeySpec);\n        }\n        if (this.accList.length > 0) {\n            const clef = (this.position === StaveModifierPosition.END ? stave.getEndClef() : stave.getClef()) || stave.getClef();\n            if (cancelAccList) {\n                this.convertAccLines(clef, cancelAccList.type, cancelAccList.accList);\n            }\n            this.convertAccLines(clef, firstAccidentalType, accList);\n            for (let i = 0; i < this.accList.length; ++i) {\n                this.convertToGlyph(this.accList[i], this.accList[i + 1]);\n            }\n        }\n        this.formatted = true;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        if (!this.formatted)\n            this.format();\n        this.setRendered();\n        ctx.openGroup('keysignature', this.getAttribute('id'));\n        for (let i = 0; i < this.glyphs.length; i++) {\n            const glyph = this.glyphs[i];\n            const x = this.x + this.xPositions[i];\n            glyph.setStave(stave);\n            glyph.setContext(ctx);\n            glyph.renderToStave(x);\n        }\n        ctx.closeGroup();\n    }\n}\n// Space between natural and following accidental depending\n// on vertical position\nKeySignature.accidentalSpacing = {\n    '#': {\n        above: 6,\n        below: 4,\n    },\n    b: {\n        above: 4,\n        below: 7,\n    },\n    n: {\n        above: 4,\n        below: 1,\n    },\n    '##': {\n        above: 6,\n        below: 4,\n    },\n    bb: {\n        above: 4,\n        below: 7,\n    },\n    db: {\n        above: 4,\n        below: 7,\n    },\n    d: {\n        above: 4,\n        below: 7,\n    },\n    bbs: {\n        above: 4,\n        below: 7,\n    },\n    '++': {\n        above: 6,\n        below: 4,\n    },\n    '+': {\n        above: 6,\n        below: 4,\n    },\n    '+-': {\n        above: 6,\n        below: 4,\n    },\n    '++-': {\n        above: 6,\n        below: 4,\n    },\n    bs: {\n        above: 4,\n        below: 10,\n    },\n    bss: {\n        above: 4,\n        below: 10,\n    },\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { StaveModifier } from './stavemodifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nexport class Repetition extends StaveModifier {\n    constructor(type, x, y_shift) {\n        super();\n        this.symbol_type = type;\n        this.x = x;\n        this.x_shift = 0;\n        this.y_shift = y_shift;\n        this.resetFont();\n    }\n    static get CATEGORY() {\n        return Category.Repetition;\n    }\n    setShiftX(x) {\n        this.x_shift = x;\n        return this;\n    }\n    setShiftY(y) {\n        this.y_shift = y;\n        return this;\n    }\n    draw(stave, x) {\n        this.setRendered();\n        switch (this.symbol_type) {\n            case Repetition.type.CODA_RIGHT:\n                this.drawCodaFixed(stave, x + stave.getWidth());\n                break;\n            case Repetition.type.CODA_LEFT:\n                this.drawSymbolText(stave, x, 'Coda', true);\n                break;\n            case Repetition.type.SEGNO_LEFT:\n                this.drawSignoFixed(stave, x);\n                break;\n            case Repetition.type.SEGNO_RIGHT:\n                this.drawSignoFixed(stave, x + stave.getWidth());\n                break;\n            case Repetition.type.DC:\n                this.drawSymbolText(stave, x, 'D.C.', false);\n                break;\n            case Repetition.type.DC_AL_CODA:\n                this.drawSymbolText(stave, x, 'D.C. al', true);\n                break;\n            case Repetition.type.DC_AL_FINE:\n                this.drawSymbolText(stave, x, 'D.C. al Fine', false);\n                break;\n            case Repetition.type.DS:\n                this.drawSymbolText(stave, x, 'D.S.', false);\n                break;\n            case Repetition.type.DS_AL_CODA:\n                this.drawSymbolText(stave, x, 'D.S. al', true);\n                break;\n            case Repetition.type.DS_AL_FINE:\n                this.drawSymbolText(stave, x, 'D.S. al Fine', false);\n                break;\n            case Repetition.type.FINE:\n                this.drawSymbolText(stave, x, 'Fine', false);\n                break;\n            case Repetition.type.TO_CODA:\n                this.drawSymbolText(stave, x, 'To', true);\n                break;\n            default:\n                break;\n        }\n        return this;\n    }\n    drawCodaFixed(stave, x) {\n        const y = stave.getYForTopText(stave.getNumLines()) + this.y_shift;\n        Glyph.renderGlyph(stave.checkContext(), this.x + x + this.x_shift, y + Tables.currentMusicFont().lookupMetric('staveRepetition.coda.offsetY'), 40, 'coda', { category: 'coda' });\n        return this;\n    }\n    drawSignoFixed(stave, x) {\n        const y = stave.getYForTopText(stave.getNumLines()) + this.y_shift;\n        Glyph.renderGlyph(stave.checkContext(), this.x + x + this.x_shift, y + Tables.currentMusicFont().lookupMetric('staveRepetition.segno.offsetY'), 30, 'segno', { category: 'segno' });\n        return this;\n    }\n    drawSymbolText(stave, x, text, draw_coda) {\n        const ctx = stave.checkContext();\n        ctx.save();\n        ctx.setFont(this.textFont);\n        let text_x = 0;\n        let symbol_x = 0;\n        const modifierWidth = stave.getNoteStartX() - this.x;\n        switch (this.symbol_type) {\n            // To the left with symbol\n            case Repetition.type.CODA_LEFT:\n                // Offset Coda text to right of stave beginning\n                text_x = this.x + stave.getVerticalBarWidth();\n                symbol_x =\n                    text_x +\n                        ctx.measureText(text).width +\n                        Tables.currentMusicFont().lookupMetric('staveRepetition.symbolText.offsetX');\n                break;\n            // To the right without symbol\n            case Repetition.type.DC:\n            case Repetition.type.DC_AL_FINE:\n            case Repetition.type.DS:\n            case Repetition.type.DS_AL_FINE:\n            case Repetition.type.FINE:\n                text_x =\n                    this.x +\n                        x +\n                        this.x_shift +\n                        stave.getWidth() -\n                        Tables.currentMusicFont().lookupMetric('staveRepetition.symbolText.spacing') -\n                        modifierWidth -\n                        ctx.measureText(text).width;\n                break;\n            // To the right with symbol\n            default:\n                text_x =\n                    this.x +\n                        x +\n                        this.x_shift +\n                        stave.getWidth() -\n                        Tables.currentMusicFont().lookupMetric('staveRepetition.symbolText.spacing') -\n                        modifierWidth -\n                        ctx.measureText(text).width -\n                        Tables.currentMusicFont().lookupMetric('staveRepetition.symbolText.offsetX');\n                symbol_x =\n                    text_x +\n                        ctx.measureText(text).width +\n                        Tables.currentMusicFont().lookupMetric('staveRepetition.symbolText.offsetX');\n                break;\n        }\n        const y = stave.getYForTopText(stave.getNumLines()) +\n            this.y_shift +\n            Tables.currentMusicFont().lookupMetric('staveRepetition.symbolText.offsetY');\n        if (draw_coda) {\n            Glyph.renderGlyph(ctx, symbol_x, y, 40, 'coda', { category: 'coda' });\n        }\n        ctx.fillText(text, text_x, y + 5);\n        ctx.restore();\n        return this;\n    }\n}\nRepetition.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 12,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n};\nRepetition.type = {\n    NONE: 1,\n    CODA_LEFT: 2,\n    CODA_RIGHT: 3,\n    SEGNO_LEFT: 4,\n    SEGNO_RIGHT: 5,\n    DC: 6,\n    DC_AL_CODA: 7,\n    DC_AL_FINE: 8,\n    DS: 9,\n    DS_AL_CODA: 10,\n    DS_AL_FINE: 11,\n    FINE: 12,\n    TO_CODA: 13, // To Coda at end of stave\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\nimport { Font, FontStyle, FontWeight } from './font';\nimport { StaveModifier } from './stavemodifier';\nimport { Category } from './typeguard';\nexport class StaveSection extends StaveModifier {\n    constructor(section, x, shift_y, drawRect = true) {\n        super();\n        this.setWidth(16);\n        this.section = section;\n        this.x = x;\n        this.shift_x = 0;\n        this.shift_y = shift_y;\n        this.drawRect = drawRect;\n        this.resetFont();\n    }\n    static get CATEGORY() {\n        return Category.StaveSection;\n    }\n    setStaveSection(section) {\n        this.section = section;\n        return this;\n    }\n    setShiftX(x) {\n        this.shift_x = x;\n        return this;\n    }\n    setShiftY(y) {\n        this.shift_y = y;\n        return this;\n    }\n    draw(stave, shift_x) {\n        const ctx = stave.checkContext();\n        this.setRendered();\n        ctx.save();\n        ctx.setLineWidth(2);\n        ctx.setFont(this.textFont);\n        const paddingX = 2;\n        const paddingY = 2;\n        const rectWidth = 2;\n        const textMeasurements = ctx.measureText(this.section);\n        const textWidth = textMeasurements.width;\n        const textHeight = textMeasurements.height;\n        const width = textWidth + 2 * paddingX; // add left & right padding\n        const height = textHeight + 2 * paddingY; // add top & bottom padding\n        //  Seems to be a good default y\n        const y = stave.getYForTopText(1.5) + this.shift_y;\n        const x = this.x + shift_x;\n        if (this.drawRect) {\n            ctx.beginPath();\n            ctx.setLineWidth(rectWidth);\n            ctx.rect(x, y + textMeasurements.y - paddingY, width, height);\n            ctx.stroke();\n        }\n        ctx.fillText(this.section, x + paddingX, y);\n        ctx.restore();\n        return this;\n    }\n}\nStaveSection.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: 10,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Radosaw Eichler 2012\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nexport class StaveTempo extends StaveModifier {\n    constructor(tempo, x, shift_y) {\n        super();\n        /** Font size for note. */\n        this.render_options = { glyph_font_scale: 30 };\n        this.tempo = tempo;\n        this.position = StaveModifierPosition.ABOVE;\n        this.x = x;\n        this.shift_x = 10;\n        this.shift_y = shift_y;\n        this.resetFont();\n    }\n    static get CATEGORY() {\n        return Category.StaveTempo;\n    }\n    setTempo(tempo) {\n        this.tempo = tempo;\n        return this;\n    }\n    setShiftX(x) {\n        this.shift_x = x;\n        return this;\n    }\n    setShiftY(y) {\n        this.shift_y = y;\n        return this;\n    }\n    draw(stave, shift_x) {\n        const ctx = stave.checkContext();\n        this.setRendered();\n        const options = this.render_options;\n        // FIXME: What does the '38' mean? Why 38? Is that supposed to\n        // be the default font size for standard notation?\n        const scale = options.glyph_font_scale / 38;\n        const name = this.tempo.name;\n        const duration = this.tempo.duration;\n        const dots = this.tempo.dots || 0;\n        const bpm = this.tempo.bpm;\n        let x = this.x + this.shift_x + shift_x;\n        const y = stave.getYForTopText(1) + this.shift_y;\n        ctx.save();\n        if (name) {\n            ctx.setFont(this.textFont);\n            ctx.fillText(name, x, y);\n            x += ctx.measureText(name).width;\n        }\n        if (duration && bpm) {\n            // Override the weight and style.\n            ctx.setFont(Object.assign(Object.assign({}, this.textFont), { weight: 'normal', style: 'normal' }));\n            if (name) {\n                x += ctx.measureText(' ').width;\n                ctx.fillText('(', x, y);\n                x += ctx.measureText('(').width;\n            }\n            const code = Tables.getGlyphProps(duration);\n            x += 3 * scale;\n            Glyph.renderGlyph(ctx, x, y, options.glyph_font_scale, code.code_head);\n            x += code.getWidth() * scale;\n            // Draw stem and flags\n            if (code.stem) {\n                let stem_height = 30;\n                if (code.beam_count)\n                    stem_height += 3 * (code.beam_count - 1);\n                stem_height *= scale;\n                const y_top = y - stem_height;\n                ctx.fillRect(x - scale, y_top, scale, stem_height);\n                if (code.flag) {\n                    Glyph.renderGlyph(ctx, x, y_top, options.glyph_font_scale, code.code_flag_upstem, {\n                        category: 'flag.staveTempo',\n                    });\n                    if (!dots)\n                        x += 6 * scale;\n                }\n            }\n            // Draw dot\n            for (let i = 0; i < dots; i++) {\n                x += 6 * scale;\n                ctx.beginPath();\n                ctx.arc(x, y + 2 * scale, 2 * scale, 0, Math.PI * 2, false);\n                ctx.fill();\n            }\n            ctx.fillText(' = ' + bpm + (name ? ')' : ''), x + 3 * scale, y);\n        }\n        ctx.restore();\n        return this;\n    }\n}\nStaveTempo.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 14,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\nimport { Font, FontStyle, FontWeight } from './font';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { TextJustification, TextNote } from './textnote';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class StaveText extends StaveModifier {\n    constructor(text, position, options = {}) {\n        super();\n        this.setWidth(16);\n        this.text = text;\n        this.position = position;\n        this.options = Object.assign({ shift_x: 0, shift_y: 0, justification: TextNote.Justification.CENTER }, options);\n        this.resetFont();\n    }\n    static get CATEGORY() {\n        return Category.StaveText;\n    }\n    setStaveText(text) {\n        this.text = text;\n        return this;\n    }\n    setShiftX(x) {\n        this.shift_x = x;\n        return this;\n    }\n    setShiftY(y) {\n        this.shift_y = y;\n        return this;\n    }\n    setText(text) {\n        this.text = text;\n        return this;\n    }\n    draw(stave) {\n        const ctx = stave.checkContext();\n        this.setRendered();\n        ctx.save();\n        ctx.setLineWidth(2);\n        ctx.setFont(this.textFont);\n        const text_width = ctx.measureText('' + this.text).width;\n        let x;\n        let y;\n        switch (this.position) {\n            case StaveModifierPosition.LEFT:\n            case StaveModifierPosition.RIGHT:\n                y = (stave.getYForLine(0) + stave.getBottomLineY()) / 2 + this.options.shift_y;\n                if (this.position === StaveModifierPosition.LEFT) {\n                    x = stave.getX() - text_width - 24 + this.options.shift_x;\n                }\n                else {\n                    x = stave.getX() + stave.getWidth() + 24 + this.options.shift_x;\n                }\n                break;\n            case StaveModifierPosition.ABOVE:\n            case StaveModifierPosition.BELOW:\n                x = stave.getX() + this.options.shift_x;\n                if (this.options.justification === TextJustification.CENTER) {\n                    x += stave.getWidth() / 2 - text_width / 2;\n                }\n                else if (this.options.justification === TextJustification.RIGHT) {\n                    x += stave.getWidth() - text_width;\n                }\n                if (this.position === StaveModifierPosition.ABOVE) {\n                    y = stave.getYForTopText(2) + this.options.shift_y;\n                }\n                else {\n                    y = stave.getYForBottomText(2) + this.options.shift_y;\n                }\n                break;\n            default:\n                throw new RuntimeError('InvalidPosition', 'Value Must be in Modifier.Position.');\n        }\n        ctx.fillText('' + this.text, x, y + 4);\n        ctx.restore();\n        return this;\n    }\n}\nStaveText.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 16,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.NORMAL,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Renders time signatures glyphs for staffs\n// This class is used by TimeSignature to render the associated glyphs\nimport { Glyph } from './glyph';\nimport { defined } from './util';\nexport class TimeSignatureGlyph extends Glyph {\n    constructor(timeSignature, topDigits, botDigits, code, point, options) {\n        var _a;\n        super(code, point, options);\n        this.timeSignature = timeSignature;\n        this.topGlyphs = [];\n        this.botGlyphs = [];\n        let topWidth = 0;\n        for (let i = 0; i < topDigits.length; ++i) {\n            let timeSigType = topDigits[i];\n            switch (topDigits[i]) {\n                case '-':\n                    timeSigType = 'Minus';\n                    break;\n                case '+':\n                    timeSigType = botDigits.length > 0 ? 'PlusSmall' : 'Plus';\n                    break;\n                case '(':\n                    timeSigType = botDigits.length > 0 ? 'ParensLeftSmall' : 'ParensLeft';\n                    break;\n                case ')':\n                    timeSigType = botDigits.length > 0 ? 'ParensRightSmall' : 'ParensRight';\n                    break;\n            }\n            const topGlyph = new Glyph('timeSig' + timeSigType, this.timeSignature.point);\n            this.topGlyphs.push(topGlyph);\n            topWidth += (_a = topGlyph.getMetrics().width) !== null && _a !== void 0 ? _a : 0;\n        }\n        let botWidth = 0;\n        for (let i = 0; i < botDigits.length; ++i) {\n            let timeSigType = botDigits[i];\n            switch (botDigits[i]) {\n                case '+':\n                    timeSigType = 'PlusSmall';\n                    break;\n                case '(':\n                    timeSigType = 'ParensLeftSmall';\n                    break;\n                case ')':\n                    timeSigType = 'ParensRightSmall';\n                    break;\n            }\n            const botGlyph = new Glyph('timeSig' + timeSigType, this.timeSignature.point);\n            this.botGlyphs.push(botGlyph);\n            botWidth += defined(botGlyph.getMetrics().width);\n        }\n        this.width = Math.max(topWidth, botWidth);\n        this.xMin = this.getMetrics().x_min;\n        this.topStartX = (this.width - topWidth) / 2.0;\n        this.botStartX = (this.width - botWidth) / 2.0;\n        this.reset();\n    }\n    getMetrics() {\n        return {\n            x_min: this.xMin,\n            x_max: this.xMin + this.width,\n            width: this.width,\n        };\n    }\n    renderToStave(x) {\n        const stave = this.checkStave();\n        const ctx = this.checkContext();\n        let start_x = x + this.topStartX;\n        let y = 0;\n        if (this.botGlyphs.length > 0)\n            y = stave.getYForLine(this.timeSignature.topLine);\n        else\n            y = (stave.getYForLine(this.timeSignature.topLine) + stave.getYForLine(this.timeSignature.bottomLine)) / 2;\n        for (let i = 0; i < this.topGlyphs.length; ++i) {\n            const glyph = this.topGlyphs[i];\n            Glyph.renderOutline(ctx, glyph.getMetrics().outline, this.scale, start_x + this.x_shift, y);\n            start_x += defined(glyph.getMetrics().width);\n        }\n        start_x = x + this.botStartX;\n        y = stave.getYForLine(this.timeSignature.bottomLine);\n        for (let i = 0; i < this.botGlyphs.length; ++i) {\n            const glyph = this.botGlyphs[i];\n            this.timeSignature.placeGlyphOnLine(glyph, stave, 0);\n            Glyph.renderOutline(ctx, glyph.getMetrics().outline, this.scale, start_x + glyph.getMetrics().x_shift, y);\n            start_x += defined(glyph.getMetrics().width);\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Implements time signatures glyphs for staffs\n// See tables.js for the internal time signatures\n// representation\nimport { Glyph } from './glyph';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { TimeSignatureGlyph } from './timesigglyph';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\nconst assertIsValidTimeSig = (timeSpec) => {\n    const numbers = timeSpec.split('/');\n    if (numbers.length !== 2 && numbers[0] !== '+' && numbers[0] !== '-') {\n        throw new RuntimeError('BadTimeSignature', `Invalid time spec: ${timeSpec}. Must be in the form \"<numerator>/<denominator>\"`);\n    }\n    numbers.forEach((number) => {\n        // Characters consisting in number 0..9, '+', '-', '(' or ')'\n        if (/^[0-9+\\-()]+$/.test(number) == false) {\n            throw new RuntimeError('BadTimeSignature', `Invalid time spec: ${timeSpec}. Must contain valid signatures.`);\n        }\n    });\n};\nexport class TimeSignature extends StaveModifier {\n    constructor(timeSpec = '4/4', customPadding = 15, validate_args = true) {\n        super();\n        this.validate_args = validate_args;\n        const padding = customPadding;\n        const musicFont = Tables.currentMusicFont();\n        this.point = musicFont.lookupMetric('digits.point');\n        const fontLineShift = musicFont.lookupMetric('digits.shiftLine', 0);\n        this.topLine = 2 + fontLineShift;\n        this.bottomLine = 4 + fontLineShift;\n        this.setPosition(StaveModifierPosition.BEGIN);\n        this.info = this.parseTimeSpec(timeSpec);\n        this.setWidth(defined(this.info.glyph.getMetrics().width));\n        this.setPadding(padding);\n    }\n    static get CATEGORY() {\n        return Category.TimeSignature;\n    }\n    static get glyphs() {\n        return {\n            C: {\n                code: 'timeSigCommon',\n                point: 40,\n                line: 2,\n            },\n            'C|': {\n                code: 'timeSigCutCommon',\n                point: 40,\n                line: 2,\n            },\n        };\n    }\n    parseTimeSpec(timeSpec) {\n        var _a, _b;\n        if (timeSpec === 'C' || timeSpec === 'C|') {\n            const { line, code, point } = TimeSignature.glyphs[timeSpec];\n            return {\n                line,\n                num: false,\n                glyph: new Glyph(code, point),\n            };\n        }\n        if (this.validate_args) {\n            assertIsValidTimeSig(timeSpec);\n        }\n        const parts = timeSpec.split('/');\n        return {\n            num: true,\n            glyph: this.makeTimeSignatureGlyph((_a = parts[0]) !== null && _a !== void 0 ? _a : '', (_b = parts[1]) !== null && _b !== void 0 ? _b : ''),\n        };\n    }\n    makeTimeSignatureGlyph(topDigits, botDigits) {\n        return new TimeSignatureGlyph(this, topDigits, botDigits, 'timeSig0', this.point);\n    }\n    getInfo() {\n        return this.info;\n    }\n    setTimeSig(timeSpec) {\n        this.info = this.parseTimeSpec(timeSpec);\n        return this;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        this.setRendered();\n        ctx.openGroup('timesignature', this.getAttribute('id'));\n        this.info.glyph.setStave(stave);\n        this.info.glyph.setContext(ctx);\n        this.placeGlyphOnLine(this.info.glyph, stave, this.info.line);\n        this.info.glyph.renderToStave(this.x);\n        ctx.closeGroup();\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { BoundingBox } from './boundingbox';\nimport { Clef } from './clef';\nimport { Element } from './element';\nimport { Font, FontStyle, FontWeight } from './font';\nimport { KeySignature } from './keysignature';\nimport { Barline, BarlineType } from './stavebarline';\nimport { StaveModifierPosition } from './stavemodifier';\nimport { Repetition } from './staverepetition';\nimport { StaveSection } from './stavesection';\nimport { StaveTempo } from './stavetempo';\nimport { StaveText } from './stavetext';\nimport { Volta } from './stavevolta';\nimport { Tables } from './tables';\nimport { TimeSignature } from './timesignature';\nimport { Category, isBarline } from './typeguard';\nimport { RuntimeError } from './util';\n// Used by Stave.format() to sort the modifiers at the beginning and end of a stave.\n// The keys (computed property names) match the CATEGORY property in the\n// Barline, Clef, KeySignature, TimeSignature classes.\nconst SORT_ORDER_BEG_MODIFIERS = {\n    [Barline.CATEGORY]: 0,\n    [Clef.CATEGORY]: 1,\n    [KeySignature.CATEGORY]: 2,\n    [TimeSignature.CATEGORY]: 3,\n};\nconst SORT_ORDER_END_MODIFIERS = {\n    [TimeSignature.CATEGORY]: 0,\n    [KeySignature.CATEGORY]: 1,\n    [Barline.CATEGORY]: 2,\n    [Clef.CATEGORY]: 3,\n};\nexport class Stave extends Element {\n    constructor(x, y, width, options) {\n        super();\n        // Initialized by the constructor via this.resetLines().\n        this.height = 0;\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.formatted = false;\n        this.start_x = x + 5;\n        this.end_x = x + width;\n        this.modifiers = []; // stave modifiers (clef, key, time, barlines, coda, segno, etc.)\n        this.measure = 0;\n        this.clef = 'treble';\n        this.endClef = undefined;\n        this.resetFont();\n        this.options = Object.assign({ vertical_bar_width: 10, num_lines: 5, fill_style: '#999999', left_bar: true, right_bar: true, spacing_between_lines_px: Tables.STAVE_LINE_DISTANCE, space_above_staff_ln: 4, space_below_staff_ln: 4, top_text_position: 1, bottom_text_position: 4, line_config: [] }, options);\n        this.bounds = { x: this.x, y: this.y, w: this.width, h: 0 };\n        this.defaultLedgerLineStyle = { strokeStyle: '#444', lineWidth: 1.4 };\n        this.resetLines();\n        // beg bar\n        this.addModifier(new Barline(this.options.left_bar ? BarlineType.SINGLE : BarlineType.NONE));\n        // end bar\n        this.addEndModifier(new Barline(this.options.right_bar ? BarlineType.SINGLE : BarlineType.NONE));\n    }\n    static get CATEGORY() {\n        return Category.Stave;\n    }\n    // This is the sum of the padding that normally goes on left + right of a stave during\n    // drawing. Used to size staves correctly with content width.\n    static get defaultPadding() {\n        const musicFont = Tables.currentMusicFont();\n        return musicFont.lookupMetric('stave.padding') + musicFont.lookupMetric('stave.endPaddingMax');\n    }\n    // Right padding, used by system if startX is already determined.\n    static get rightPadding() {\n        const musicFont = Tables.currentMusicFont();\n        return musicFont.lookupMetric('stave.endPaddingMax');\n    }\n    /** Set default style for ledger lines. */\n    setDefaultLedgerLineStyle(style) {\n        this.defaultLedgerLineStyle = style;\n    }\n    /** Get default style for ledger lines. */\n    getDefaultLedgerLineStyle() {\n        return Object.assign(Object.assign({}, this.getStyle()), this.defaultLedgerLineStyle);\n    }\n    space(spacing) {\n        return this.options.spacing_between_lines_px * spacing;\n    }\n    resetLines() {\n        this.options.line_config = [];\n        for (let i = 0; i < this.options.num_lines; i++) {\n            this.options.line_config.push({ visible: true });\n        }\n        this.height = (this.options.num_lines + this.options.space_above_staff_ln) * this.options.spacing_between_lines_px;\n        this.options.bottom_text_position = this.options.num_lines;\n    }\n    setNoteStartX(x) {\n        if (!this.formatted)\n            this.format();\n        this.start_x = x;\n        return this;\n    }\n    getNoteStartX() {\n        if (!this.formatted)\n            this.format();\n        return this.start_x;\n    }\n    getNoteEndX() {\n        if (!this.formatted)\n            this.format();\n        return this.end_x;\n    }\n    getTieStartX() {\n        return this.start_x;\n    }\n    getTieEndX() {\n        return this.end_x;\n    }\n    getX() {\n        return this.x;\n    }\n    getNumLines() {\n        return this.options.num_lines;\n    }\n    setNumLines(n) {\n        this.options.num_lines = n;\n        this.resetLines();\n        return this;\n    }\n    setY(y) {\n        this.y = y;\n        return this;\n    }\n    getY() {\n        return this.y;\n    }\n    getTopLineTopY() {\n        return this.getYForLine(0) - Tables.STAVE_LINE_THICKNESS / 2;\n    }\n    getBottomLineBottomY() {\n        return this.getYForLine(this.getNumLines() - 1) + Tables.STAVE_LINE_THICKNESS / 2;\n    }\n    setX(x) {\n        const shift = x - this.x;\n        this.formatted = false;\n        this.x = x;\n        this.start_x += shift;\n        this.end_x += shift;\n        for (let i = 0; i < this.modifiers.length; i++) {\n            const mod = this.modifiers[i];\n            mod.setX(mod.getX() + shift);\n        }\n        return this;\n    }\n    setWidth(width) {\n        this.formatted = false;\n        this.width = width;\n        this.end_x = this.x + width;\n        // reset the x position of the end barline (TODO(0xfe): This makes no sense)\n        // this.modifiers[1].setX(this.end_x);\n        return this;\n    }\n    getWidth() {\n        return this.width;\n    }\n    getStyle() {\n        return Object.assign({ fillStyle: this.options.fill_style, strokeStyle: this.options.fill_style, lineWidth: Tables.STAVE_LINE_THICKNESS }, this.style);\n    }\n    setMeasure(measure) {\n        this.measure = measure;\n        return this;\n    }\n    /**\n     * Gets the pixels to shift from the beginning of the stave\n     * following the modifier at the provided index\n     * @param  {Number} index The index from which to determine the shift\n     * @return {Number}       The amount of pixels shifted\n     */\n    getModifierXShift(index = 0) {\n        if (typeof index !== 'number') {\n            throw new RuntimeError('InvalidIndex', 'Must be of number type');\n        }\n        if (!this.formatted)\n            this.format();\n        if (this.getModifiers(StaveModifierPosition.BEGIN).length === 1) {\n            return 0;\n        }\n        // for right position modifiers zero shift seems correct, see 'Volta + Modifier Measure Test'\n        if (this.modifiers[index].getPosition() === StaveModifierPosition.RIGHT) {\n            return 0;\n        }\n        let start_x = this.start_x - this.x;\n        const begBarline = this.modifiers[0];\n        if (begBarline.getType() === BarlineType.REPEAT_BEGIN && start_x > begBarline.getWidth()) {\n            start_x -= begBarline.getWidth();\n        }\n        return start_x;\n    }\n    /** Coda & Segno Symbol functions */\n    setRepetitionType(type, yShift = 0) {\n        this.modifiers.push(new Repetition(type, this.x, yShift));\n        return this;\n    }\n    // Volta functions\n    setVoltaType(type, number_t, y) {\n        this.modifiers.push(new Volta(type, number_t, this.x, y));\n        return this;\n    }\n    // Section functions\n    setSection(section, y, xOffset = 0, fontSize, drawRect = true) {\n        const staveSection = new StaveSection(section, this.x + xOffset, y, drawRect);\n        if (fontSize)\n            staveSection.setFontSize(fontSize);\n        this.modifiers.push(staveSection);\n        return this;\n    }\n    // Tempo functions\n    setTempo(tempo, y) {\n        this.modifiers.push(new StaveTempo(tempo, this.x, y));\n        return this;\n    }\n    // Text functions\n    setText(text, position, options = {}) {\n        this.modifiers.push(new StaveText(text, position, options));\n        return this;\n    }\n    getHeight() {\n        return this.height;\n    }\n    getSpacingBetweenLines() {\n        return this.options.spacing_between_lines_px;\n    }\n    getBoundingBox() {\n        return new BoundingBox(this.x, this.y, this.width, this.getBottomY() - this.y);\n    }\n    getBottomY() {\n        const options = this.options;\n        const spacing = options.spacing_between_lines_px;\n        const score_bottom = this.getYForLine(options.num_lines) + options.space_below_staff_ln * spacing;\n        return score_bottom;\n    }\n    getBottomLineY() {\n        return this.getYForLine(this.options.num_lines);\n    }\n    // This returns\n    /** @returns the y for the *center* of a staff line */\n    getYForLine(line) {\n        const options = this.options;\n        const spacing = options.spacing_between_lines_px;\n        const headroom = options.space_above_staff_ln;\n        const y = this.y + line * spacing + headroom * spacing;\n        return y;\n    }\n    getLineForY(y) {\n        // Does the reverse of getYForLine - somewhat dumb and just calls\n        // getYForLine until the right value is reaches\n        const options = this.options;\n        const spacing = options.spacing_between_lines_px;\n        const headroom = options.space_above_staff_ln;\n        return (y - this.y) / spacing - headroom;\n    }\n    getYForTopText(line = 0) {\n        return this.getYForLine(-line - this.options.top_text_position);\n    }\n    getYForBottomText(line = 0) {\n        return this.getYForLine(this.options.bottom_text_position + line);\n    }\n    getYForNote(line) {\n        const options = this.options;\n        const spacing = options.spacing_between_lines_px;\n        const headroom = options.space_above_staff_ln;\n        return this.y + headroom * spacing + 5 * spacing - line * spacing;\n    }\n    getYForGlyphs() {\n        return this.getYForLine(3);\n    }\n    // This method adds a stave modifier to the stave. Note that the first two\n    // modifiers (BarLines) are automatically added upon construction.\n    addModifier(modifier, position) {\n        if (position !== undefined) {\n            modifier.setPosition(position);\n        }\n        modifier.setStave(this);\n        this.formatted = false;\n        this.modifiers.push(modifier);\n        return this;\n    }\n    addEndModifier(modifier) {\n        this.addModifier(modifier, StaveModifierPosition.END);\n        return this;\n    }\n    // Bar Line functions\n    setBegBarType(type) {\n        // Only valid bar types at beginning of stave is none, single or begin repeat\n        const { SINGLE, REPEAT_BEGIN, NONE } = BarlineType;\n        if (type === SINGLE || type === REPEAT_BEGIN || type === NONE) {\n            this.modifiers[0].setType(type);\n            this.formatted = false;\n        }\n        return this;\n    }\n    setEndBarType(type) {\n        // Repeat end not valid at end of stave\n        if (type !== BarlineType.REPEAT_BEGIN) {\n            this.modifiers[1].setType(type);\n            this.formatted = false;\n        }\n        return this;\n    }\n    setClef(clefSpec, size, annotation, position) {\n        if (position === undefined) {\n            position = StaveModifierPosition.BEGIN;\n        }\n        if (position === StaveModifierPosition.END) {\n            this.endClef = clefSpec;\n        }\n        else {\n            this.clef = clefSpec;\n        }\n        const clefs = this.getModifiers(position, Clef.CATEGORY);\n        if (clefs.length === 0) {\n            this.addClef(clefSpec, size, annotation, position);\n        }\n        else {\n            clefs[0].setType(clefSpec, size, annotation);\n        }\n        return this;\n    }\n    getClef() {\n        return this.clef;\n    }\n    setEndClef(clefSpec, size, annotation) {\n        this.setClef(clefSpec, size, annotation, StaveModifierPosition.END);\n        return this;\n    }\n    getEndClef() {\n        return this.endClef;\n    }\n    setKeySignature(keySpec, cancelKeySpec, position) {\n        if (position === undefined) {\n            position = StaveModifierPosition.BEGIN;\n        }\n        const keySignatures = this.getModifiers(position, KeySignature.CATEGORY);\n        if (keySignatures.length === 0) {\n            this.addKeySignature(keySpec, cancelKeySpec, position);\n        }\n        else {\n            keySignatures[0].setKeySig(keySpec, cancelKeySpec);\n        }\n        return this;\n    }\n    setEndKeySignature(keySpec, cancelKeySpec) {\n        this.setKeySignature(keySpec, cancelKeySpec, StaveModifierPosition.END);\n        return this;\n    }\n    setTimeSignature(timeSpec, customPadding, position) {\n        if (position === undefined) {\n            position = StaveModifierPosition.BEGIN;\n        }\n        const timeSignatures = this.getModifiers(position, TimeSignature.CATEGORY);\n        if (timeSignatures.length === 0) {\n            this.addTimeSignature(timeSpec, customPadding, position);\n        }\n        else {\n            timeSignatures[0].setTimeSig(timeSpec);\n        }\n        return this;\n    }\n    setEndTimeSignature(timeSpec, customPadding) {\n        this.setTimeSignature(timeSpec, customPadding, StaveModifierPosition.END);\n        return this;\n    }\n    /**\n     * Add a key signature to the stave.\n     *\n     * Example:\n     * `stave.addKeySignature('Db');`\n     * @param keySpec new key specification `[A-G][b|#]?`\n     * @param cancelKeySpec\n     * @param position\n     * @returns\n     */\n    addKeySignature(keySpec, cancelKeySpec, position) {\n        if (position === undefined) {\n            position = StaveModifierPosition.BEGIN;\n        }\n        this.addModifier(new KeySignature(keySpec, cancelKeySpec).setPosition(position), position);\n        return this;\n    }\n    /**\n     * Add a clef to the stave.\n     *\n     * Example:\n     *\n     * stave.addClef('treble')\n     * @param clef clef (treble|bass|...) see {@link Clef.types}\n     * @param size\n     * @param annotation\n     * @param position\n     * @returns\n     */\n    addClef(clef, size, annotation, position) {\n        if (position === undefined || position === StaveModifierPosition.BEGIN) {\n            this.clef = clef;\n        }\n        else if (position === StaveModifierPosition.END) {\n            this.endClef = clef;\n        }\n        this.addModifier(new Clef(clef, size, annotation), position);\n        return this;\n    }\n    addEndClef(clef, size, annotation) {\n        this.addClef(clef, size, annotation, StaveModifierPosition.END);\n        return this;\n    }\n    /**\n     * Add a time signature to the stave\n     *\n     * Example:\n     *\n     * `stave.addTimeSignature('4/4');`\n     * @param timeSpec time signature specification `(C\\||C|\\d\\/\\d)`\n     * @param customPadding\n     * @param position\n     * @returns\n     */\n    addTimeSignature(timeSpec, customPadding, position) {\n        this.addModifier(new TimeSignature(timeSpec, customPadding), position);\n        return this;\n    }\n    addEndTimeSignature(timeSpec, customPadding) {\n        this.addTimeSignature(timeSpec, customPadding, StaveModifierPosition.END);\n        return this;\n    }\n    // Deprecated\n    addTrebleGlyph() {\n        this.addClef('treble');\n        return this;\n    }\n    /**\n     * @param position\n     * @param category\n     * @returns array of StaveModifiers that match the provided position and category.\n     */\n    getModifiers(position, category) {\n        const noPosition = position === undefined;\n        const noCategory = category === undefined;\n        if (noPosition && noCategory) {\n            return this.modifiers;\n        }\n        else if (noPosition) {\n            // A category was provided.\n            return this.modifiers.filter((m) => category === m.getCategory());\n        }\n        else if (noCategory) {\n            // A position was provided.\n            return this.modifiers.filter((m) => position === m.getPosition());\n        }\n        else {\n            // Both position and category were provided!\n            return this.modifiers.filter((m) => position === m.getPosition() && category === m.getCategory());\n        }\n    }\n    /**\n     * Use the modifier's `getCategory()` as a key for the `order` array.\n     * The retrieved value is used to sort modifiers from left to right (0 to to 3).\n     */\n    sortByCategory(items, order) {\n        for (let i = items.length - 1; i >= 0; i--) {\n            for (let j = 0; j < i; j++) {\n                if (order[items[j].getCategory()] > order[items[j + 1].getCategory()]) {\n                    const temp = items[j];\n                    items[j] = items[j + 1];\n                    items[j + 1] = temp;\n                }\n            }\n        }\n    }\n    format() {\n        const begBarline = this.modifiers[0];\n        const endBarline = this.modifiers[1];\n        const begModifiers = this.getModifiers(StaveModifierPosition.BEGIN);\n        const endModifiers = this.getModifiers(StaveModifierPosition.END);\n        this.sortByCategory(begModifiers, SORT_ORDER_BEG_MODIFIERS);\n        this.sortByCategory(endModifiers, SORT_ORDER_END_MODIFIERS);\n        if (begModifiers.length > 1 && begBarline.getType() === BarlineType.REPEAT_BEGIN) {\n            begModifiers.push(begModifiers.splice(0, 1)[0]);\n            begModifiers.splice(0, 0, new Barline(BarlineType.SINGLE));\n        }\n        if (endModifiers.indexOf(endBarline) > 0) {\n            endModifiers.splice(0, 0, new Barline(BarlineType.NONE));\n        }\n        let width;\n        let padding;\n        let modifier;\n        let offset = 0;\n        let x = this.x;\n        for (let i = 0; i < begModifiers.length; i++) {\n            modifier = begModifiers[i];\n            padding = modifier.getPadding(i + offset);\n            width = modifier.getWidth();\n            x += padding;\n            modifier.setX(x);\n            x += width;\n            if (padding + width === 0)\n                offset--;\n        }\n        this.start_x = x;\n        x = this.x + this.width;\n        const widths = {\n            left: 0,\n            right: 0,\n            paddingRight: 0,\n            paddingLeft: 0,\n        };\n        let lastBarlineIdx = 0;\n        for (let i = 0; i < endModifiers.length; i++) {\n            modifier = endModifiers[i];\n            lastBarlineIdx = isBarline(modifier) ? i : lastBarlineIdx;\n            widths.right = 0;\n            widths.left = 0;\n            widths.paddingRight = 0;\n            widths.paddingLeft = 0;\n            const layoutMetrics = modifier.getLayoutMetrics();\n            if (layoutMetrics) {\n                if (i !== 0) {\n                    widths.right = layoutMetrics.xMax || 0;\n                    widths.paddingRight = layoutMetrics.paddingRight || 0;\n                }\n                widths.left = -layoutMetrics.xMin || 0;\n                widths.paddingLeft = layoutMetrics.paddingLeft || 0;\n                if (i === endModifiers.length - 1) {\n                    widths.paddingLeft = 0;\n                }\n            }\n            else {\n                widths.paddingRight = modifier.getPadding(i - lastBarlineIdx);\n                if (i !== 0) {\n                    widths.right = modifier.getWidth();\n                }\n                if (i === 0) {\n                    widths.left = modifier.getWidth();\n                }\n            }\n            x -= widths.paddingRight;\n            x -= widths.right;\n            modifier.setX(x);\n            x -= widths.left;\n            x -= widths.paddingLeft;\n        }\n        this.end_x = endModifiers.length === 1 ? this.x + this.width : x;\n        this.formatted = true;\n    }\n    /**\n     * All drawing functions below need the context to be set.\n     */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        ctx.openGroup('stave', this.getAttribute('id'));\n        if (!this.formatted)\n            this.format();\n        const num_lines = this.options.num_lines;\n        const width = this.width;\n        const x = this.x;\n        let y;\n        // Render lines\n        for (let line = 0; line < num_lines; line++) {\n            y = this.getYForLine(line);\n            this.applyStyle();\n            if (this.options.line_config[line].visible) {\n                ctx.beginPath();\n                ctx.moveTo(x, y);\n                ctx.lineTo(x + width, y);\n                ctx.stroke();\n            }\n            this.restoreStyle();\n        }\n        // Draw the modifiers (bar lines, coda, segno, repeat brackets, etc.)\n        for (let i = 0; i < this.modifiers.length; i++) {\n            const modifier = this.modifiers[i];\n            // Only draw modifier if it has a draw function\n            if (typeof modifier.draw === 'function') {\n                modifier.applyStyle(ctx);\n                modifier.draw(this, this.getModifierXShift(i));\n                modifier.restoreStyle(ctx);\n            }\n        }\n        // Render measure numbers\n        if (this.measure > 0) {\n            ctx.save();\n            ctx.setFont(this.textFont);\n            const textWidth = ctx.measureText('' + this.measure).width;\n            y = this.getYForTopText(0) + 3;\n            ctx.fillText('' + this.measure, this.x - textWidth / 2, y);\n            ctx.restore();\n        }\n        ctx.closeGroup();\n        return this;\n    }\n    getVerticalBarWidth() {\n        return this.options.vertical_bar_width;\n    }\n    /**\n     * Get the current configuration for the Stave.\n     * @return {Array} An array of configuration objects.\n     */\n    getConfigForLines() {\n        return this.options.line_config;\n    }\n    /**\n     * Configure properties of the lines in the Stave\n     * @param line_number The index of the line to configure.\n     * @param line_config An configuration object for the specified line.\n     * @throws RuntimeError \"StaveConfigError\" When the specified line number is out of\n     *   range of the number of lines specified in the constructor.\n     */\n    setConfigForLine(line_number, line_config) {\n        if (line_number >= this.options.num_lines || line_number < 0) {\n            throw new RuntimeError('StaveConfigError', 'The line number must be within the range of the number of lines in the Stave.');\n        }\n        if (line_config.visible === undefined) {\n            throw new RuntimeError('StaveConfigError', \"The line configuration object is missing the 'visible' property.\");\n        }\n        if (typeof line_config.visible !== 'boolean') {\n            throw new RuntimeError('StaveConfigError', \"The line configuration objects 'visible' property must be true or false.\");\n        }\n        this.options.line_config[line_number] = line_config;\n        return this;\n    }\n    /**\n     * Set the staff line configuration array for all of the lines at once.\n     * @param lines_configuration An array of line configuration objects.  These objects\n     *   are of the same format as the single one passed in to setLineConfiguration().\n     *   The caller can set null for any line config entry if it is desired that the default be used\n     * @throws RuntimeError \"StaveConfigError\" When the lines_configuration array does not have\n     *   exactly the same number of elements as the num_lines configuration object set in\n     *   the constructor.\n     */\n    setConfigForLines(lines_configuration) {\n        if (lines_configuration.length !== this.options.num_lines) {\n            throw new RuntimeError('StaveConfigError', 'The length of the lines configuration array must match the number of lines in the Stave');\n        }\n        // Make sure the defaults are present in case an incomplete set of\n        //  configuration options were supplied.\n        // eslint-disable-next-line\n        for (const line_config in lines_configuration) {\n            // Allow '{}' to be used if the caller just wants the default for a particular node.\n            if (lines_configuration[line_config].visible == undefined) {\n                lines_configuration[line_config] = this.options.line_config[line_config];\n            }\n            this.options.line_config[line_config] = Object.assign(Object.assign({}, this.options.line_config[line_config]), lines_configuration[line_config]);\n        }\n        this.options.line_config = lines_configuration;\n        return this;\n    }\n    static formatBegModifiers(staves) {\n        let maxX = 0;\n        // align note start\n        staves.forEach((stave) => {\n            if (stave.getNoteStartX() > maxX)\n                maxX = stave.getNoteStartX();\n        });\n        staves.forEach((stave) => {\n            stave.setNoteStartX(maxX);\n        });\n        maxX = 0;\n        // align REPEAT_BEGIN\n        staves.forEach((stave) => {\n            const modifiers = stave.getModifiers(StaveModifierPosition.BEGIN, Category.Barline);\n            modifiers.forEach((modifier) => {\n                if (modifier.getType() == BarlineType.REPEAT_BEGIN)\n                    if (modifier.getX() > maxX)\n                        maxX = modifier.getX();\n            });\n        });\n        staves.forEach((stave) => {\n            const modifiers = stave.getModifiers(StaveModifierPosition.BEGIN, Category.Barline);\n            modifiers.forEach((modifier) => {\n                if (modifier.getType() == BarlineType.REPEAT_BEGIN)\n                    modifier.setX(maxX);\n            });\n        });\n        maxX = 0;\n        // Align time signatures\n        staves.forEach((stave) => {\n            const modifiers = stave.getModifiers(StaveModifierPosition.BEGIN, Category.TimeSignature);\n            modifiers.forEach((modifier) => {\n                if (modifier.getX() > maxX)\n                    maxX = modifier.getX();\n            });\n        });\n        staves.forEach((stave) => {\n            const modifiers = stave.getModifiers(StaveModifierPosition.BEGIN, Category.TimeSignature);\n            modifiers.forEach((modifier) => {\n                modifier.setX(maxX);\n            });\n        });\n    }\n}\nStave.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: 8,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.NORMAL,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nfunction drawBoldDoubleLine(ctx, type, topX, topY, botY) {\n    if (type !== StaveConnector.type.BOLD_DOUBLE_LEFT && type !== StaveConnector.type.BOLD_DOUBLE_RIGHT) {\n        throw new RuntimeError('InvalidConnector', 'A REPEAT_BEGIN or REPEAT_END type must be provided.');\n    }\n    let x_shift = 3;\n    let variableWidth = 3.5; // Width for avoiding anti-aliasing width issues\n    const thickLineOffset = 2; // For aesthetics\n    if (type === StaveConnector.type.BOLD_DOUBLE_RIGHT) {\n        x_shift = -5; // Flips the side of the thin line\n        variableWidth = 3;\n    }\n    // Thin line\n    ctx.fillRect(topX + x_shift, topY, 1, botY - topY);\n    // Thick line\n    ctx.fillRect(topX - thickLineOffset, topY, variableWidth, botY - topY);\n}\n/** StaveConnector implements the connector lines between staves of a system. */\nexport class StaveConnector extends Element {\n    constructor(top_stave, bottom_stave) {\n        super();\n        this.thickness = Tables.STAVE_LINE_THICKNESS;\n        this.width = 3;\n        this.top_stave = top_stave;\n        this.bottom_stave = bottom_stave;\n        this.type = StaveConnector.type.DOUBLE;\n        this.resetFont();\n        // 1. Offset Bold Double Left to align with offset Repeat Begin bars\n        // 2. Offset BRACE type not to overlap with another StaveConnector\n        this.x_shift = 0;\n        this.texts = [];\n    }\n    static get CATEGORY() {\n        return Category.StaveConnector;\n    }\n    /**\n     * Set type.\n     * @param type see {@link StaveConnector.type} & {@link StaveConnector.typeString}\n     */\n    setType(type) {\n        const newType = typeof type === 'string' ? StaveConnector.typeString[type] : type;\n        // Be certain that the type is a valid type:\n        if (Object.values(StaveConnector.type).includes(newType)) {\n            this.type = newType;\n        }\n        return this;\n    }\n    /**\n     * Get type.\n     * @returns number {@link StaveConnector.type}\n     */\n    getType() {\n        return this.type;\n    }\n    /** Set optional associated Text. */\n    setText(text, options = {}) {\n        this.texts.push({\n            content: text,\n            options: Object.assign({ shift_x: 0, shift_y: 0 }, options),\n        });\n        return this;\n    }\n    setXShift(x_shift) {\n        if (typeof x_shift !== 'number') {\n            throw new RuntimeError('InvalidType', 'x_shift must be a Number');\n        }\n        this.x_shift = x_shift;\n        return this;\n    }\n    getXShift() {\n        return this.x_shift;\n    }\n    /** Render connector and associated text. */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        let topY = this.top_stave.getYForLine(0);\n        let botY = this.bottom_stave.getYForLine(this.bottom_stave.getNumLines() - 1) + this.thickness;\n        let width = this.width;\n        let topX = this.top_stave.getX();\n        const isRightSidedConnector = this.type === StaveConnector.type.SINGLE_RIGHT ||\n            this.type === StaveConnector.type.BOLD_DOUBLE_RIGHT ||\n            this.type === StaveConnector.type.THIN_DOUBLE;\n        if (isRightSidedConnector) {\n            topX = this.top_stave.getX() + this.top_stave.getWidth();\n        }\n        let attachment_height = botY - topY;\n        switch (this.type) {\n            case StaveConnector.type.SINGLE:\n                width = 1;\n                break;\n            case StaveConnector.type.SINGLE_LEFT:\n                width = 1;\n                break;\n            case StaveConnector.type.SINGLE_RIGHT:\n                width = 1;\n                break;\n            case StaveConnector.type.DOUBLE:\n                topX -= this.width + 2;\n                topY -= this.thickness;\n                attachment_height += 0.5;\n                break;\n            case StaveConnector.type.BRACE: {\n                width = 12;\n                // May need additional code to draw brace\n                const x1 = this.top_stave.getX() - 2 + this.x_shift;\n                const y1 = topY;\n                const x3 = x1;\n                const y3 = botY;\n                const x2 = x1 - width;\n                const y2 = y1 + attachment_height / 2.0;\n                const cpx1 = x2 - 0.9 * width;\n                const cpy1 = y1 + 0.2 * attachment_height;\n                const cpx2 = x1 + 1.1 * width;\n                const cpy2 = y2 - 0.135 * attachment_height;\n                const cpx3 = cpx2;\n                const cpy3 = y2 + 0.135 * attachment_height;\n                const cpx4 = cpx1;\n                const cpy4 = y3 - 0.2 * attachment_height;\n                const cpx5 = x2 - width;\n                const cpy5 = cpy4;\n                const cpx6 = x1 + 0.4 * width;\n                const cpy6 = y2 + 0.135 * attachment_height;\n                const cpx7 = cpx6;\n                const cpy7 = y2 - 0.135 * attachment_height;\n                const cpx8 = cpx5;\n                const cpy8 = cpy1;\n                ctx.beginPath();\n                ctx.moveTo(x1, y1);\n                ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n                ctx.bezierCurveTo(cpx3, cpy3, cpx4, cpy4, x3, y3);\n                ctx.bezierCurveTo(cpx5, cpy5, cpx6, cpy6, x2, y2);\n                ctx.bezierCurveTo(cpx7, cpy7, cpx8, cpy8, x1, y1);\n                ctx.fill();\n                ctx.stroke();\n                break;\n            }\n            case StaveConnector.type.BRACKET:\n                topY -= 6;\n                botY += 6;\n                attachment_height = botY - topY;\n                Glyph.renderGlyph(ctx, topX - 5, topY, 40, 'bracketTop');\n                Glyph.renderGlyph(ctx, topX - 5, botY, 40, 'bracketBottom');\n                topX -= this.width + 2;\n                break;\n            case StaveConnector.type.BOLD_DOUBLE_LEFT:\n                drawBoldDoubleLine(ctx, this.type, topX + this.x_shift, topY, botY - this.thickness);\n                break;\n            case StaveConnector.type.BOLD_DOUBLE_RIGHT:\n                drawBoldDoubleLine(ctx, this.type, topX, topY, botY - this.thickness);\n                break;\n            case StaveConnector.type.THIN_DOUBLE:\n                width = 1;\n                attachment_height -= this.thickness;\n                break;\n            case StaveConnector.type.NONE:\n                break;\n            default:\n                throw new RuntimeError('InvalidType', `The provided StaveConnector.type (${this.type}) is invalid.`);\n        }\n        if (this.type !== StaveConnector.type.BRACE &&\n            this.type !== StaveConnector.type.BOLD_DOUBLE_LEFT &&\n            this.type !== StaveConnector.type.BOLD_DOUBLE_RIGHT &&\n            this.type !== StaveConnector.type.NONE) {\n            ctx.fillRect(topX, topY, width, attachment_height);\n        }\n        // If the connector is a thin double barline, draw the paralell line\n        if (this.type === StaveConnector.type.THIN_DOUBLE) {\n            ctx.fillRect(topX - 3, topY, width, attachment_height);\n        }\n        ctx.save();\n        ctx.setLineWidth(2);\n        ctx.setFont(this.textFont);\n        // Add stave connector text\n        for (let i = 0; i < this.texts.length; i++) {\n            const text = this.texts[i];\n            const text_width = ctx.measureText('' + text.content).width;\n            const x = this.top_stave.getX() - text_width - 24 + text.options.shift_x;\n            const y = (this.top_stave.getYForLine(0) + this.bottom_stave.getBottomLineY()) / 2 + text.options.shift_y;\n            ctx.fillText('' + text.content, x, y + 4);\n        }\n        ctx.restore();\n    }\n}\nStaveConnector.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 16,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.NORMAL,\n};\n/**\n * SINGLE_LEFT and SINGLE are the same value for compatibility\n * with older versions of vexflow which didn't have right sided\n * stave connectors.\n */\nStaveConnector.type = {\n    SINGLE_RIGHT: 0,\n    SINGLE_LEFT: 1,\n    SINGLE: 1,\n    DOUBLE: 2,\n    BRACE: 3,\n    BRACKET: 4,\n    BOLD_DOUBLE_LEFT: 5,\n    BOLD_DOUBLE_RIGHT: 6,\n    THIN_DOUBLE: 7,\n    NONE: 8,\n};\n/**\n * Connector type:\n * * \"singleRight\"\n * * \"singleLeft\"\n * * \"single\"\n * * \"double\"\n * * \"brace\"\n * * \"bracket\"\n * * \"boldDoubleLeft\"\n * * \"boldDoubleRight\"\n * * \"thinDouble\"\n * * \"none\"\n */\nStaveConnector.typeString = {\n    singleRight: StaveConnector.type.SINGLE_RIGHT,\n    singleLeft: StaveConnector.type.SINGLE_LEFT,\n    single: StaveConnector.type.SINGLE,\n    double: StaveConnector.type.DOUBLE,\n    brace: StaveConnector.type.BRACE,\n    bracket: StaveConnector.type.BRACKET,\n    boldDoubleLeft: StaveConnector.type.BOLD_DOUBLE_LEFT,\n    boldDoubleRight: StaveConnector.type.BOLD_DOUBLE_RIGHT,\n    thinDouble: StaveConnector.type.THIN_DOUBLE,\n    none: StaveConnector.type.NONE,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Beam } from './beam';\nimport { Font } from './font';\nimport { Fraction } from './fraction';\nimport { ModifierContext } from './modifiercontext';\nimport { Stave } from './stave';\nimport { StaveConnector } from './staveconnector';\nimport { Tables } from './tables';\nimport { TickContext } from './tickcontext';\nimport { isNote, isStaveNote } from './typeguard';\nimport { defined, log, midLine, RuntimeError } from './util';\nimport { Voice } from './voice';\n// Helper function\nconst sumArray = (arr) => arr.reduce((a, b) => a + b, 0);\n/**\n * Create `Alignment`s for each tick in `voices`. Also calculate the\n * total number of ticks in voices.\n */\nfunction createContexts(voices, makeContext, addToContext) {\n    const resolutionMultiplier = Formatter.getResolutionMultiplier(voices);\n    // Initialize tick maps.\n    const tickToContextMap = {};\n    const tickList = [];\n    const contexts = [];\n    // For each voice, extract notes and create a context for every\n    // new tick that hasn't been seen before.\n    voices.forEach((voice, voiceIndex) => {\n        // Use resolution multiplier as denominator so that no additional expansion\n        // of fractional tick values is needed.\n        const ticksUsed = new Fraction(0, resolutionMultiplier);\n        voice.getTickables().forEach((tickable) => {\n            const integerTicks = ticksUsed.numerator;\n            // If we have no tick context for this tick, create one.\n            if (!tickToContextMap[integerTicks]) {\n                const newContext = makeContext({ tickID: integerTicks });\n                contexts.push(newContext);\n                tickToContextMap[integerTicks] = newContext;\n                // Maintain a list of unique integerTicks.\n                tickList.push(integerTicks);\n            }\n            // Add this tickable to the TickContext.\n            addToContext(tickable, tickToContextMap[integerTicks], voiceIndex);\n            ticksUsed.add(tickable.getTicks());\n        });\n    });\n    return {\n        map: tickToContextMap,\n        array: contexts,\n        list: tickList.sort((a, b) => a - b),\n        resolutionMultiplier,\n    };\n}\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Formatter.DEBUG)\n        log('Vex.Flow.Formatter', args);\n}\n/**\n * Get the rest line number of the next non-rest note(s).\n * @param notes array of Notes\n * @param currRestLine\n * @param currNoteIndex current note index\n * @param compare if true, return the midpoint between the current rest line and the next rest line\n * @returns a line number, which determines the vertical position of a rest.\n */\nfunction getRestLineForNextNoteGroup(notes, currRestLine, currNoteIndex, compare) {\n    // If no valid next note group, nextRestLine is same as current.\n    let nextRestLine = currRestLine;\n    // Start with the next note and keep going until we find a valid non-rest note group.\n    for (let noteIndex = currNoteIndex + 1; noteIndex < notes.length; noteIndex++) {\n        const note = notes[noteIndex];\n        if (isNote(note) && !note.isRest() && !note.shouldIgnoreTicks()) {\n            nextRestLine = note.getLineForRest();\n            break;\n        }\n    }\n    // Locate the mid point between two lines.\n    if (compare && currRestLine !== nextRestLine) {\n        const top = Math.max(currRestLine, nextRestLine);\n        const bot = Math.min(currRestLine, nextRestLine);\n        nextRestLine = midLine(top, bot);\n    }\n    return nextRestLine;\n}\n/**\n * Format implements the formatting and layout algorithms that are used\n * to position notes in a voice. The algorithm can align multiple voices both\n * within a stave, and across multiple staves.\n *\n * To do this, the formatter breaks up voices into a grid of rational-valued\n * `ticks`, to which each note is assigned. Then, minimum widths are assigned\n * to each tick based on the widths of the notes and modifiers in that tick. This\n * establishes the smallest amount of space required for each tick.\n *\n * Finally, the formatter distributes the left over space proportionally to\n * all the ticks, setting the `x` values of the notes in each tick.\n *\n * See `tests/formatter_tests.ts` for usage examples. The helper functions included\n * here (`FormatAndDraw`, `FormatAndDrawTab`) also serve as useful usage examples.\n */\nexport class Formatter {\n    constructor(options) {\n        this.formatterOptions = Object.assign({ globalSoftmax: false, softmaxFactor: Tables.SOFTMAX_FACTOR, maxIterations: 5 }, options);\n        this.justifyWidth = 0;\n        this.totalCost = 0;\n        this.totalShift = 0;\n        this.durationStats = {};\n        // Minimum width required to render all the notes in the voices.\n        this.minTotalWidth = 0;\n        // This is set to `true` after `minTotalWidth` is calculated.\n        this.hasMinTotalWidth = false;\n        // Arrays of tick and modifier contexts.\n        this.tickContexts = undefined;\n        this.modifierContexts = undefined;\n        // Gaps between contexts, for free movement of notes post\n        // formatting.\n        this.contextGaps = {\n            total: 0,\n            gaps: [],\n        };\n        this.voices = [];\n        this.lossHistory = [];\n    }\n    /**\n     * Helper function to layout \"notes\" one after the other without\n     * regard for proportions. Useful for tests and debugging.\n     */\n    static SimpleFormat(notes, x = 0, { paddingBetween = 10 } = {}) {\n        notes.reduce((accumulator, note) => {\n            note.addToModifierContext(new ModifierContext());\n            const tick = new TickContext().addTickable(note).preFormat();\n            const metrics = tick.getMetrics();\n            tick.setX(accumulator + metrics.totalLeftPx);\n            return accumulator + tick.getWidth() + metrics.totalRightPx + paddingBetween;\n        }, x);\n    }\n    /** Helper function to plot formatter debug info. */\n    static plotDebugging(ctx, formatter, xPos, y1, y2, options) {\n        options = Object.assign({ stavePadding: Tables.currentMusicFont().lookupMetric('stave.padding') }, options);\n        const x = xPos + options.stavePadding;\n        const contextGaps = formatter.contextGaps;\n        function stroke(x1, x2, color) {\n            ctx.beginPath();\n            ctx.setStrokeStyle(color);\n            ctx.setFillStyle(color);\n            ctx.setLineWidth(1);\n            ctx.fillRect(x1, y1, Math.max(x2 - x1, 0), y2 - y1);\n        }\n        ctx.save();\n        ctx.setFont(Font.SANS_SERIF, 8);\n        contextGaps.gaps.forEach((gap) => {\n            stroke(x + gap.x1, x + gap.x2, 'rgba(100,200,100,0.4)');\n            ctx.setFillStyle('green');\n            ctx.fillText(Math.round(gap.x2 - gap.x1).toString(), x + gap.x1, y2 + 12);\n        });\n        ctx.setFillStyle('red');\n        ctx.fillText(`Loss: ${(formatter.totalCost || 0).toFixed(2)} Shift: ${(formatter.totalShift || 0).toFixed(2)} Gap: ${contextGaps.total.toFixed(2)}`, x - 20, y2 + 27);\n        ctx.restore();\n    }\n    /**\n     * Helper function to format and draw a single voice. Returns a bounding\n     * box for the notation.\n     * @param ctx  the rendering context\n     * @param stave the stave to which to draw (`Stave` or `TabStave`)\n     * @param notes array of `Note` instances (`Note`, `TextNote`, `TabNote`, etc.)\n     * @param params one of below:\n     *    * Setting `autobeam` only `(context, stave, notes, true)` or\n     *      `(ctx, stave, notes, {autobeam: true})`\n     *    * Setting `align_rests` a struct is needed `(context, stave, notes, {align_rests: true})`\n     *    * Setting both a struct is needed `(context, stave, notes, {\n     *      autobeam: true, align_rests: true})`\n     *    * `autobeam` automatically generates beams for the notes.\n     *    * `align_rests` aligns rests with nearby notes.\n     */\n    static FormatAndDraw(ctx, stave, notes, params) {\n        let options = {\n            auto_beam: false,\n            align_rests: false,\n        };\n        if (typeof params === 'object') {\n            options = Object.assign(Object.assign({}, options), params);\n        }\n        else if (typeof params === 'boolean') {\n            options.auto_beam = params;\n        }\n        // Start by creating a voice and adding all the notes to it.\n        const voice = new Voice(Tables.TIME4_4).setMode(Voice.Mode.SOFT).addTickables(notes);\n        // Then create beams, if requested.\n        const beams = options.auto_beam ? Beam.applyAndGetBeams(voice) : [];\n        // Instantiate a `Formatter` and format the notes.\n        new Formatter()\n            .joinVoices([voice]) // , { align_rests: options.align_rests })\n            .formatToStave([voice], stave, { align_rests: options.align_rests, stave });\n        // Render the voice and beams to the stave.\n        voice.setStave(stave).draw(ctx, stave);\n        beams.forEach((beam) => beam.setContext(ctx).draw());\n        // Return the bounding box of the voice.\n        return voice.getBoundingBox();\n    }\n    /**\n     * Helper function to format and draw aligned tab and stave notes in two\n     * separate staves.\n     * @param ctx the rendering context\n     * @param tabstave a `TabStave` instance on which to render `TabNote`s.\n     * @param stave a `Stave` instance on which to render `Note`s.\n     * @param notes array of `Note` instances for the stave (`Note`, `BarNote`, etc.)\n     * @param tabnotes array of `Note` instances for the tab stave (`TabNote`, `BarNote`, etc.)\n     * @param autobeam automatically generate beams.\n     * @param params a configuration object:\n     *    * `autobeam` automatically generates beams for the notes.\n     *    * `align_rests` aligns rests with nearby notes.\n     */\n    static FormatAndDrawTab(ctx, tabstave, stave, tabnotes, notes, autobeam, params) {\n        let opts = {\n            auto_beam: autobeam,\n            align_rests: false,\n        };\n        if (typeof params === 'object') {\n            opts = Object.assign(Object.assign({}, opts), params);\n        }\n        else if (typeof params === 'boolean') {\n            opts.auto_beam = params;\n        }\n        // Create a `4/4` voice for `notes`.\n        const notevoice = new Voice(Tables.TIME4_4).setMode(Voice.Mode.SOFT).addTickables(notes);\n        // Create a `4/4` voice for `tabnotes`.\n        const tabvoice = new Voice(Tables.TIME4_4).setMode(Voice.Mode.SOFT).addTickables(tabnotes);\n        // Then create beams, if requested.\n        const beams = opts.auto_beam ? Beam.applyAndGetBeams(notevoice) : [];\n        // Instantiate a `Formatter` and align tab and stave notes.\n        new Formatter()\n            .joinVoices([notevoice]) // , { align_rests: opts.align_rests })\n            .joinVoices([tabvoice])\n            .formatToStave([notevoice, tabvoice], stave, { align_rests: opts.align_rests });\n        // Render voices and beams to staves.\n        notevoice.draw(ctx, stave);\n        tabvoice.draw(ctx, tabstave);\n        beams.forEach((beam) => beam.setContext(ctx).draw());\n        // Draw a connector between tab and note staves.\n        new StaveConnector(stave, tabstave).setContext(ctx).draw();\n    }\n    /**\n     * Automatically set the vertical position of rests based on previous/next note positions.\n     * @param tickables an array of Tickables.\n     * @param alignAllNotes If `false`, only align rests that are within a group of beamed notes.\n     * @param alignTuplets If `false`, ignores tuplets.\n     */\n    static AlignRestsToNotes(tickables, alignAllNotes, alignTuplets) {\n        tickables.forEach((currTickable, index) => {\n            if (isStaveNote(currTickable) && currTickable.isRest()) {\n                if (currTickable.getTuplet() && !alignTuplets) {\n                    return;\n                }\n                // If activated rests not on default can be rendered as specified.\n                const position = currTickable.getGlyph().position.toUpperCase();\n                if (position !== 'R/4' && position !== 'B/4') {\n                    return;\n                }\n                if (alignAllNotes || currTickable.getBeam()) {\n                    // Align rests with previous/next notes.\n                    const props = currTickable.getKeyProps()[0];\n                    if (index === 0) {\n                        props.line = getRestLineForNextNoteGroup(tickables, props.line, index, false);\n                    }\n                    else if (index > 0 && index < tickables.length) {\n                        // If previous tickable is a rest, use its line number.\n                        const prevTickable = tickables[index - 1];\n                        if (isStaveNote(prevTickable)) {\n                            if (prevTickable.isRest()) {\n                                props.line = prevTickable.getKeyProps()[0].line;\n                            }\n                            else {\n                                const restLine = prevTickable.getLineForRest();\n                                // Get the rest line for next valid non-rest note group.\n                                props.line = getRestLineForNextNoteGroup(tickables, restLine, index, true);\n                            }\n                        }\n                    }\n                    currTickable.setKeyLine(0, props.line);\n                }\n            }\n        });\n    }\n    /**\n     * Find all the rests in each of the `voices` and align them to neighboring notes.\n     *\n     * @param voices\n     * @param alignAllNotes If `false`, only align rests within beamed groups of notes. If `true`, align all rests.\n     */\n    alignRests(voices, alignAllNotes) {\n        if (!voices || !voices.length) {\n            throw new RuntimeError('BadArgument', 'No voices to format rests');\n        }\n        voices.forEach((voice) => Formatter.AlignRestsToNotes(voice.getTickables(), alignAllNotes));\n    }\n    /**\n     * Estimate the width required to render 'voices'.  This is done by:\n     * 1. Sum the widths of all the tick contexts\n     * 2. Estimate the padding.\n     * The latter is done by calculating the padding 3 different ways, and taking the\n     * greatest value:\n     * 1. the padding required for unaligned notes in different voices\n     * 2. the padding based on the stddev of the tickable widths\n     * 3. the padding based on the stddev of the tickable durations.\n     *\n     * The last 2 quantities estimate a 'width entropy', where notes might need more\n     * room than the proportional formatting gives them.  A measure of all same duration\n     * and width will need no extra padding, and all these quantities will be\n     * zero in that case.\n     *\n     * Note: joinVoices has to be called before calling preCalculateMinTotalWidth.\n     *\n     * @param voices the voices that contain the notes\n     * @returns the estimated width in pixels\n     */\n    preCalculateMinTotalWidth(voices) {\n        const unalignedPadding = Tables.currentMusicFont().lookupMetric('stave.unalignedNotePadding');\n        // Calculate additional padding based on 3 methods:\n        // 1) unaligned beats in voices, 2) variance of width, 3) variance of durations\n        let unalignedCtxCount = 0;\n        let wsum = 0;\n        let dsum = 0;\n        const widths = [];\n        const durations = [];\n        // Cache results.\n        if (this.hasMinTotalWidth)\n            return this.minTotalWidth;\n        // Create tick contexts if not already created.\n        if (!this.tickContexts) {\n            if (!voices) {\n                throw new RuntimeError('BadArgument', \"'voices' required to run preCalculateMinTotalWidth\");\n            }\n            this.createTickContexts(voices);\n        }\n        // eslint-disable-next-line\n        const { list: contextList, map: contextMap } = this.tickContexts;\n        this.minTotalWidth = 0;\n        // Go through each tick context and calculate total width,\n        // and also accumulate values used in padding hints\n        contextList.forEach((tick) => {\n            const context = contextMap[tick];\n            context.preFormat();\n            // If this TC doesn't have all the voices on it, it's unaligned.\n            // so increment the unaligned padding accumulator\n            if (context.getTickables().length < voices.length) {\n                unalignedCtxCount += 1;\n            }\n            // Calculate the 'width entropy' over all the Tickables.\n            context.getTickables().forEach((t) => {\n                wsum += t.getMetrics().width;\n                dsum += t.getTicks().value();\n                widths.push(t.getMetrics().width);\n                durations.push(t.getTicks().value());\n            });\n            const width = context.getWidth();\n            this.minTotalWidth += width;\n        });\n        this.hasMinTotalWidth = true;\n        // normalized (0-1) STDDEV of widths/durations gives us padding hints.\n        const wavg = wsum > 0 ? wsum / widths.length : 1 / widths.length;\n        const wvar = sumArray(widths.map((ll) => Math.pow(ll - wavg, 2)));\n        const wpads = Math.pow(wvar / widths.length, 0.5) / wavg;\n        const davg = dsum / durations.length;\n        const dvar = sumArray(durations.map((ll) => Math.pow(ll - davg, 2)));\n        const dpads = Math.pow(dvar / durations.length, 0.5) / davg;\n        // Find max of 3 methods pad the width with that\n        const padmax = Math.max(dpads, wpads) * contextList.length * unalignedPadding;\n        const unalignedPad = unalignedPadding * unalignedCtxCount;\n        return this.minTotalWidth + Math.max(unalignedPad, padmax);\n    }\n    /**\n     * Get minimum width required to render all voices. Either `format` or\n     * `preCalculateMinTotalWidth` must be called before this method.\n     */\n    getMinTotalWidth() {\n        if (!this.hasMinTotalWidth) {\n            throw new RuntimeError('NoMinTotalWidth', \"Call 'preCalculateMinTotalWidth' or 'preFormat' before calling 'getMinTotalWidth'\");\n        }\n        return this.minTotalWidth;\n    }\n    /** Calculate the resolution multiplier for `voices`. */\n    static getResolutionMultiplier(voices) {\n        if (!voices || !voices.length) {\n            throw new RuntimeError('BadArgument', 'No voices to format');\n        }\n        const totalTicks = voices[0].getTotalTicks();\n        const resolutionMultiplier = voices.reduce((accumulator, voice) => {\n            if (!voice.getTotalTicks().equals(totalTicks)) {\n                throw new RuntimeError('TickMismatch', 'Voices should have same total note duration in ticks.');\n            }\n            if (voice.getMode() === Voice.Mode.STRICT && !voice.isComplete()) {\n                throw new RuntimeError('IncompleteVoice', 'Voice does not have enough notes.');\n            }\n            return Math.max(accumulator, Fraction.LCM(accumulator, voice.getResolutionMultiplier()));\n        }, 1);\n        return resolutionMultiplier;\n    }\n    /** Create a `ModifierContext` for each tick in `voices`. */\n    createModifierContexts(voices) {\n        const fn = (tickable, context) => tickable.addToModifierContext(context);\n        const contexts = createContexts(voices, () => new ModifierContext(), fn);\n        this.modifierContexts = contexts;\n        return contexts;\n    }\n    /**\n     * Create a `TickContext` for each tick in `voices`. Also calculate the\n     * total number of ticks in voices.\n     */\n    createTickContexts(voices) {\n        const fn = (tickable, context, voiceIndex) => context.addTickable(tickable, voiceIndex);\n        const contexts = createContexts(voices, (tick) => new TickContext(tick), fn);\n        this.tickContexts = contexts;\n        const contextArray = this.tickContexts.array;\n        contextArray.forEach((context) => {\n            context.tContexts = contextArray;\n        });\n        return contexts;\n    }\n    /**\n     * This is the core formatter logic. Format voices and justify them\n     * to `justifyWidth` pixels. `renderingContext` is required to justify elements\n     * that can't retreive widths without a canvas. This method sets the `x` positions\n     * of all the tickables/notes in the formatter.\n     */\n    preFormat(justifyWidth = 0, renderingContext, voicesParam, stave) {\n        // Initialize context maps.\n        const contexts = this.tickContexts;\n        if (!contexts) {\n            throw new RuntimeError('NoTickContexts', 'preFormat requires TickContexts');\n        }\n        const { list: contextList, map: contextMap } = contexts;\n        // Reset loss history for evaluator.\n        this.lossHistory = [];\n        // If voices and a stave were provided, set the Stave for each voice\n        // and preFormat to apply Y values to the notes;\n        if (voicesParam && stave) {\n            voicesParam.forEach((voice) => voice.setStave(stave).preFormat());\n        }\n        // Now distribute the ticks to each tick context, and assign them their\n        // own X positions.\n        let x = 0;\n        let shift = 0;\n        this.minTotalWidth = 0;\n        let totalTicks = 0;\n        // Pass 1: Give each note maximum width requested by context.\n        contextList.forEach((tick) => {\n            const context = contextMap[tick];\n            // Make sure that all tickables in this context have calculated their\n            // space requirements.\n            context.preFormat();\n            const width = context.getWidth();\n            this.minTotalWidth += width;\n            const maxTicks = context.getMaxTicks().value();\n            totalTicks += maxTicks;\n            const metrics = context.getMetrics();\n            x = x + shift + metrics.totalLeftPx;\n            context.setX(x);\n            // Calculate shift for the next tick.\n            shift = width - metrics.totalLeftPx;\n        });\n        // Use softmax based on all notes across all staves. (options.globalSoftmax)\n        const { globalSoftmax, softmaxFactor, maxIterations } = this.formatterOptions;\n        const exp = (tick) => Math.pow(softmaxFactor, (contextMap[tick].getMaxTicks().value() / totalTicks));\n        const expTicksUsed = sumArray(contextList.map(exp));\n        this.minTotalWidth = x + shift;\n        this.hasMinTotalWidth = true;\n        // No justification needed. End formatting.\n        if (justifyWidth <= 0)\n            return this.evaluate();\n        // Start justification. Subtract the right extra pixels of the final context because the formatter\n        // justifies based on the context's X position, which is the left-most part of the note head.\n        const firstContext = contextMap[contextList[0]];\n        const lastContext = contextMap[contextList[contextList.length - 1]];\n        // Calculate the \"distance error\" between the tick contexts. The expected distance is the spacing proportional to\n        // the softmax of the ticks.\n        function calculateIdealDistances(adjustedJustifyWidth) {\n            const distances = contextList.map((tick, i) => {\n                const context = contextMap[tick];\n                const voices = context.getTickablesByVoice();\n                let backTickable;\n                if (i > 0) {\n                    const prevContext = contextMap[contextList[i - 1]];\n                    // Go through each tickable and search backwards for another tickable\n                    // in the same voice. If found, use that duration (ticks) to calculate\n                    // the expected distance.\n                    for (let j = i - 1; j >= 0; j--) {\n                        const backTick = contextMap[contextList[j]];\n                        const backVoices = backTick.getTickablesByVoice();\n                        // Look for matching voices between tick contexts.\n                        const matchingVoices = [];\n                        Object.keys(voices).forEach((v) => {\n                            if (backVoices[v]) {\n                                matchingVoices.push(v);\n                            }\n                        });\n                        if (matchingVoices.length > 0) {\n                            // Found matching voices, get largest duration\n                            let maxTicks = 0;\n                            let maxNegativeShiftPx = Infinity;\n                            let expectedDistance = 0;\n                            matchingVoices.forEach((v) => {\n                                const ticks = backVoices[v].getTicks().value();\n                                if (ticks > maxTicks) {\n                                    backTickable = backVoices[v];\n                                    maxTicks = ticks;\n                                }\n                                // Calculate the limits of the shift based on modifiers, etc.\n                                const thisTickable = voices[v];\n                                const insideLeftEdge = thisTickable.getX() -\n                                    (thisTickable.getMetrics().modLeftPx + thisTickable.getMetrics().leftDisplacedHeadPx);\n                                const backMetrics = backVoices[v].getMetrics();\n                                const insideRightEdge = backVoices[v].getX() + backMetrics.notePx + backMetrics.modRightPx + backMetrics.rightDisplacedHeadPx;\n                                // Don't allow shifting if notes in the same voice can collide\n                                maxNegativeShiftPx = Math.min(maxNegativeShiftPx, insideLeftEdge - insideRightEdge);\n                            });\n                            // Don't shift further left than the notehead of the last context. Actually, stay at most 5% to the right\n                            // so that two different tick contexts don't align across staves.\n                            maxNegativeShiftPx = Math.min(maxNegativeShiftPx, context.getX() - (prevContext.getX() + adjustedJustifyWidth * 0.05));\n                            // Calculate the expected distance of the current context from the last matching tickable. The\n                            // distance is scaled down by the softmax for the voice.\n                            if (globalSoftmax) {\n                                const t = totalTicks;\n                                expectedDistance = (Math.pow(softmaxFactor, (maxTicks / t)) / expTicksUsed) * adjustedJustifyWidth;\n                            }\n                            else if (typeof backTickable !== 'undefined') {\n                                expectedDistance = backTickable.getVoice().softmax(maxTicks) * adjustedJustifyWidth;\n                            }\n                            return {\n                                expectedDistance,\n                                maxNegativeShiftPx,\n                                fromTickable: backTickable,\n                            };\n                        }\n                    }\n                }\n                return { expectedDistance: 0, fromTickablePx: 0, maxNegativeShiftPx: 0 };\n            });\n            return distances;\n        }\n        function shiftToIdealDistances(idealDistances) {\n            // Distribute ticks to the contexts based on the calculated distance error.\n            const centerX = adjustedJustifyWidth / 2;\n            let spaceAccum = 0;\n            contextList.forEach((tick, index) => {\n                const context = contextMap[tick];\n                if (index > 0) {\n                    const contextX = context.getX();\n                    const ideal = idealDistances[index];\n                    const errorPx = defined(ideal.fromTickable).getX() + ideal.expectedDistance - (contextX + spaceAccum);\n                    let negativeShiftPx = 0;\n                    if (errorPx > 0) {\n                        spaceAccum += errorPx;\n                    }\n                    else if (errorPx < 0) {\n                        negativeShiftPx = Math.min(ideal.maxNegativeShiftPx, Math.abs(errorPx));\n                        spaceAccum += -negativeShiftPx;\n                    }\n                    context.setX(contextX + spaceAccum);\n                }\n                // Move center aligned tickables to middle\n                context.getCenterAlignedTickables().forEach((tickable) => {\n                    tickable.setCenterXShift(centerX - context.getX());\n                });\n            });\n            return lastContext.getX() - firstContext.getX();\n        }\n        const adjustedJustifyWidth = justifyWidth -\n            lastContext.getMetrics().notePx -\n            lastContext.getMetrics().totalRightPx -\n            firstContext.getMetrics().totalLeftPx;\n        const musicFont = Tables.currentMusicFont();\n        const configMinPadding = musicFont.lookupMetric('stave.endPaddingMin');\n        const configMaxPadding = musicFont.lookupMetric('stave.endPaddingMax');\n        const leftPadding = musicFont.lookupMetric('stave.padding');\n        let targetWidth = adjustedJustifyWidth;\n        const distances = calculateIdealDistances(targetWidth);\n        let actualWidth = shiftToIdealDistances(distances);\n        // Just one context. Done formatting.\n        if (contextList.length === 1)\n            return 0;\n        const calcMinDistance = (targetWidth, distances) => {\n            let mdCalc = targetWidth / 2;\n            if (distances.length > 1) {\n                for (let di = 1; di < distances.length; ++di) {\n                    mdCalc = Math.min(distances[di].expectedDistance / 2, mdCalc);\n                }\n            }\n            return mdCalc;\n        };\n        const minDistance = calcMinDistance(targetWidth, distances);\n        // right justify to either the configured padding, or the min distance between notes, whichever is greatest.\n        // This * 2 keeps the existing formatting unless there is 'a lot' of extra whitespace, which won't break\n        // existing visual regression tests.\n        const paddingMaxCalc = (curTargetWidth) => {\n            let lastTickablePadding = 0;\n            const lastTickable = lastContext && lastContext.getMaxTickable();\n            if (lastTickable) {\n                const voice = lastTickable.getVoice();\n                // If the number of actual ticks in the measure <> configured ticks, right-justify\n                // because the softmax won't yield the correct value\n                if (voice.getTicksUsed().value() > voice.getTotalTicks().value()) {\n                    return configMaxPadding * 2 < minDistance ? minDistance : configMaxPadding;\n                }\n                const tickWidth = lastTickable.getWidth();\n                lastTickablePadding =\n                    voice.softmax(lastContext.getMaxTicks().value()) * curTargetWidth - (tickWidth + leftPadding);\n            }\n            return configMaxPadding * 2 < lastTickablePadding ? lastTickablePadding : configMaxPadding;\n        };\n        let paddingMax = paddingMaxCalc(targetWidth);\n        let paddingMin = paddingMax - (configMaxPadding - configMinPadding);\n        const maxX = adjustedJustifyWidth - paddingMin;\n        let iterations = maxIterations;\n        // Adjust justification width until the right margin is as close as possible to the calculated padding,\n        // without going over\n        while ((actualWidth > maxX && iterations > 0) || (actualWidth + paddingMax < maxX && iterations > 1)) {\n            targetWidth -= actualWidth - maxX;\n            paddingMax = paddingMaxCalc(targetWidth);\n            paddingMin = paddingMax - (configMaxPadding - configMinPadding);\n            actualWidth = shiftToIdealDistances(calculateIdealDistances(targetWidth));\n            iterations--;\n        }\n        this.justifyWidth = justifyWidth;\n        return this.evaluate();\n    }\n    /** Calculate the total cost of this formatting decision. */\n    evaluate() {\n        if (!this.tickContexts)\n            return 0;\n        const contexts = this.tickContexts;\n        const justifyWidth = this.justifyWidth;\n        // Calculate available slack per tick context. This works out how much freedom\n        // to move a context has in either direction, without affecting other notes.\n        this.contextGaps = { total: 0, gaps: [] };\n        contexts.list.forEach((tick, index) => {\n            if (index === 0)\n                return;\n            const prevTick = contexts.list[index - 1];\n            const prevContext = contexts.map[prevTick];\n            const context = contexts.map[tick];\n            const prevMetrics = prevContext.getMetrics();\n            const currMetrics = context.getMetrics();\n            // Calculate X position of right edge of previous note\n            const insideRightEdge = prevContext.getX() + prevMetrics.notePx + prevMetrics.totalRightPx;\n            // Calculate X position of left edge of current note\n            const insideLeftEdge = context.getX() - currMetrics.totalLeftPx;\n            const gap = insideLeftEdge - insideRightEdge;\n            this.contextGaps.total += gap;\n            this.contextGaps.gaps.push({ x1: insideRightEdge, x2: insideLeftEdge });\n            // Tell the tick contexts how much they can reposition themselves.\n            context.getFormatterMetrics().freedom.left = gap;\n            prevContext.getFormatterMetrics().freedom.right = gap;\n        });\n        // Calculate mean distance in each voice for each duration type, then calculate\n        // how far each note is from the mean.\n        this.durationStats = {};\n        const durationStats = this.durationStats;\n        function updateStats(duration, space) {\n            const stats = durationStats[duration];\n            if (stats === undefined) {\n                durationStats[duration] = { mean: space, count: 1 };\n            }\n            else {\n                stats.count += 1;\n                stats.mean = (stats.mean + space) / 2;\n            }\n        }\n        this.voices.forEach((voice) => {\n            voice.getTickables().forEach((note, i, notes) => {\n                const duration = note.getTicks().clone().simplify().toString();\n                const metrics = note.getMetrics();\n                const formatterMetrics = note.getFormatterMetrics();\n                const leftNoteEdge = note.getX() + metrics.notePx + metrics.modRightPx + metrics.rightDisplacedHeadPx;\n                let space = 0;\n                if (i < notes.length - 1) {\n                    const rightNote = notes[i + 1];\n                    const rightMetrics = rightNote.getMetrics();\n                    const rightNoteEdge = rightNote.getX() - rightMetrics.modLeftPx - rightMetrics.leftDisplacedHeadPx;\n                    space = rightNoteEdge - leftNoteEdge;\n                    formatterMetrics.space.used = rightNote.getX() - note.getX();\n                    rightNote.getFormatterMetrics().freedom.left = space;\n                }\n                else {\n                    space = justifyWidth - leftNoteEdge;\n                    formatterMetrics.space.used = justifyWidth - note.getX();\n                }\n                formatterMetrics.freedom.right = space;\n                updateStats(duration, formatterMetrics.space.used);\n            });\n        });\n        // Calculate how much each note deviates from the mean. Loss function is square\n        // root of the sum of squared deviations.\n        let totalDeviation = 0;\n        this.voices.forEach((voice) => {\n            voice.getTickables().forEach((note) => {\n                const duration = note.getTicks().clone().simplify().toString();\n                const metrics = note.getFormatterMetrics();\n                metrics.space.mean = durationStats[duration].mean;\n                metrics.duration = duration;\n                metrics.iterations += 1;\n                metrics.space.deviation = metrics.space.used - metrics.space.mean;\n                totalDeviation += Math.pow(metrics.space.deviation, 2);\n            });\n        });\n        this.totalCost = Math.sqrt(totalDeviation);\n        this.lossHistory.push(this.totalCost);\n        return this.totalCost;\n    }\n    /**\n     * Run a single iteration of rejustification. At a high level, this method calculates\n     * the overall \"loss\" (or cost) of this layout, and repositions tickcontexts in an\n     * attempt to reduce the cost. You can call this method multiple times until it finds\n     * and oscillates around a global minimum.\n     * @param alpha the \"learning rate\" for the formatter. It determines how much of a shift\n     * the formatter should make based on its cost function.\n     */\n    tune(options) {\n        var _a;\n        const contexts = this.tickContexts;\n        if (!contexts) {\n            return 0;\n        }\n        const alpha = (_a = options === null || options === void 0 ? void 0 : options.alpha) !== null && _a !== void 0 ? _a : 0.5;\n        // Move `current` tickcontext by `shift` pixels, and adjust the freedom\n        // on adjacent tickcontexts.\n        function move(current, shift, prev, next) {\n            current.setX(current.getX() + shift);\n            current.getFormatterMetrics().freedom.left += shift;\n            current.getFormatterMetrics().freedom.right -= shift;\n            if (prev)\n                prev.getFormatterMetrics().freedom.right += shift;\n            if (next)\n                next.getFormatterMetrics().freedom.left -= shift;\n        }\n        let shift = 0;\n        this.totalShift = 0;\n        contexts.list.forEach((tick, index, list) => {\n            const context = contexts.map[tick];\n            const prevContext = index > 0 ? contexts.map[list[index - 1]] : undefined;\n            const nextContext = index < list.length - 1 ? contexts.map[list[index + 1]] : undefined;\n            move(context, shift, prevContext, nextContext);\n            const cost = -sumArray(context.getTickables().map((t) => t.getFormatterMetrics().space.deviation));\n            if (cost > 0) {\n                shift = -Math.min(context.getFormatterMetrics().freedom.right, Math.abs(cost));\n            }\n            else if (cost < 0) {\n                if (nextContext) {\n                    shift = Math.min(nextContext.getFormatterMetrics().freedom.right, Math.abs(cost));\n                }\n                else {\n                    shift = 0;\n                }\n            }\n            shift *= alpha;\n            this.totalShift += shift;\n        });\n        return this.evaluate();\n    }\n    /**\n     * This is the top-level call for all formatting logic completed\n     * after `x` *and* `y` values have been computed for the notes\n     * in the voices.\n     */\n    postFormat() {\n        const postFormatContexts = (contexts) => contexts.list.forEach((tick) => contexts.map[tick].postFormat());\n        if (this.modifierContexts)\n            postFormatContexts(this.modifierContexts);\n        if (this.tickContexts)\n            postFormatContexts(this.tickContexts);\n        return this;\n    }\n    /**\n     * Take all `voices` and create `ModifierContext`s out of them. This tells\n     * the formatters that the voices belong on a single stave.\n     */\n    joinVoices(voices) {\n        this.createModifierContexts(voices);\n        this.hasMinTotalWidth = false;\n        return this;\n    }\n    /**\n     * Align rests in voices, justify the contexts, and position the notes\n     * so voices are aligned and ready to render onto the stave. This method\n     * mutates the `x` positions of all tickables in `voices`.\n     *\n     * Voices are full justified to fit in `justifyWidth` pixels.\n     *\n     * Set `options.context` to the rendering context. Set `options.align_rests`\n     * to true to enable rest alignment.\n     */\n    format(voices, justifyWidth, options) {\n        const opts = Object.assign({ align_rests: false }, options);\n        this.voices = voices;\n        const softmaxFactor = this.formatterOptions.softmaxFactor;\n        if (softmaxFactor) {\n            this.voices.forEach((v) => v.setSoftmaxFactor(softmaxFactor));\n        }\n        this.alignRests(voices, opts.align_rests);\n        this.createTickContexts(voices);\n        this.preFormat(justifyWidth, opts.context, voices, opts.stave);\n        // Only postFormat if a stave was supplied for y value formatting\n        if (opts.stave)\n            this.postFormat();\n        return this;\n    }\n    // This method is just like `format` except that the `justifyWidth` is inferred from the `stave`.\n    formatToStave(voices, stave, optionsParam) {\n        const options = Object.assign({ context: stave.getContext() }, optionsParam);\n        // eslint-disable-next-line\n        const justifyWidth = stave.getNoteEndX() - stave.getNoteStartX() - Stave.defaultPadding;\n        L('Formatting voices to width: ', justifyWidth);\n        return this.format(voices, justifyWidth, options);\n    }\n    getTickContext(tick) {\n        var _a;\n        return (_a = this.tickContexts) === null || _a === void 0 ? void 0 : _a.map[tick];\n    }\n}\n// To enable logging for this class. Set `Vex.Flow.Formatter.DEBUG` to `true`.\nFormatter.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n/**\n * ## Description\n *\n * Create a new tuplet from the specified notes. The notes must\n * be part of the same voice. If they are of different rhythmic\n * values, then options.num_notes must be set.\n *\n * @constructor\n * @param {Array.<Vex.Flow.StaveNote>} A set of notes: staveNotes,\n *   notes, etc... any class that inherits stemmableNote at some\n *   point in its prototype chain.\n * @param options: object {\n *\n *   num_notes: fit this many notes into...\n *   notes_occupied: ...the space of this many notes\n *\n *       Together, these two properties make up the tuplet ratio\n *     in the form of num_notes : notes_occupied.\n *       num_notes defaults to the number of notes passed in, so\n *     it is important that if you omit this property, all of\n *     the notes passed should be of the same note value.\n *       notes_occupied defaults to 2 -- so you should almost\n *     certainly pass this parameter for anything other than\n *     a basic triplet.\n *\n *   location:\n *     default 1, which is above the notes: ┌─── 3 ───┐\n *      -1 is below the notes └─── 3 ───┘\n *\n *   bracketed: boolean, draw a bracket around the tuplet number\n *     when true: ┌─── 3 ───┐   when false: 3\n *     defaults to true if notes are not beamed, false otherwise\n *\n *   ratioed: boolean\n *     when true: ┌─── 7:8 ───┐, when false: ┌─── 7 ───┐\n *     defaults to true if the difference between num_notes and\n *     notes_occupied is greater than 1.\n *\n *   y_offset: int, default 0\n *     manually offset a tuplet, for instance to avoid collisions\n *     with articulations, etc...\n * }\n */\nimport { Element } from './element';\nimport { Formatter } from './formatter';\nimport { Glyph } from './glyph';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\nexport var TupletLocation;\n(function (TupletLocation) {\n    TupletLocation[TupletLocation[\"BOTTOM\"] = -1] = \"BOTTOM\";\n    TupletLocation[TupletLocation[\"TOP\"] = 1] = \"TOP\";\n})(TupletLocation || (TupletLocation = {}));\nexport class Tuplet extends Element {\n    constructor(notes, options = {}) {\n        super();\n        this.numerator_glyphs = [];\n        this.denom_glyphs = [];\n        if (!notes || !notes.length) {\n            throw new RuntimeError('BadArguments', 'No notes provided for tuplet.');\n        }\n        this.options = options;\n        this.notes = notes;\n        this.num_notes = this.options.num_notes != undefined ? this.options.num_notes : notes.length;\n        // We accept beats_occupied, but warn that it's deprecated:\n        // the preferred property name is now notes_occupied.\n        if (this.options.beats_occupied) {\n            this.beatsOccupiedDeprecationWarning();\n        }\n        this.notes_occupied = this.options.notes_occupied || this.options.beats_occupied || 2;\n        if (this.options.bracketed != undefined) {\n            this.bracketed = this.options.bracketed;\n        }\n        else {\n            this.bracketed = notes.some((note) => !note.hasBeam());\n        }\n        this.ratioed =\n            this.options.ratioed != undefined ? this.options.ratioed : Math.abs(this.notes_occupied - this.num_notes) > 1;\n        this.point = Tables.currentMusicFont().lookupMetric('digits.tupletPoint');\n        this.y_pos = 16;\n        this.x_pos = 100;\n        this.width = 200;\n        this.setTupletLocation(this.options.location || Tuplet.LOCATION_TOP);\n        Formatter.AlignRestsToNotes(notes, true, true);\n        this.resolveGlyphs();\n        this.attach();\n    }\n    static get CATEGORY() {\n        return Category.Tuplet;\n    }\n    static get LOCATION_TOP() {\n        return TupletLocation.TOP;\n    }\n    static get LOCATION_BOTTOM() {\n        return TupletLocation.BOTTOM;\n    }\n    static get NESTING_OFFSET() {\n        return 15;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static get metrics() {\n        return Tables.currentMusicFont().getMetrics().glyphs.tuplet;\n    }\n    attach() {\n        for (let i = 0; i < this.notes.length; i++) {\n            const note = this.notes[i];\n            note.setTuplet(this);\n        }\n    }\n    detach() {\n        for (let i = 0; i < this.notes.length; i++) {\n            const note = this.notes[i];\n            note.resetTuplet(this);\n        }\n    }\n    /**\n     * Set whether or not the bracket is drawn.\n     */\n    setBracketed(bracketed) {\n        this.bracketed = !!bracketed;\n        return this;\n    }\n    /**\n     * Set whether or not the ratio is shown.\n     */\n    setRatioed(ratioed) {\n        this.ratioed = !!ratioed;\n        return this;\n    }\n    /**\n     * Set the tuplet indicator to be displayed either on the top or bottom of the stave.\n     */\n    setTupletLocation(location) {\n        if (location !== Tuplet.LOCATION_TOP && location !== Tuplet.LOCATION_BOTTOM) {\n            // eslint-disable-next-line\n            console.warn(`Invalid tuplet location [${location}]. Using Tuplet.LOCATION_TOP.`);\n            location = Tuplet.LOCATION_TOP;\n        }\n        this.location = location;\n        return this;\n    }\n    getNotes() {\n        return this.notes;\n    }\n    getNoteCount() {\n        return this.num_notes;\n    }\n    beatsOccupiedDeprecationWarning() {\n        // eslint-disable-next-line\n        console.warn('beats_occupied has been deprecated as an option for tuplets. Please use notes_occupied instead.', 'Calls to getBeatsOccupied / setBeatsOccupied should now be routed to getNotesOccupied / setNotesOccupied.', 'The old methods will be removed in VexFlow 5.0.');\n    }\n    getBeatsOccupied() {\n        this.beatsOccupiedDeprecationWarning();\n        return this.getNotesOccupied();\n    }\n    setBeatsOccupied(beats) {\n        this.beatsOccupiedDeprecationWarning();\n        return this.setNotesOccupied(beats);\n    }\n    getNotesOccupied() {\n        return this.notes_occupied;\n    }\n    setNotesOccupied(notes) {\n        this.detach();\n        this.notes_occupied = notes;\n        this.resolveGlyphs();\n        this.attach();\n    }\n    resolveGlyphs() {\n        this.numerator_glyphs = [];\n        let n = this.num_notes;\n        while (n >= 1) {\n            this.numerator_glyphs.unshift(new Glyph('timeSig' + (n % 10), this.point));\n            n = parseInt((n / 10).toString(), 10);\n        }\n        this.denom_glyphs = [];\n        n = this.notes_occupied;\n        while (n >= 1) {\n            this.denom_glyphs.unshift(new Glyph('timeSig' + (n % 10), this.point));\n            n = parseInt((n / 10).toString(), 10);\n        }\n    }\n    // determine how many tuplets are nested within this tuplet\n    // on the same side (above/below), to calculate a y\n    // offset for this tuplet:\n    getNestedTupletCount() {\n        const location = this.location;\n        const first_note = this.notes[0];\n        let maxTupletCount = countTuplets(first_note, location);\n        let minTupletCount = countTuplets(first_note, location);\n        // Count the tuplets that are on the same side (above/below)\n        // as this tuplet:\n        function countTuplets(note, location) {\n            return note.getTupletStack().filter((tuplet) => tuplet.location === location).length;\n        }\n        this.notes.forEach((note) => {\n            const tupletCount = countTuplets(note, location);\n            maxTupletCount = tupletCount > maxTupletCount ? tupletCount : maxTupletCount;\n            minTupletCount = tupletCount < minTupletCount ? tupletCount : minTupletCount;\n        });\n        return maxTupletCount - minTupletCount;\n    }\n    // determine the y position of the tuplet:\n    getYPosition() {\n        // offset the tuplet for any nested tuplets between\n        // it and the notes:\n        const nested_tuplet_y_offset = this.getNestedTupletCount() * Tuplet.NESTING_OFFSET * -this.location;\n        // offset the tuplet for any manual y_offset:\n        const y_offset = this.options.y_offset || 0;\n        // now iterate through the notes and find our highest\n        // or lowest locations, to form a base y_pos\n        const first_note = this.notes[0];\n        let y_pos;\n        if (this.location === Tuplet.LOCATION_TOP) {\n            y_pos = first_note.checkStave().getYForLine(0) - Tuplet.metrics.topModifierOffset;\n            // check modifiers above note to see if they will collide with tuplet beam\n            for (let i = 0; i < this.notes.length; ++i) {\n                const note = this.notes[i];\n                let modLines = 0;\n                const mc = note.getModifierContext();\n                if (mc) {\n                    modLines = Math.max(modLines, mc.getState().top_text_line);\n                }\n                const modY = note.getYForTopText(modLines) - Tuplet.metrics.noteHeadOffset;\n                if (note.hasStem() || note.isRest()) {\n                    const top_y = note.getStemDirection() === Stem.UP\n                        ? note.getStemExtents().topY - Tuplet.metrics.stemOffset\n                        : note.getStemExtents().baseY - Tuplet.metrics.noteHeadOffset;\n                    y_pos = Math.min(top_y, y_pos);\n                    if (modLines > 0) {\n                        y_pos = Math.min(modY, y_pos);\n                    }\n                }\n            }\n        }\n        else {\n            let lineCheck = Tuplet.metrics.bottomLine; // tuplet default on line 4\n            // check modifiers below note to see if they will collide with tuplet beam\n            this.notes.forEach((nn) => {\n                const mc = nn.getModifierContext();\n                if (mc) {\n                    lineCheck = Math.max(lineCheck, mc.getState().text_line + 1);\n                }\n            });\n            y_pos = first_note.checkStave().getYForLine(lineCheck) + Tuplet.metrics.noteHeadOffset;\n            for (let i = 0; i < this.notes.length; ++i) {\n                if (this.notes[i].hasStem() || this.notes[i].isRest()) {\n                    const bottom_y = this.notes[i].getStemDirection() === Stem.UP\n                        ? this.notes[i].getStemExtents().baseY + Tuplet.metrics.noteHeadOffset\n                        : this.notes[i].getStemExtents().topY + Tuplet.metrics.stemOffset;\n                    if (bottom_y > y_pos) {\n                        y_pos = bottom_y;\n                    }\n                }\n            }\n        }\n        return y_pos + nested_tuplet_y_offset + y_offset;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        // determine x value of left bound of tuplet\n        const first_note = this.notes[0];\n        const last_note = this.notes[this.notes.length - 1];\n        if (!this.bracketed) {\n            this.x_pos = first_note.getStemX();\n            this.width = last_note.getStemX() - this.x_pos;\n        }\n        else {\n            this.x_pos = first_note.getTieLeftX() - 5;\n            this.width = last_note.getTieRightX() - this.x_pos + 5;\n        }\n        // determine y value for tuplet\n        this.y_pos = this.getYPosition();\n        const addGlyphWidth = (width, glyph) => width + defined(glyph.getMetrics().width);\n        // calculate total width of tuplet notation\n        let width = this.numerator_glyphs.reduce(addGlyphWidth, 0);\n        if (this.ratioed) {\n            width = this.denom_glyphs.reduce(addGlyphWidth, width);\n            width += this.point * 0.32;\n        }\n        const notation_center_x = this.x_pos + this.width / 2;\n        const notation_start_x = notation_center_x - width / 2;\n        // draw bracket if the tuplet is not beamed\n        if (this.bracketed) {\n            const line_width = this.width / 2 - width / 2 - 5;\n            // only draw the bracket if it has positive length\n            if (line_width > 0) {\n                ctx.fillRect(this.x_pos, this.y_pos, line_width, 1);\n                ctx.fillRect(this.x_pos + this.width / 2 + width / 2 + 5, this.y_pos, line_width, 1);\n                ctx.fillRect(this.x_pos, this.y_pos + (this.location === Tuplet.LOCATION_BOTTOM ? 1 : 0), 1, this.location * 10);\n                ctx.fillRect(this.x_pos + this.width, this.y_pos + (this.location === Tuplet.LOCATION_BOTTOM ? 1 : 0), 1, this.location * 10);\n            }\n        }\n        // draw numerator glyphs\n        const shiftY = Tables.currentMusicFont().lookupMetric('digits.shiftY', 0);\n        let x_offset = 0;\n        this.numerator_glyphs.forEach((glyph) => {\n            glyph.render(ctx, notation_start_x + x_offset, this.y_pos + this.point / 3 - 2 + shiftY);\n            x_offset += defined(glyph.getMetrics().width);\n        });\n        // display colon and denominator if the ratio is to be shown\n        if (this.ratioed) {\n            const colon_x = notation_start_x + x_offset + this.point * 0.16;\n            const colon_radius = this.point * 0.06;\n            ctx.beginPath();\n            ctx.arc(colon_x, this.y_pos - this.point * 0.08, colon_radius, 0, Math.PI * 2, true);\n            ctx.closePath();\n            ctx.fill();\n            ctx.beginPath();\n            ctx.arc(colon_x, this.y_pos + this.point * 0.12, colon_radius, 0, Math.PI * 2, true);\n            ctx.closePath();\n            ctx.fill();\n            x_offset += this.point * 0.32;\n            this.denom_glyphs.forEach((glyph) => {\n                glyph.render(ctx, notation_start_x + x_offset, this.y_pos + this.point / 3 - 2 + shiftY);\n                x_offset += defined(glyph.getMetrics().width);\n            });\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { TupletLocation } from './tuplet';\nimport { Category, isStaveNote, isTabNote } from './typeguard';\nimport { RuntimeError } from './util';\nfunction calculateStemDirection(notes) {\n    let lineSum = 0;\n    notes.forEach((note) => {\n        if (note.keyProps) {\n            note.keyProps.forEach((keyProp) => {\n                lineSum += keyProp.line - 3;\n            });\n        }\n    });\n    if (lineSum >= 0) {\n        return Stem.DOWN;\n    }\n    return Stem.UP;\n}\nfunction getStemSlope(firstNote, lastNote) {\n    const firstStemTipY = firstNote.getStemExtents().topY;\n    const firstStemX = firstNote.getStemX();\n    const lastStemTipY = lastNote.getStemExtents().topY;\n    const lastStemX = lastNote.getStemX();\n    return (lastStemTipY - firstStemTipY) / (lastStemX - firstStemX);\n}\nexport const BEAM_LEFT = 'L';\nexport const BEAM_RIGHT = 'R';\nexport const BEAM_BOTH = 'B';\n/** `Beams` span over a set of `StemmableNotes`. */\nexport class Beam extends Element {\n    constructor(notes, auto_stem = false) {\n        super();\n        this.slope = 0;\n        this.y_shift = 0;\n        /**\n         * Overrides to default beam directions for secondary-level beams that do not\n         * connect to any other note. See further explanation at\n         * `setPartialBeamSideAt`\n         */\n        this.forcedPartialDirections = {};\n        if (!notes || notes.length === 0) {\n            throw new RuntimeError('BadArguments', 'No notes provided for beam.');\n        }\n        if (notes.length === 1) {\n            throw new RuntimeError('BadArguments', 'Too few notes for beam.');\n        }\n        // Validate beam line, direction and ticks.\n        this.ticks = notes[0].getIntrinsicTicks();\n        if (this.ticks >= Tables.durationToTicks('4')) {\n            throw new RuntimeError('BadArguments', 'Beams can only be applied to notes shorter than a quarter note.');\n        }\n        let i; // shared iterator\n        let note;\n        this.stem_direction = Stem.UP;\n        for (i = 0; i < notes.length; ++i) {\n            note = notes[i];\n            if (note.hasStem()) {\n                this.stem_direction = note.getStemDirection();\n                break;\n            }\n        }\n        let stem_direction = this.stem_direction;\n        // Figure out optimal stem direction based on given notes\n        if (auto_stem && isStaveNote(notes[0])) {\n            stem_direction = calculateStemDirection(notes);\n        }\n        else if (auto_stem && isTabNote(notes[0])) {\n            // Auto Stem TabNotes\n            const stem_weight = notes.reduce((memo, note) => memo + note.getStemDirection(), 0);\n            stem_direction = stem_weight > -1 ? Stem.UP : Stem.DOWN;\n        }\n        // Apply stem directions and attach beam to notes\n        for (i = 0; i < notes.length; ++i) {\n            note = notes[i];\n            if (auto_stem) {\n                note.setStemDirection(stem_direction);\n                this.stem_direction = stem_direction;\n            }\n            note.setBeam(this);\n        }\n        this.postFormatted = false;\n        this.notes = notes;\n        this.beam_count = this.getBeamCount();\n        this.break_on_indices = [];\n        this.render_options = {\n            beam_width: 5,\n            max_slope: 0.25,\n            min_slope: -0.25,\n            slope_iterations: 20,\n            slope_cost: 100,\n            show_stemlets: false,\n            stemlet_extension: 7,\n            partial_beam_length: 10,\n            flat_beams: false,\n            min_flat_beam_offset: 15,\n        };\n    }\n    static get CATEGORY() {\n        return Category.Beam;\n    }\n    /** Get the direction of the beam */\n    getStemDirection() {\n        return this.stem_direction;\n    }\n    /**\n     * Get the default beam groups for a provided time signature.\n     * Attempt to guess if the time signature is not found in table.\n     * Currently this is fairly naive.\n     */\n    static getDefaultBeamGroups(time_sig) {\n        if (!time_sig || time_sig === 'c') {\n            time_sig = '4/4';\n        }\n        const defaults = {\n            '1/2': ['1/2'],\n            '2/2': ['1/2'],\n            '3/2': ['1/2'],\n            '4/2': ['1/2'],\n            '1/4': ['1/4'],\n            '2/4': ['1/4'],\n            '3/4': ['1/4'],\n            '4/4': ['1/4'],\n            '1/8': ['1/8'],\n            '2/8': ['2/8'],\n            '3/8': ['3/8'],\n            '4/8': ['2/8'],\n            '1/16': ['1/16'],\n            '2/16': ['2/16'],\n            '3/16': ['3/16'],\n            '4/16': ['2/16'],\n        };\n        const groups = defaults[time_sig];\n        if (groups === undefined) {\n            // If no beam groups found, naively determine\n            // the beam groupings from the time signature\n            const beatTotal = parseInt(time_sig.split('/')[0], 10);\n            const beatValue = parseInt(time_sig.split('/')[1], 10);\n            const tripleMeter = beatTotal % 3 === 0;\n            if (tripleMeter) {\n                return [new Fraction(3, beatValue)];\n            }\n            else if (beatValue > 4) {\n                return [new Fraction(2, beatValue)];\n            }\n            else if (beatValue <= 4) {\n                return [new Fraction(1, beatValue)];\n            }\n        }\n        else {\n            return groups.map((group) => new Fraction().parse(group));\n        }\n        return [new Fraction(1, 4)];\n    }\n    /**\n     * A helper function to automatically build basic beams for a voice. For more\n     * complex auto-beaming use `Beam.generateBeams()`.\n     * @param voice the voice to generate the beams for\n     * @param stem_direction a stem direction to apply to the entire voice\n     * @param groups an array of `Fraction` representing beat groupings for the beam\n     */\n    static applyAndGetBeams(voice, stem_direction, groups) {\n        return Beam.generateBeams(voice.getTickables(), { groups, stem_direction });\n    }\n    /**\n     * A helper function to autimatically build beams for a voice with\n     * configuration options.\n     *\n     * Example configuration object:\n     *\n     * ```\n     * config = {\n     *   groups: [new Vex.Flow.Fraction(2, 8)],\n     *   stem_direction: -1,\n     *   beam_rests: true,\n     *   beam_middle_only: true,\n     *   show_stemlets: false\n     * };\n     * ```\n     * @param notes an array of notes to create the beams for\n     * @param config the configuration object\n     * @param config.stem_direction set to apply the same direction to all notes\n     * @param config.beam_rests set to `true` to include rests in the beams\n     * @param config.beam_middle_only set to `true` to only beam rests in the middle of the beat\n     * @param config.show_stemlets set to `true` to draw stemlets for rests\n     * @param config.maintain_stem_directions set to `true` to not apply new stem directions\n     * @param config.groups array of `Fractions` that represent the beat structure to beam the notes\n     *\n     */\n    static generateBeams(notes, config = {}) {\n        if (!config.groups || !config.groups.length) {\n            config.groups = [new Fraction(2, 8)];\n        }\n        // Convert beam groups to tick amounts\n        const tickGroups = config.groups.map((group) => {\n            if (!group.multiply) {\n                throw new RuntimeError('InvalidBeamGroups', 'The beam groups must be an array of Vex.Flow.Fractions');\n            }\n            return group.clone().multiply(Tables.RESOLUTION, 1);\n        });\n        const unprocessedNotes = notes;\n        let currentTickGroup = 0;\n        let noteGroups = [];\n        let currentGroup = [];\n        function getTotalTicks(vf_notes) {\n            return vf_notes.reduce((memo, note) => note.getTicks().clone().add(memo), new Fraction(0, 1));\n        }\n        function nextTickGroup() {\n            if (tickGroups.length - 1 > currentTickGroup) {\n                currentTickGroup += 1;\n            }\n            else {\n                currentTickGroup = 0;\n            }\n        }\n        function createGroups() {\n            let nextGroup = [];\n            // number of ticks in current group\n            let currentGroupTotalTicks = new Fraction(0, 1);\n            unprocessedNotes.forEach((unprocessedNote) => {\n                nextGroup = [];\n                if (unprocessedNote.shouldIgnoreTicks()) {\n                    noteGroups.push(currentGroup);\n                    currentGroup = nextGroup;\n                    return; // Ignore untickables (like bar notes)\n                }\n                currentGroup.push(unprocessedNote);\n                const ticksPerGroup = tickGroups[currentTickGroup].clone();\n                const totalTicks = getTotalTicks(currentGroup).add(currentGroupTotalTicks);\n                // Double the amount of ticks in a group, if it's an unbeamable tuplet\n                const unbeamable = Tables.durationToNumber(unprocessedNote.getDuration()) < 8;\n                if (unbeamable && unprocessedNote.getTuplet()) {\n                    ticksPerGroup.numerator *= 2;\n                }\n                // If the note that was just added overflows the group tick total\n                if (totalTicks.greaterThan(ticksPerGroup)) {\n                    // If the overflow note can be beamed, start the next group\n                    // with it. Unbeamable notes leave the group overflowed.\n                    if (!unbeamable) {\n                        const note = currentGroup.pop();\n                        if (note)\n                            nextGroup.push(note);\n                    }\n                    noteGroups.push(currentGroup);\n                    // We have overflown, so we're going to next tick group. As we might have\n                    // overflown by more than 1 group, we need to go forward as many times as\n                    // needed, decreasing currentGroupTotalTicks by as many ticks as there are\n                    // in current groups as we go forward.\n                    do {\n                        currentGroupTotalTicks = totalTicks.subtract(tickGroups[currentTickGroup]);\n                        nextTickGroup();\n                    } while (currentGroupTotalTicks.greaterThanEquals(tickGroups[currentTickGroup]));\n                    currentGroup = nextGroup;\n                }\n                else if (totalTicks.equals(ticksPerGroup)) {\n                    noteGroups.push(currentGroup);\n                    currentGroupTotalTicks = new Fraction(0, 1);\n                    currentGroup = nextGroup;\n                    nextTickGroup();\n                }\n            });\n            // Adds any remainder notes beam\n            if (currentGroup.length > 0) {\n                noteGroups.push(currentGroup);\n            }\n        }\n        function getBeamGroups() {\n            return noteGroups.filter((group) => {\n                if (group.length > 1) {\n                    let beamable = true;\n                    group.forEach((note) => {\n                        if (note.getIntrinsicTicks() >= Tables.durationToTicks('4')) {\n                            beamable = false;\n                        }\n                    });\n                    return beamable;\n                }\n                return false;\n            });\n        }\n        // Splits up groups by Rest\n        function sanitizeGroups() {\n            const sanitizedGroups = [];\n            noteGroups.forEach((group) => {\n                let tempGroup = [];\n                group.forEach((note, index, group) => {\n                    const isFirstOrLast = index === 0 || index === group.length - 1;\n                    const prevNote = group[index - 1];\n                    const breaksOnEachRest = !config.beam_rests && note.isRest();\n                    const breaksOnFirstOrLastRest = config.beam_rests && config.beam_middle_only && note.isRest() && isFirstOrLast;\n                    let breakOnStemChange = false;\n                    if (config.maintain_stem_directions && prevNote && !note.isRest() && !prevNote.isRest()) {\n                        const prevDirection = prevNote.getStemDirection();\n                        const currentDirection = note.getStemDirection();\n                        breakOnStemChange = currentDirection !== prevDirection;\n                    }\n                    const isUnbeamableDuration = parseInt(note.getDuration(), 10) < 8;\n                    // Determine if the group should be broken at this note\n                    const shouldBreak = breaksOnEachRest || breaksOnFirstOrLastRest || breakOnStemChange || isUnbeamableDuration;\n                    if (shouldBreak) {\n                        // Add current group\n                        if (tempGroup.length > 0) {\n                            sanitizedGroups.push(tempGroup);\n                        }\n                        // Start a new group. Include the current note if the group\n                        // was broken up by stem direction, as that note needs to start\n                        // the next group of notes\n                        tempGroup = breakOnStemChange ? [note] : [];\n                    }\n                    else {\n                        // Add note to group\n                        tempGroup.push(note);\n                    }\n                });\n                // If there is a remaining group, add it as well\n                if (tempGroup.length > 0) {\n                    sanitizedGroups.push(tempGroup);\n                }\n            });\n            noteGroups = sanitizedGroups;\n        }\n        function formatStems() {\n            noteGroups.forEach((group) => {\n                let stemDirection;\n                if (config.maintain_stem_directions) {\n                    const note = findFirstNote(group);\n                    stemDirection = note ? note.getStemDirection() : Stem.UP;\n                }\n                else {\n                    if (config.stem_direction) {\n                        stemDirection = config.stem_direction;\n                    }\n                    else {\n                        stemDirection = calculateStemDirection(group);\n                    }\n                }\n                applyStemDirection(group, stemDirection);\n            });\n        }\n        function findFirstNote(group) {\n            for (let i = 0; i < group.length; i++) {\n                const note = group[i];\n                if (!note.isRest()) {\n                    return note;\n                }\n            }\n            return false;\n        }\n        function applyStemDirection(group, direction) {\n            group.forEach((note) => {\n                note.setStemDirection(direction);\n            });\n        }\n        // Get all of the tuplets in all of the note groups\n        function getTuplets() {\n            const uniqueTuplets = [];\n            // Go through all of the note groups and inspect for tuplets\n            noteGroups.forEach((group) => {\n                let tuplet;\n                group.forEach((note) => {\n                    const noteTuplet = note.getTuplet();\n                    if (noteTuplet && tuplet !== noteTuplet) {\n                        tuplet = noteTuplet;\n                        uniqueTuplets.push(tuplet);\n                    }\n                });\n            });\n            return uniqueTuplets;\n        }\n        // Using closures to store the variables throughout the various functions\n        // IMO Keeps it this process lot cleaner - but not super consistent with\n        // the rest of the API's style - Silverwolf90 (Cyril)\n        createGroups();\n        sanitizeGroups();\n        formatStems();\n        // Get the notes to be beamed\n        const beamedNoteGroups = getBeamGroups();\n        // Get the tuplets in order to format them accurately\n        const allTuplets = getTuplets();\n        // Create a Vex.Flow.Beam from each group of notes to be beamed\n        const beams = [];\n        beamedNoteGroups.forEach((group) => {\n            const beam = new Beam(group);\n            if (config.show_stemlets) {\n                beam.render_options.show_stemlets = true;\n            }\n            if (config.secondary_breaks) {\n                beam.render_options.secondary_break_ticks = Tables.durationToTicks(config.secondary_breaks);\n            }\n            if (config.flat_beams === true) {\n                beam.render_options.flat_beams = true;\n                beam.render_options.flat_beam_offset = config.flat_beam_offset;\n            }\n            beams.push(beam);\n        });\n        // Reformat tuplets\n        allTuplets.forEach((tuplet) => {\n            // Set the tuplet location based on the stem direction\n            const direction = tuplet.notes[0].stem_direction === Stem.DOWN ? TupletLocation.BOTTOM : TupletLocation.TOP;\n            tuplet.setTupletLocation(direction);\n            // If any of the notes in the tuplet are not beamed, draw a bracket.\n            let bracketed = false;\n            for (let i = 0; i < tuplet.notes.length; i++) {\n                const note = tuplet.notes[i];\n                if (!note.hasBeam()) {\n                    bracketed = true;\n                    break;\n                }\n            }\n            tuplet.setBracketed(bracketed);\n        });\n        return beams;\n    }\n    /** Get the notes in this beam. */\n    getNotes() {\n        return this.notes;\n    }\n    /** Get the max number of beams in the set of notes. */\n    getBeamCount() {\n        const beamCounts = this.notes.map((note) => note.getGlyph().beam_count);\n        const maxBeamCount = beamCounts.reduce((max, beamCount) => (beamCount > max ? beamCount : max));\n        return maxBeamCount;\n    }\n    /** Set which note `indices` to break the secondary beam at. */\n    breakSecondaryAt(indices) {\n        this.break_on_indices = indices;\n        return this;\n    }\n    /**\n     * Forces the direction of a partial beam (a secondary-level beam that exists\n     * on one note only of the beam group). This is useful in rhythms such as 6/8\n     * eighth-sixteenth-eighth-sixteenth, where the direction of the beam on the\n     * first sixteenth note can help imply whether the rhythm is to be felt as\n     * three groups of eighth notes (typical) or as two groups of three-sixteenths\n     * (less common):\n     * ```\n     *  ┌───┬──┬──┐      ┌──┬──┬──┐\n     *  │   ├─ │ ─┤  vs  │ ─┤  │ ─┤\n     *  │   │  │  │      │  │  │  │\n     * ```\n     */\n    setPartialBeamSideAt(noteIndex, side) {\n        this.forcedPartialDirections[noteIndex] = side;\n        return this;\n    }\n    /**\n     * Restore the default direction of a partial beam (a secondary-level beam\n     * that does not connect to any other notes).\n     */\n    unsetPartialBeamSideAt(noteIndex) {\n        delete this.forcedPartialDirections[noteIndex];\n        return this;\n    }\n    /** Return the y coordinate for linear function. */\n    getSlopeY(x, first_x_px, first_y_px, slope) {\n        return first_y_px + (x - first_x_px) * slope;\n    }\n    /** Calculate the best possible slope for the provided notes. */\n    calculateSlope() {\n        const { notes, stem_direction: stemDirection, render_options: { max_slope, min_slope, slope_iterations, slope_cost }, } = this;\n        const firstNote = notes[0];\n        const initialSlope = getStemSlope(firstNote, notes[notes.length - 1]);\n        const increment = (max_slope - min_slope) / slope_iterations;\n        let minCost = Number.MAX_VALUE;\n        let bestSlope = 0;\n        let yShift = 0;\n        // iterate through slope values to find best weighted fit\n        for (let slope = min_slope; slope <= max_slope; slope += increment) {\n            let totalStemExtension = 0;\n            let yShiftTemp = 0;\n            // iterate through notes, calculating y shift and stem extension\n            for (let i = 1; i < notes.length; ++i) {\n                const note = notes[i];\n                if (note.hasStem() || note.isRest()) {\n                    const adjustedStemTipY = this.getSlopeY(note.getStemX(), firstNote.getStemX(), firstNote.getStemExtents().topY, slope) + yShiftTemp;\n                    const stemTipY = note.getStemExtents().topY;\n                    // beam needs to be shifted up to accommodate note\n                    if (stemTipY * stemDirection < adjustedStemTipY * stemDirection) {\n                        const diff = Math.abs(stemTipY - adjustedStemTipY);\n                        yShiftTemp += diff * -stemDirection;\n                        totalStemExtension += diff * i;\n                    }\n                    else {\n                        // beam overshoots note, account for the difference\n                        totalStemExtension += (stemTipY - adjustedStemTipY) * stemDirection;\n                    }\n                }\n            }\n            // most engraving books suggest aiming for a slope about half the angle of the\n            // difference between the first and last notes' stem length;\n            const idealSlope = initialSlope / 2;\n            const distanceFromIdeal = Math.abs(idealSlope - slope);\n            // This tries to align most beams to something closer to the idealSlope, but\n            // doesn't go crazy. To disable, set this.render_options.slope_cost = 0\n            const cost = slope_cost * distanceFromIdeal + Math.abs(totalStemExtension);\n            // update state when a more ideal slope is found\n            if (cost < minCost) {\n                minCost = cost;\n                bestSlope = slope;\n                yShift = yShiftTemp;\n            }\n        }\n        this.slope = bestSlope;\n        this.y_shift = yShift;\n    }\n    /** Calculate a slope and y-shift for flat beams. */\n    calculateFlatSlope() {\n        const { notes, stem_direction, render_options: { beam_width, min_flat_beam_offset, flat_beam_offset }, } = this;\n        // If a flat beam offset has not yet been supplied or calculated,\n        // generate one based on the notes in this particular note group\n        let total = 0;\n        let extremeY = 0; // Store the highest or lowest note here\n        let extremeBeamCount = 0; // The beam count of the extreme note\n        let currentExtreme = 0;\n        for (let i = 0; i < notes.length; i++) {\n            // Total up all of the offsets so we can average them out later\n            const note = notes[i];\n            const stemTipY = note.getStemExtents().topY;\n            total += stemTipY;\n            // Store the highest (stems-up) or lowest (stems-down) note so the\n            //  offset can be adjusted in case the average isn't enough\n            if (stem_direction === Stem.DOWN && currentExtreme < stemTipY) {\n                currentExtreme = stemTipY;\n                extremeY = Math.max(...note.getYs());\n                extremeBeamCount = note.getBeamCount();\n            }\n            else if (stem_direction === Stem.UP && (currentExtreme === 0 || currentExtreme > stemTipY)) {\n                currentExtreme = stemTipY;\n                extremeY = Math.min(...note.getYs());\n                extremeBeamCount = note.getBeamCount();\n            }\n        }\n        // Average the offsets to try and come up with a reasonable one that\n        //  works for all of the notes in the beam group.\n        let offset = total / notes.length;\n        // In case the average isn't long enough, add or subtract some more\n        //  based on the highest or lowest note (again, based on the stem\n        //  direction). This also takes into account the added height due to\n        //  the width of the beams.\n        const beamWidth = beam_width * 1.5;\n        const extremeTest = min_flat_beam_offset + extremeBeamCount * beamWidth;\n        const newOffset = extremeY + extremeTest * -stem_direction;\n        if (stem_direction === Stem.DOWN && offset < newOffset) {\n            offset = extremeY + extremeTest;\n        }\n        else if (stem_direction === Stem.UP && offset > newOffset) {\n            offset = extremeY - extremeTest;\n        }\n        if (!flat_beam_offset) {\n            // Set the offset for the group based on the calculations above.\n            this.render_options.flat_beam_offset = offset;\n        }\n        else if (stem_direction === Stem.DOWN && offset > flat_beam_offset) {\n            this.render_options.flat_beam_offset = offset;\n        }\n        else if (stem_direction === Stem.UP && offset < flat_beam_offset) {\n            this.render_options.flat_beam_offset = offset;\n        }\n        // for flat beams, the slope and y_shift are simply 0\n        this.slope = 0;\n        this.y_shift = 0;\n    }\n    /** Return the Beam y offset. */\n    getBeamYToDraw() {\n        const firstNote = this.notes[0];\n        const firstStemTipY = firstNote.getStemExtents().topY;\n        let beamY = firstStemTipY;\n        // For flat beams, set the first and last Y to the offset, rather than\n        //  using the note's stem extents.\n        if (this.render_options.flat_beams && this.render_options.flat_beam_offset) {\n            beamY = this.render_options.flat_beam_offset;\n        }\n        return beamY;\n    }\n    /**\n     * Create new stems for the notes in the beam, so that each stem\n     * extends into the beams.\n     */\n    applyStemExtensions() {\n        const { notes, slope, y_shift, stem_direction, beam_count, render_options: { show_stemlets, stemlet_extension, beam_width }, } = this;\n        const firstNote = notes[0];\n        const firstStemTipY = this.getBeamYToDraw();\n        const firstStemX = firstNote.getStemX();\n        for (let i = 0; i < notes.length; ++i) {\n            const note = notes[i];\n            const stem = note.getStem();\n            if (stem) {\n                const stemX = note.getStemX();\n                const { topY: stemTipY } = note.getStemExtents();\n                const beamedStemTipY = this.getSlopeY(stemX, firstStemX, firstStemTipY, slope) + y_shift;\n                const preBeamExtension = stem.getExtension();\n                const beamExtension = stem_direction === Stem.UP ? stemTipY - beamedStemTipY : beamedStemTipY - stemTipY;\n                stem.setExtension(preBeamExtension + beamExtension);\n                stem.adjustHeightForBeam();\n                if (note.isRest() && show_stemlets) {\n                    const beamWidth = beam_width;\n                    const totalBeamWidth = (beam_count - 1) * beamWidth * 1.5 + beamWidth;\n                    stem.setVisibility(true).setStemlet(true, totalBeamWidth + stemlet_extension);\n                }\n            }\n        }\n    }\n    /** Return upper level beam direction. */\n    lookupBeamDirection(duration, prev_tick, tick, next_tick, noteIndex) {\n        if (duration === '4') {\n            return BEAM_LEFT;\n        }\n        const forcedBeamDirection = this.forcedPartialDirections[noteIndex];\n        if (forcedBeamDirection)\n            return forcedBeamDirection;\n        const lookup_duration = `${Tables.durationToNumber(duration) / 2}`;\n        const prev_note_gets_beam = prev_tick < Tables.durationToTicks(lookup_duration);\n        const next_note_gets_beam = next_tick < Tables.durationToTicks(lookup_duration);\n        const note_gets_beam = tick < Tables.durationToTicks(lookup_duration);\n        if (prev_note_gets_beam && next_note_gets_beam && note_gets_beam) {\n            return BEAM_BOTH;\n        }\n        else if (prev_note_gets_beam && !next_note_gets_beam && note_gets_beam) {\n            return BEAM_LEFT;\n        }\n        else if (!prev_note_gets_beam && next_note_gets_beam && note_gets_beam) {\n            return BEAM_RIGHT;\n        }\n        return this.lookupBeamDirection(lookup_duration, prev_tick, tick, next_tick, noteIndex);\n    }\n    /** Get the x coordinates for the beam lines of specific `duration`. */\n    getBeamLines(duration) {\n        const tick_of_duration = Tables.durationToTicks(duration);\n        let beam_started = false;\n        const beam_lines = [];\n        let current_beam = undefined;\n        const partial_beam_length = this.render_options.partial_beam_length;\n        let previous_should_break = false;\n        let tick_tally = 0;\n        for (let i = 0; i < this.notes.length; ++i) {\n            const note = this.notes[i];\n            // See if we need to break secondary beams on this note.\n            const ticks = note.getTicks().value();\n            tick_tally += ticks;\n            let should_break = false;\n            // 8th note beams are always drawn.\n            if (parseInt(duration, 10) >= 8) {\n                // First, check to see if any indices were set up through breakSecondaryAt()\n                should_break = this.break_on_indices.indexOf(i) !== -1;\n                // If the secondary breaks were auto-configured in the render options,\n                //  handle that as well.\n                if (this.render_options.secondary_break_ticks && tick_tally >= this.render_options.secondary_break_ticks) {\n                    tick_tally = 0;\n                    should_break = true;\n                }\n            }\n            const note_gets_beam = note.getIntrinsicTicks() < tick_of_duration;\n            const stem_x = note.getStemX() - Stem.WIDTH / 2;\n            // Check to see if the next note in the group will get a beam at this\n            //  level. This will help to inform the partial beam logic below.\n            const prev_note = this.notes[i - 1];\n            const next_note = this.notes[i + 1];\n            const next_note_gets_beam = next_note && next_note.getIntrinsicTicks() < tick_of_duration;\n            const prev_note_gets_beam = prev_note && prev_note.getIntrinsicTicks() < tick_of_duration;\n            const beam_alone = prev_note && next_note && note_gets_beam && !prev_note_gets_beam && !next_note_gets_beam;\n            // const beam_alone = note_gets_beam && !prev_note_gets_beam && !next_note_gets_beam;\n            if (note_gets_beam) {\n                // This note gets a beam at the current level\n                if (beam_started) {\n                    // We're currently in the middle of a beam. Just continue it on to\n                    //  the stem X of the current note.\n                    current_beam = beam_lines[beam_lines.length - 1];\n                    current_beam.end = stem_x;\n                    // If a secondary beam break is set up, end the beam right now.\n                    if (should_break) {\n                        beam_started = false;\n                        if (next_note && !next_note_gets_beam && current_beam.end === undefined) {\n                            // This note gets a beam,.but the next one does not. This means\n                            //  we need a partial pointing right.\n                            current_beam.end = current_beam.start - partial_beam_length;\n                        }\n                    }\n                }\n                else {\n                    // No beam started yet. Start a new one.\n                    current_beam = { start: stem_x, end: undefined };\n                    beam_started = true;\n                    if (beam_alone) {\n                        // previous and next beam exists and does not get a beam but current gets it.\n                        const prev_tick = prev_note.getIntrinsicTicks();\n                        const next_tick = next_note.getIntrinsicTicks();\n                        const tick = note.getIntrinsicTicks();\n                        const beam_direction = this.lookupBeamDirection(duration, prev_tick, tick, next_tick, i);\n                        if ([BEAM_LEFT, BEAM_BOTH].includes(beam_direction)) {\n                            current_beam.end = current_beam.start - partial_beam_length;\n                        }\n                        else {\n                            current_beam.end = current_beam.start + partial_beam_length;\n                        }\n                    }\n                    else if (!next_note_gets_beam) {\n                        // The next note doesn't get a beam. Draw a partial.\n                        if ((previous_should_break || i === 0) && next_note) {\n                            // This is the first note (but not the last one), or it is\n                            //  following a secondary break. Draw a partial to the right.\n                            current_beam.end = current_beam.start + partial_beam_length;\n                        }\n                        else {\n                            // By default, draw a partial to the left.\n                            current_beam.end = current_beam.start - partial_beam_length;\n                        }\n                    }\n                    else if (should_break) {\n                        // This note should have a secondary break after it. Even though\n                        //  we just started a beam, it needs to end immediately.\n                        current_beam.end = current_beam.start - partial_beam_length;\n                        beam_started = false;\n                    }\n                    beam_lines.push(current_beam);\n                }\n            }\n            else {\n                // The current note does not get a beam.\n                beam_started = false;\n            }\n            // Store the secondary break flag to inform the partial beam logic in\n            //  the next iteration of the loop.\n            previous_should_break = should_break;\n        }\n        // Add a partial beam pointing left if this is the last note in the group\n        const last_beam = beam_lines[beam_lines.length - 1];\n        if (last_beam && last_beam.end === undefined) {\n            last_beam.end = last_beam.start - partial_beam_length;\n        }\n        return beam_lines;\n    }\n    /** Render the stems for each note. */\n    drawStems(ctx) {\n        this.notes.forEach((note) => {\n            const stem = note.getStem();\n            if (stem) {\n                const stem_x = note.getStemX();\n                stem.setNoteHeadXBounds(stem_x, stem_x);\n                ctx.openGroup('stem', note.getAttribute('id') + '-stem');\n                stem.setContext(ctx).draw();\n                ctx.closeGroup();\n            }\n        }, this);\n    }\n    // Render the beam lines\n    drawBeamLines(ctx) {\n        const valid_beam_durations = ['4', '8', '16', '32', '64'];\n        const firstNote = this.notes[0];\n        let beamY = this.getBeamYToDraw();\n        const firstStemX = firstNote.getStemX();\n        const beamThickness = this.render_options.beam_width * this.stem_direction;\n        // Draw the beams.\n        for (let i = 0; i < valid_beam_durations.length; ++i) {\n            const duration = valid_beam_durations[i];\n            const beamLines = this.getBeamLines(duration);\n            for (let j = 0; j < beamLines.length; ++j) {\n                const beam_line = beamLines[j];\n                const startBeamX = beam_line.start;\n                const startBeamY = this.getSlopeY(startBeamX, firstStemX, beamY, this.slope);\n                const lastBeamX = beam_line.end;\n                if (lastBeamX) {\n                    const lastBeamY = this.getSlopeY(lastBeamX, firstStemX, beamY, this.slope);\n                    this.setAttribute('el', ctx.openGroup('beam'));\n                    ctx.beginPath();\n                    ctx.moveTo(startBeamX, startBeamY);\n                    ctx.lineTo(startBeamX, startBeamY + beamThickness);\n                    ctx.lineTo(lastBeamX + 1, lastBeamY + beamThickness);\n                    ctx.lineTo(lastBeamX + 1, lastBeamY);\n                    ctx.closePath();\n                    ctx.fill();\n                    ctx.closeGroup();\n                }\n                else {\n                    throw new RuntimeError('NoLastBeamX', 'lastBeamX undefined.');\n                }\n            }\n            beamY += beamThickness * 1.5;\n        }\n    }\n    /** Pre-format the beam. */\n    preFormat() {\n        return this;\n    }\n    /**\n     * Post-format the beam. This can only be called after\n     * the notes in the beam have both `x` and `y` values. ie: they've\n     * been formatted and have staves.\n     */\n    postFormat() {\n        if (this.postFormatted)\n            return;\n        // Calculate a smart slope if we're not forcing the beams to be flat.\n        if (isTabNote(this.notes[0]) || this.render_options.flat_beams) {\n            this.calculateFlatSlope();\n        }\n        else {\n            this.calculateSlope();\n        }\n        this.applyStemExtensions();\n        this.postFormatted = true;\n    }\n    /** Render the beam to the canvas context */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        if (this.unbeamable)\n            return;\n        if (!this.postFormatted) {\n            this.postFormat();\n        }\n        this.drawStems(ctx);\n        this.applyStyle();\n        this.drawBeamLines(ctx);\n        this.restoreStyle();\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\n// MIT License\nimport { Clef } from './clef';\nimport { Glyph } from './glyph';\nimport { Note } from './note';\nimport { Category } from './typeguard';\n/** ClefNote implements clef annotations in measures. */\nexport class ClefNote extends Note {\n    constructor(type, size, annotation) {\n        super({ duration: 'b' });\n        this.type = type;\n        this.clef_obj = new Clef(type, size, annotation);\n        this.clef = this.clef_obj.clef;\n        this.glyph = new Glyph(this.clef.code, this.clef.point);\n        this.setWidth(this.glyph.getMetrics().width);\n        // Note properties\n        this.ignore_ticks = true;\n    }\n    static get CATEGORY() {\n        return Category.ClefNote;\n    }\n    /** Set clef type, size and annotation. */\n    setType(type, size, annotation) {\n        this.type = type;\n        this.clef_obj = new Clef(type, size, annotation);\n        this.clef = this.clef_obj.clef;\n        this.glyph = new Glyph(this.clef.code, this.clef.point);\n        this.setWidth(this.glyph.getMetrics().width);\n        return this;\n    }\n    /** Get associated clef. */\n    getClef() {\n        return this.clef;\n    }\n    /** Set associated context. */\n    setContext(context) {\n        super.setContext(context);\n        this.glyph.setContext(this.getContext());\n        return this;\n    }\n    /** Get bounding box. */\n    getBoundingBox() {\n        return super.getBoundingBox();\n    }\n    /* Overridden to ignore */\n    // eslint-disable-next-line\n    addToModifierContext(mc) {\n        // DO NOTHING.\n        return this;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    /** Render clef note. */\n    draw() {\n        var _a;\n        const stave = this.checkStave();\n        if (!this.glyph.getContext()) {\n            this.glyph.setContext(this.getContext());\n        }\n        this.setRendered();\n        const abs_x = this.getAbsoluteX();\n        this.glyph.setStave(stave);\n        this.glyph.setYShift(stave.getYForLine((_a = this.clef.line) !== null && _a !== void 0 ? _a : 0) - stave.getYForGlyphs());\n        this.glyph.renderToStave(abs_x);\n        // If the Vex.Flow.Clef has an annotation, such as 8va, draw it.\n        if (this.clef_obj.annotation !== undefined) {\n            const attachment = new Glyph(this.clef_obj.annotation.code, this.clef_obj.annotation.point);\n            if (!attachment.getContext()) {\n                attachment.setContext(this.getContext());\n            }\n            attachment.setStave(stave);\n            attachment.setYShift(stave.getYForLine(this.clef_obj.annotation.line) - stave.getYForGlyphs());\n            attachment.setXShift(this.clef_obj.annotation.x_shift);\n            attachment.renderToStave(abs_x);\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// This file implements the `Crescendo` object which draws crescendos and\n// decrescendo dynamics markings. A `Crescendo` is initialized with a\n// duration and formatted as part of a `Voice` like any other `Note`\n// type in VexFlow. This object would most likely be formatted in a Voice\n// with `TextNotes` - which are used to represent other dynamics markings.\nimport { Note } from './note';\nimport { TickContext } from './tickcontext';\nimport { Category } from './typeguard';\nimport { log } from './util';\n// To enable logging for this class. Set `Vex.Flow.Crescendo.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Crescendo.DEBUG)\n        log('Vex.Flow.Crescendo', args);\n}\n// Private helper to draw the hairpin\nfunction renderHairpin(ctx, params) {\n    const begin_x = params.begin_x;\n    const end_x = params.end_x;\n    const y = params.y;\n    const half_height = params.height / 2;\n    ctx.beginPath();\n    if (params.reverse) {\n        ctx.moveTo(begin_x, y - half_height);\n        ctx.lineTo(end_x, y);\n        ctx.lineTo(begin_x, y + half_height);\n    }\n    else {\n        ctx.moveTo(end_x, y - half_height);\n        ctx.lineTo(begin_x, y);\n        ctx.lineTo(end_x, y + half_height);\n    }\n    ctx.stroke();\n    ctx.closePath();\n}\nexport class Crescendo extends Note {\n    // Initialize the crescendo's properties\n    constructor(noteStruct) {\n        super(noteStruct);\n        this.options = {\n            // Extensions to the length of the crescendo on either side\n            extend_left: 0,\n            extend_right: 0,\n            // Vertical shift\n            y_shift: 0,\n        };\n        // Whether the object is a decrescendo\n        this.decrescendo = false;\n        // The staff line to be placed on\n        this.line = noteStruct.line || 0;\n        // The height at the open end of the cresc/decresc\n        this.height = 15;\n    }\n    /** Crescendo category string. */\n    static get CATEGORY() {\n        return Category.Crescendo;\n    }\n    // Set the line to center the element on\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    // Set the full height at the open end\n    setHeight(height) {\n        this.height = height;\n        return this;\n    }\n    // Set whether the sign should be a descresendo by passing a bool\n    // to `decresc`\n    setDecrescendo(decresc) {\n        this.decrescendo = decresc;\n        return this;\n    }\n    // Preformat the note\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    // Render the Crescendo object onto the canvas\n    draw() {\n        const ctx = this.checkContext();\n        const stave = this.checkStave();\n        this.setRendered();\n        const tick_context = this.getTickContext();\n        const next_context = TickContext.getNextContext(tick_context);\n        const begin_x = this.getAbsoluteX();\n        const end_x = next_context ? next_context.getX() : stave.getX() + stave.getWidth();\n        const y = stave.getYForLine(this.line + -3) + 1;\n        L('Drawing ', this.decrescendo ? 'decrescendo ' : 'crescendo ', this.height, 'x', begin_x - end_x);\n        renderHairpin(ctx, {\n            begin_x: begin_x - this.options.extend_left,\n            end_x: end_x + this.options.extend_right,\n            y: y + this.options.y_shift,\n            height: this.height,\n            reverse: this.decrescendo,\n        });\n    }\n}\nCrescendo.DEBUG = false;\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements curves (for slurs)\nimport { Element } from './element';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport var CurvePosition;\n(function (CurvePosition) {\n    CurvePosition[CurvePosition[\"NEAR_HEAD\"] = 1] = \"NEAR_HEAD\";\n    CurvePosition[CurvePosition[\"NEAR_TOP\"] = 2] = \"NEAR_TOP\";\n})(CurvePosition || (CurvePosition = {}));\nexport class Curve extends Element {\n    // from: Start note\n    // to: End note\n    // options:\n    //    cps: List of control points\n    //    x_shift: pixels to shift\n    //    y_shift: pixels to shift\n    constructor(from, to, options) {\n        super();\n        this.render_options = Object.assign({ thickness: 2, x_shift: 0, y_shift: 10, position: CurvePosition.NEAR_HEAD, position_end: CurvePosition.NEAR_HEAD, invert: false, cps: [\n                { x: 0, y: 10 },\n                { x: 0, y: 10 },\n            ] }, options);\n        this.from = from;\n        this.to = to;\n    }\n    static get CATEGORY() {\n        return Category.Curve;\n    }\n    static get Position() {\n        return CurvePosition;\n    }\n    static get PositionString() {\n        return {\n            nearHead: CurvePosition.NEAR_HEAD,\n            nearTop: CurvePosition.NEAR_TOP,\n        };\n    }\n    setNotes(from, to) {\n        if (!from && !to) {\n            throw new RuntimeError('BadArguments', 'Curve needs to have either `from` or `to` set.');\n        }\n        this.from = from;\n        this.to = to;\n        return this;\n    }\n    /**\n     * @return {boolean} Returns true if this is a partial bar.\n     */\n    isPartial() {\n        return !this.from || !this.to;\n    }\n    renderCurve(params) {\n        const ctx = this.checkContext();\n        const x_shift = this.render_options.x_shift;\n        const y_shift = this.render_options.y_shift * params.direction;\n        const first_x = params.first_x + x_shift;\n        const first_y = params.first_y + y_shift;\n        const last_x = params.last_x - x_shift;\n        const last_y = params.last_y + y_shift;\n        const thickness = this.render_options.thickness;\n        const cps = this.render_options.cps;\n        const { x: cp0x, y: cp0y } = cps[0];\n        const { x: cp1x, y: cp1y } = cps[1];\n        const cp_spacing = (last_x - first_x) / (cps.length + 2);\n        ctx.beginPath();\n        ctx.moveTo(first_x, first_y);\n        ctx.bezierCurveTo(first_x + cp_spacing + cp0x, first_y + cp0y * params.direction, last_x - cp_spacing + cp1x, last_y + cp1y * params.direction, last_x, last_y);\n        ctx.bezierCurveTo(last_x - cp_spacing + cp1x, last_y + (cp1y + thickness) * params.direction, first_x + cp_spacing + cp0x, first_y + (cp0y + thickness) * params.direction, first_x, first_y);\n        ctx.stroke();\n        ctx.closePath();\n        ctx.fill();\n    }\n    draw() {\n        this.checkContext();\n        this.setRendered();\n        const first_note = this.from;\n        const last_note = this.to;\n        let first_x;\n        let last_x;\n        let first_y;\n        let last_y;\n        let stem_direction = 0;\n        let metric = 'baseY';\n        let end_metric = 'baseY';\n        function getPosition(position) {\n            return typeof position === 'string' ? Curve.PositionString[position] : position;\n        }\n        const position = getPosition(this.render_options.position);\n        const position_end = getPosition(this.render_options.position_end);\n        if (position === CurvePosition.NEAR_TOP) {\n            metric = 'topY';\n            end_metric = 'topY';\n        }\n        if (position_end === CurvePosition.NEAR_HEAD) {\n            end_metric = 'baseY';\n        }\n        else if (position_end === CurvePosition.NEAR_TOP) {\n            end_metric = 'topY';\n        }\n        if (first_note) {\n            first_x = first_note.getTieRightX();\n            stem_direction = first_note.getStemDirection();\n            first_y = first_note.getStemExtents()[metric];\n        }\n        else {\n            const stave = last_note.checkStave();\n            first_x = stave.getTieStartX();\n            first_y = last_note.getStemExtents()[metric];\n        }\n        if (last_note) {\n            last_x = last_note.getTieLeftX();\n            stem_direction = last_note.getStemDirection();\n            last_y = last_note.getStemExtents()[end_metric];\n        }\n        else {\n            const stave = first_note.checkStave();\n            last_x = stave.getTieEndX();\n            last_y = first_note.getStemExtents()[end_metric];\n        }\n        this.renderCurve({\n            first_x,\n            last_x,\n            first_y,\n            last_y,\n            direction: stem_direction * (this.render_options.invert === true ? -1 : 1),\n        });\n        return true;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// A generic text parsing class for VexFlow.\nimport { log, RuntimeError } from './util';\n// To enable logging for this class. Set `Vex.Flow.Parser.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Parser.DEBUG)\n        log('Vex.Flow.Parser', args);\n}\nconst NO_ERROR_POS = -1;\n// Converts parser results into an easy to reference list that can be\n// used in triggers. This function returns:\n// - nested array in which the leaf elements are string or null\n// - string (including empty strings)\n// - null\nfunction flattenMatches(r) {\n    if ('matchedString' in r)\n        return r.matchedString; // string\n    if ('results' in r)\n        return flattenMatches(r.results);\n    const results = r;\n    if (results.length === 1)\n        return flattenMatches(results[0]);\n    if (results.length === 0)\n        return null;\n    return results.map(flattenMatches); // nested array\n}\n// This is the base parser class. Given an arbitrary context-free grammar, it\n// can parse any line and execute code when specific rules are met (e.g.,\n// when a string is terminated.)\nexport class Parser {\n    // For an example of a simple grammar, take a look at tests/parser_tests.ts or\n    // the EasyScore grammar in easyscore.ts.\n    constructor(grammar) {\n        this.grammar = grammar;\n        this.line = '';\n        this.pos = 0;\n        this.errorPos = NO_ERROR_POS;\n    }\n    // Parse `line` using current grammar. Returns `{success: true}` if the\n    // line parsed correctly, otherwise returns `{success: false, errorPos: N}`\n    // where `errorPos` is the location of the error in the string.\n    parse(line) {\n        this.line = line;\n        this.pos = 0;\n        this.errorPos = NO_ERROR_POS;\n        const result = this.expect(this.grammar.begin());\n        result.errorPos = this.errorPos;\n        return result;\n    }\n    matchFail(returnPos) {\n        if (this.errorPos === NO_ERROR_POS)\n            this.errorPos = this.pos;\n        this.pos = returnPos;\n    }\n    matchSuccess() {\n        this.errorPos = NO_ERROR_POS;\n    }\n    // Look for `token` in this.line[this.pos], and return success\n    // if one is found. `token` is specified as a regular expression.\n    matchToken(token, noSpace = false) {\n        const regexp = noSpace ? new RegExp('^((' + token + '))') : new RegExp('^((' + token + ')\\\\s*)');\n        const workingLine = this.line.slice(this.pos);\n        const result = workingLine.match(regexp);\n        if (result !== null) {\n            return {\n                success: true,\n                matchedString: result[2],\n                incrementPos: result[1].length,\n                pos: this.pos,\n            };\n        }\n        else {\n            return { success: false, pos: this.pos };\n        }\n    }\n    // Execute rule to match a sequence of tokens (or rules). If `maybe` is\n    // set, then return success even if the token is not found, but reset\n    // the position before exiting.\n    // TODO: expectOne(...) is never called with the `maybe` parameter.\n    expectOne(rule, maybe = false) {\n        const results = [];\n        const pos = this.pos;\n        let allMatches = true;\n        let oneMatch = false;\n        maybe = maybe === true || rule.maybe === true;\n        // Execute all sub rules in sequence.\n        if (rule.expect) {\n            for (const next of rule.expect) {\n                const localPos = this.pos;\n                const result = this.expect(next);\n                // If `rule.or` is set, then return success if any one\n                // of the subrules match, else all subrules must match.\n                if (result.success) {\n                    results.push(result);\n                    oneMatch = true;\n                    if (rule.or)\n                        break;\n                }\n                else {\n                    allMatches = false;\n                    if (!rule.or) {\n                        this.pos = localPos;\n                        break;\n                    }\n                }\n            }\n        }\n        const gotOne = (rule.or && oneMatch) || allMatches;\n        const success = gotOne || maybe === true;\n        const numMatches = gotOne ? 1 : 0;\n        if (maybe && !gotOne)\n            this.pos = pos;\n        if (success) {\n            this.matchSuccess();\n        }\n        else {\n            this.matchFail(pos);\n        }\n        return { success, results, numMatches };\n    }\n    // Try to match multiple (one or more) instances of the rule. If `maybe` is set,\n    // then a failed match is also a success (but the position is reset).\n    expectOneOrMore(rule, maybe = false) {\n        const results = [];\n        const pos = this.pos;\n        let numMatches = 0;\n        let more = true;\n        do {\n            const result = this.expectOne(rule);\n            if (result.success && result.results) {\n                numMatches++;\n                results.push(result.results);\n            }\n            else {\n                more = false;\n            }\n        } while (more);\n        const success = numMatches > 0 || maybe === true;\n        if (maybe && !(numMatches > 0))\n            this.pos = pos;\n        if (success) {\n            this.matchSuccess();\n        }\n        else {\n            this.matchFail(pos);\n        }\n        return { success, results, numMatches };\n    }\n    // Match zero or more instances of `rule`. Offloads to `expectOneOrMore`.\n    expectZeroOrMore(rule) {\n        return this.expectOneOrMore(rule, true);\n    }\n    // Execute the rule produced by the provided `rules` function. This\n    // offloads to one of the above matchers and consolidates the results. It is also\n    // responsible for executing any code triggered by the rule (in `rule.run`.)\n    expect(ruleFunc) {\n        L('Evaluating rule function:', ruleFunc);\n        if (!ruleFunc) {\n            throw new RuntimeError('Invalid rule function');\n        }\n        let result;\n        // Get rule from Grammar class.\n        // expect(...) handles both lexing & parsing:\n        // - lexer rules produce tokens.\n        // - parser rules produce expressions which may trigger code via the\n        //   { run: () => ... } trigger functions in easyscore.ts.\n        //   These functions build the VexFlow objects that are displayed on screen.\n        const rule = ruleFunc.bind(this.grammar)();\n        if (rule.token) {\n            // A lexer rule has a `token` property.\n            // Base case: parse the regex and throw an error if the\n            // line doesn't match.\n            result = this.matchToken(rule.token, rule.noSpace === true);\n            if (result.success) {\n                // Token match! Update position and throw away parsed portion\n                // of string.\n                this.pos += result.incrementPos;\n            }\n        }\n        else if (rule.expect) {\n            // A parser rule has an `expect` property.\n            if (rule.oneOrMore) {\n                result = this.expectOneOrMore(rule);\n            }\n            else if (rule.zeroOrMore) {\n                result = this.expectZeroOrMore(rule);\n            }\n            else {\n                result = this.expectOne(rule);\n            }\n        }\n        else {\n            L(rule);\n            throw new RuntimeError('Bad grammar! No `token` or `expect` property ' + rule);\n        }\n        // If there's a trigger attached to this rule, then run it.\n        // Make the matches accessible through `state.matches` in the\n        // `run: (state) => ...` trigger.\n        const matches = [];\n        result.matches = matches;\n        if (result.results) {\n            result.results.forEach((r) => matches.push(flattenMatches(r)));\n        }\n        if (rule.run && result.success) {\n            rule.run({ matches });\n        }\n        return result;\n    }\n}\nParser.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Articulation } from './articulation';\nimport { Dot } from './dot';\nimport { FretHandFinger } from './frethandfinger';\nimport { Music } from './music';\nimport { Parser } from './parser';\nimport { Stem } from './stem';\nimport { defined, log, RuntimeError } from './util';\n// To enable logging for this class. Set `Vex.Flow.EasyScore.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (EasyScore.DEBUG)\n        log('Vex.Flow.EasyScore', args);\n}\nexport class EasyScoreGrammar {\n    constructor(builder) {\n        this.builder = builder;\n    }\n    begin() {\n        return this.LINE;\n    }\n    LINE() {\n        return {\n            expect: [this.PIECE, this.PIECES, this.EOL],\n        };\n    }\n    PIECE() {\n        return {\n            expect: [this.CHORDORNOTE, this.PARAMS],\n            run: () => this.builder.commitPiece(),\n        };\n    }\n    PIECES() {\n        return {\n            expect: [this.COMMA, this.PIECE],\n            zeroOrMore: true,\n        };\n    }\n    PARAMS() {\n        return {\n            expect: [this.DURATION, this.TYPE, this.DOTS, this.OPTS],\n        };\n    }\n    CHORDORNOTE() {\n        return {\n            expect: [this.CHORD, this.SINGLENOTE],\n            or: true,\n        };\n    }\n    CHORD() {\n        return {\n            expect: [this.LPAREN, this.NOTES, this.RPAREN],\n            // eslint-disable-next-line\n            run: (state) => this.builder.addChord(state.matches[1]),\n        };\n    }\n    NOTES() {\n        return {\n            expect: [this.NOTE],\n            oneOrMore: true,\n        };\n    }\n    NOTE() {\n        return {\n            expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE],\n        };\n    }\n    SINGLENOTE() {\n        return {\n            expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE],\n            run: (state) => {\n                // eslint-disable-next-line\n                const s = state;\n                this.builder.addSingleNote(s.matches[0], s.matches[1], s.matches[2]);\n            },\n        };\n    }\n    ACCIDENTAL() {\n        return {\n            expect: [this.MICROTONES, this.ACCIDENTALS],\n            maybe: true,\n            or: true,\n        };\n    }\n    DOTS() {\n        return {\n            expect: [this.DOT],\n            zeroOrMore: true,\n            // eslint-disable-next-line\n            run: (state) => this.builder.setNoteDots(state.matches),\n        };\n    }\n    TYPE() {\n        return {\n            expect: [this.SLASH, this.MAYBESLASH, this.TYPES],\n            maybe: true,\n            // eslint-disable-next-line\n            run: (state) => this.builder.setNoteType(state.matches[2]),\n        };\n    }\n    DURATION() {\n        return {\n            expect: [this.SLASH, this.DURATIONS],\n            maybe: true,\n            // eslint-disable-next-line\n            run: (state) => this.builder.setNoteDuration(state.matches[1]),\n        };\n    }\n    OPTS() {\n        return {\n            expect: [this.LBRACKET, this.KEYVAL, this.KEYVALS, this.RBRACKET],\n            maybe: true,\n        };\n    }\n    KEYVALS() {\n        return {\n            expect: [this.COMMA, this.KEYVAL],\n            zeroOrMore: true,\n        };\n    }\n    KEYVAL() {\n        const unquote = (str) => str.slice(1, -1);\n        return {\n            expect: [this.KEY, this.EQUALS, this.VAL],\n            // eslint-disable-next-line\n            run: (state) => this.builder.addNoteOption(state.matches[0], unquote(state.matches[2])),\n        };\n    }\n    VAL() {\n        return {\n            expect: [this.SVAL, this.DVAL],\n            or: true,\n        };\n    }\n    KEY() {\n        return { token: '[a-zA-Z][a-zA-Z0-9]*' };\n    }\n    DVAL() {\n        return { token: '[\"][^\"]*[\"]' };\n    }\n    SVAL() {\n        return { token: \"['][^']*[']\" };\n    }\n    NOTENAME() {\n        return { token: '[a-gA-G]' };\n    }\n    OCTAVE() {\n        return { token: '[0-9]+' };\n    }\n    ACCIDENTALS() {\n        return { token: 'bb|b|##|#|n' };\n    }\n    MICROTONES() {\n        return { token: 'bbs|bss|bs|db|d|\\\\+\\\\+-|\\\\+-|\\\\+\\\\+|\\\\+|k|o' };\n    }\n    DURATIONS() {\n        return { token: '[0-9whq]+' };\n    }\n    TYPES() {\n        return { token: '[rRsSmMhHgG]' };\n    }\n    LPAREN() {\n        return { token: '[(]' };\n    }\n    RPAREN() {\n        return { token: '[)]' };\n    }\n    COMMA() {\n        return { token: '[,]' };\n    }\n    DOT() {\n        return { token: '[.]' };\n    }\n    SLASH() {\n        return { token: '[/]' };\n    }\n    MAYBESLASH() {\n        return { token: '[/]?' };\n    }\n    EQUALS() {\n        return { token: '[=]' };\n    }\n    LBRACKET() {\n        return { token: '\\\\[' };\n    }\n    RBRACKET() {\n        return { token: '\\\\]' };\n    }\n    EOL() {\n        return { token: '$' };\n    }\n}\nexport class Piece {\n    constructor(duration) {\n        this.chord = [];\n        this.dots = 0;\n        this.options = {};\n        this.duration = duration;\n    }\n}\nexport class Builder {\n    constructor(factory) {\n        this.commitHooks = [];\n        this.factory = factory;\n        this.reset();\n    }\n    reset(options) {\n        this.options = Object.assign({ stem: 'auto', clef: 'treble' }, options);\n        this.elements = { notes: [], accidentals: [] };\n        this.rollingDuration = '8';\n        this.resetPiece();\n    }\n    getFactory() {\n        return this.factory;\n    }\n    getElements() {\n        return this.elements;\n    }\n    addCommitHook(commitHook) {\n        this.commitHooks.push(commitHook);\n    }\n    resetPiece() {\n        L('resetPiece');\n        this.piece = new Piece(this.rollingDuration);\n    }\n    setNoteDots(dots) {\n        L('setNoteDots:', dots);\n        if (dots)\n            this.piece.dots = dots.length;\n    }\n    setNoteDuration(duration) {\n        L('setNoteDuration:', duration);\n        this.rollingDuration = this.piece.duration = duration || this.rollingDuration;\n    }\n    setNoteType(type) {\n        L('setNoteType:', type);\n        if (type)\n            this.piece.type = type;\n    }\n    addNoteOption(key, value) {\n        L('addNoteOption: key:', key, 'value:', value);\n        this.piece.options[key] = value;\n    }\n    addNote(key, accid, octave) {\n        L('addNote:', key, accid, octave);\n        this.piece.chord.push({\n            key: key,\n            accid,\n            octave,\n        });\n    }\n    addSingleNote(key, accid, octave) {\n        L('addSingleNote:', key, accid, octave);\n        this.addNote(key, accid, octave);\n    }\n    // notes is an array with 3 entries\n    addChord(notes) {\n        L('startChord');\n        if (typeof notes[0] !== 'object') {\n            this.addSingleNote(notes[0]);\n        }\n        else {\n            notes.forEach((n) => {\n                if (n)\n                    this.addNote(...n); // n => [string, string | null, string]\n            });\n        }\n        L('endChord');\n    }\n    commitPiece() {\n        L('commitPiece');\n        const { factory } = this;\n        if (!factory)\n            return;\n        const options = Object.assign(Object.assign({}, this.options), this.piece.options);\n        // reset() sets this.options.stem & this.options.clef but we check to make sure nothing has changed.\n        // e.g., auto | up | down\n        const stem = defined(options.stem, 'BadArguments', 'options.stem is not defined').toLowerCase();\n        // e.g., treble | bass\n        const clef = defined(options.clef, 'BadArguments', 'options.clef is not defined').toLowerCase();\n        const { chord, duration, dots, type } = this.piece;\n        // Create a string[] that will be assigned to the .keys property of the StaveNote.\n        // Each string in the array represents a note pitch and is of the form: {NoteName}{Accidental}/{Octave}\n        // Only standard accidentals are included in the .keys property. Microtonal accidentals are not included.\n        const standardAccidentals = Music.accidentals;\n        const keys = chord.map((notePiece) => {\n            var _a;\n            return notePiece.key +\n                (standardAccidentals.includes((_a = notePiece.accid) !== null && _a !== void 0 ? _a : '') ? notePiece.accid : '') +\n                '/' +\n                notePiece.octave;\n        });\n        const auto_stem = stem === 'auto'; // StaveNoteStruct expects the underscore & lowercase.\n        // Build a GhostNote or StaveNote using the information we gathered.\n        const note = (type === null || type === void 0 ? void 0 : type.toLowerCase()) == 'g'\n            ? factory.GhostNote({ duration, dots })\n            : factory.StaveNote({ keys, duration, dots, type, clef, auto_stem });\n        if (!auto_stem)\n            note.setStemDirection(stem === 'up' ? Stem.UP : Stem.DOWN);\n        // Attach accidentals.\n        const accidentals = [];\n        chord.forEach((notePiece, index) => {\n            const accid = notePiece.accid;\n            if (typeof accid === 'string') {\n                const accidental = factory.Accidental({ type: accid });\n                note.addModifier(accidental, index);\n                accidentals.push(accidental);\n            }\n            else {\n                accidentals.push(undefined);\n            }\n        });\n        // Attach dots.\n        for (let i = 0; i < dots; i++)\n            Dot.buildAndAttach([note], { all: true });\n        this.commitHooks.forEach((commitHook) => commitHook(options, note, this));\n        this.elements.notes.push(note);\n        this.elements.accidentals.push(accidentals);\n        this.resetPiece();\n    }\n}\n/**\n * Commit hook used by EasyScore.setOptions().\n */\nfunction setId(options, note) {\n    if (options.id === undefined)\n        return;\n    note.setAttribute('id', options.id);\n}\n// Used by setClass() below.\nconst commaSeparatedRegex = /\\s*,\\s*/;\n/**\n * Commit hook used by EasyScore.setOptions().\n */\nfunction setClass(options, note) {\n    if (options.class === undefined)\n        return;\n    options.class.split(commaSeparatedRegex).forEach((className) => note.addClass(className));\n}\n/**\n * EasyScore implements a parser for a simple language to generate VexFlow objects.\n */\nexport class EasyScore {\n    constructor(options = {}) {\n        this.defaults = {\n            clef: 'treble',\n            time: '4/4',\n            stem: 'auto',\n        };\n        this.setOptions(options);\n    }\n    /**\n     * Set the score defaults.\n     * clef must be set appropriately to avoid errors when adding Staves.\n     * @param defaults.clef default clef ( treble | bass ...) see {@link Clef.types}\n     * @param defaults.time default time signature ( 4/4 | 9/8 ...)\n     * @param defaults.stem default stem arrangement (auto | up | down)\n     * @returns this\n     */\n    set(defaults) {\n        this.defaults = Object.assign(Object.assign({}, this.defaults), defaults);\n        return this;\n    }\n    /**\n     * @param options.factory is required.\n     * @returns this\n     */\n    setOptions(options) {\n        var _a, _b;\n        // eslint-disable-next-line\n        const factory = options.factory; // ! operator, because options.factory was set in Factory.EasyScore().\n        const builder = (_a = options.builder) !== null && _a !== void 0 ? _a : new Builder(factory);\n        this.options = Object.assign(Object.assign({ commitHooks: [setId, setClass, Articulation.easyScoreHook, FretHandFinger.easyScoreHook], throwOnError: false }, options), { factory,\n            builder });\n        this.factory = factory;\n        this.builder = builder;\n        this.grammar = new EasyScoreGrammar(this.builder);\n        this.parser = new Parser(this.grammar);\n        (_b = this.options.commitHooks) === null || _b === void 0 ? void 0 : _b.forEach((commitHook) => this.addCommitHook(commitHook));\n        return this;\n    }\n    setContext(context) {\n        this.factory.setContext(context);\n        return this;\n    }\n    parse(line, options = {}) {\n        this.builder.reset(options);\n        const result = this.parser.parse(line);\n        if (!result.success && this.options.throwOnError) {\n            L(result);\n            throw new RuntimeError('Error parsing line: ' + line);\n        }\n        return result;\n    }\n    beam(notes, options) {\n        this.factory.Beam({ notes, options });\n        return notes;\n    }\n    tuplet(notes, options) {\n        this.factory.Tuplet({ notes, options });\n        return notes;\n    }\n    notes(line, options = {}) {\n        options = Object.assign({ clef: this.defaults.clef, stem: this.defaults.stem }, options);\n        this.parse(line, options);\n        return this.builder.getElements().notes;\n    }\n    voice(notes, options = {}) {\n        options = Object.assign({ time: this.defaults.time }, options);\n        return this.factory.Voice(options).addTickables(notes);\n    }\n    addCommitHook(commitHook) {\n        this.builder.addCommitHook(commitHook);\n    }\n}\nEasyScore.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\nimport { StemmableNote } from './stemmablenote';\nimport { Category, isAnnotation } from './typeguard';\nimport { RuntimeError } from './util';\nconst ERROR_MSG = 'Ghost note must have valid initialization data to identify duration.';\nexport class GhostNote extends StemmableNote {\n    static get CATEGORY() {\n        return Category.GhostNote;\n    }\n    constructor(parameter) {\n        if (!parameter) {\n            throw new RuntimeError('BadArguments', ERROR_MSG);\n        }\n        let noteStruct;\n        if (typeof parameter === 'string') {\n            // Preserve backwards-compatibility\n            noteStruct = { duration: parameter };\n        }\n        else if (typeof parameter === 'object') {\n            noteStruct = parameter;\n        }\n        else {\n            throw new RuntimeError('BadArguments', ERROR_MSG);\n        }\n        super(noteStruct);\n        // Note properties\n        this.setWidth(0);\n    }\n    /**\n     * @returns true if this note is a type of rest. Rests don't have pitches, but take up space in the score.\n     */\n    isRest() {\n        return true;\n    }\n    setStave(stave) {\n        super.setStave(stave);\n        return this;\n    }\n    /* Overridden to ignore */\n    // eslint-disable-next-line\n    addToModifierContext(mc) {\n        // DO NOTHING.\n        return this;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    draw() {\n        // Draw Annotations\n        this.setRendered();\n        for (let i = 0; i < this.modifiers.length; ++i) {\n            const modifier = this.modifiers[i];\n            if (isAnnotation(modifier)) {\n                modifier.setContext(this.getContext());\n                modifier.drawWithStyle();\n            }\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\nimport { Note } from './note';\nimport { Category } from './typeguard';\nexport class GlyphNote extends Note {\n    constructor(glyph, noteStruct, options) {\n        super(noteStruct);\n        this.options = Object.assign({ ignoreTicks: false, line: 2 }, options);\n        // Note properties\n        this.ignore_ticks = this.options.ignoreTicks;\n        if (glyph) {\n            this.setGlyph(glyph);\n        }\n    }\n    static get CATEGORY() {\n        return Category.GlyphNote;\n    }\n    setGlyph(glyph) {\n        this.glyph = glyph;\n        this.setWidth(this.glyph.getMetrics().width);\n        return this;\n    }\n    getBoundingBox() {\n        return this.glyph.getBoundingBox();\n    }\n    preFormat() {\n        if (!this.preFormatted && this.modifierContext) {\n            this.modifierContext.preFormat();\n        }\n        this.preFormatted = true;\n        return this;\n    }\n    drawModifiers() {\n        const ctx = this.checkContext();\n        ctx.openGroup('modifiers');\n        for (let i = 0; i < this.modifiers.length; i++) {\n            const modifier = this.modifiers[i];\n            modifier.setContext(ctx);\n            modifier.drawWithStyle();\n        }\n        ctx.closeGroup();\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        this.setRendered();\n        ctx.openGroup('glyphNote', this.getAttribute('id'));\n        // Context is set when setStave is called on Note\n        const glyph = this.glyph;\n        if (!glyph.getContext()) {\n            glyph.setContext(ctx);\n        }\n        glyph.setStave(stave);\n        glyph.setYShift(stave.getYForLine(this.options.line) - stave.getYForGlyphs());\n        const x = this.isCenterAligned() ? this.getAbsoluteX() - this.getWidth() / 2 : this.getAbsoluteX();\n        glyph.renderToStave(x);\n        this.drawModifiers();\n        ctx.closeGroup();\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\nimport { StaveNote } from './stavenote';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class GraceNote extends StaveNote {\n    constructor(noteStruct) {\n        super(Object.assign({ glyph_font_scale: Tables.NOTATION_FONT_SCALE * GraceNote.SCALE, stroke_px: GraceNote.LEDGER_LINE_OFFSET }, noteStruct));\n        this.slash = noteStruct.slash || false;\n        this.slur = true;\n        this.buildNoteHeads();\n        this.width = 0;\n    }\n    static get CATEGORY() {\n        return Category.GraceNote;\n    }\n    static get LEDGER_LINE_OFFSET() {\n        return 2;\n    }\n    static get SCALE() {\n        return 0.45;\n    }\n    getStemExtension() {\n        if (this.stem_extension_override) {\n            return this.stem_extension_override;\n        }\n        const glyph = this.getGlyph();\n        if (glyph) {\n            let ret = super.getStemExtension();\n            if (glyph.stem) {\n                const staveNoteScale = this.getStaveNoteScale();\n                ret = (Stem.HEIGHT + ret) * staveNoteScale - Stem.HEIGHT;\n            }\n            return ret;\n        }\n        return 0;\n    }\n    getStaveNoteScale() {\n        return this.render_options.glyph_font_scale / Tables.NOTATION_FONT_SCALE;\n    }\n    draw() {\n        super.draw();\n        this.setRendered();\n        const stem = this.stem;\n        if (this.slash && stem) {\n            const staveNoteScale = this.getStaveNoteScale();\n            // some magic numbers are based on the staveNoteScale 0.66.\n            const offsetScale = staveNoteScale / 0.66;\n            let slashBBox = undefined;\n            const beam = this.beam;\n            if (beam) {\n                // FIXME: should render slash after beam?\n                if (!beam.postFormatted) {\n                    beam.postFormat();\n                }\n                slashBBox = this.calcBeamedNotesSlashBBox(8 * offsetScale, 8 * offsetScale, {\n                    stem: 6 * offsetScale,\n                    beam: 5 * offsetScale,\n                });\n            }\n            else {\n                const stem_direction = this.getStemDirection();\n                const noteHeadBounds = this.getNoteHeadBounds();\n                const noteStemHeight = stem.getHeight();\n                let x = this.getAbsoluteX();\n                let y = stem_direction === Stem.DOWN\n                    ? noteHeadBounds.y_top - noteStemHeight\n                    : noteHeadBounds.y_bottom - noteStemHeight;\n                const defaultStemExtention = stem_direction === Stem.DOWN ? this.glyph.stem_down_extension : this.glyph.stem_up_extension;\n                let defaultOffsetY = Tables.STEM_HEIGHT;\n                defaultOffsetY -= defaultOffsetY / 2.8;\n                defaultOffsetY += defaultStemExtention;\n                y += defaultOffsetY * staveNoteScale * stem_direction;\n                const offsets = stem_direction === Stem.UP\n                    ? {\n                        x1: 1,\n                        y1: 0,\n                        x2: 13,\n                        y2: -9,\n                    }\n                    : {\n                        x1: -4,\n                        y1: 1,\n                        x2: 13,\n                        y2: 9,\n                    };\n                x += offsets.x1 * offsetScale;\n                y += offsets.y1 * offsetScale;\n                slashBBox = {\n                    x1: x,\n                    y1: y,\n                    x2: x + offsets.x2 * offsetScale,\n                    y2: y + offsets.y2 * offsetScale,\n                };\n            }\n            // FIXME: avoid staff lines, ledger lines or others.\n            const ctx = this.checkContext();\n            ctx.save();\n            ctx.setLineWidth(1 * offsetScale); // FIXME: use more appropriate value.\n            ctx.beginPath();\n            ctx.moveTo(slashBBox.x1, slashBBox.y1);\n            ctx.lineTo(slashBBox.x2, slashBBox.y2);\n            ctx.closePath();\n            ctx.stroke();\n            ctx.restore();\n        }\n    }\n    calcBeamedNotesSlashBBox(slashStemOffset, slashBeamOffset, protrusions) {\n        const beam = this.beam;\n        if (!beam)\n            throw new RuntimeError('NoBeam', \"Can't calculate without a beam.\");\n        const beam_slope = beam.slope;\n        const isBeamEndNote = beam.notes[beam.notes.length - 1] === this;\n        const scaleX = isBeamEndNote ? -1 : 1;\n        const beam_angle = Math.atan(beam_slope * scaleX);\n        // slash line intersecting point on beam.\n        const iPointOnBeam = {\n            dx: Math.cos(beam_angle) * slashBeamOffset,\n            dy: Math.sin(beam_angle) * slashBeamOffset,\n        };\n        slashStemOffset *= this.getStemDirection();\n        const slash_angle = Math.atan((iPointOnBeam.dy - slashStemOffset) / iPointOnBeam.dx);\n        const protrusion_stem_dx = Math.cos(slash_angle) * protrusions.stem * scaleX;\n        const protrusion_stem_dy = Math.sin(slash_angle) * protrusions.stem;\n        const protrusion_beam_dx = Math.cos(slash_angle) * protrusions.beam * scaleX;\n        const protrusion_beam_dy = Math.sin(slash_angle) * protrusions.beam;\n        const stemX = this.getStemX();\n        const stem0X = beam.notes[0].getStemX();\n        const stemY = beam.getBeamYToDraw() + (stemX - stem0X) * beam_slope;\n        const ret = {\n            x1: stemX - protrusion_stem_dx,\n            y1: stemY + slashStemOffset - protrusion_stem_dy,\n            x2: stemX + iPointOnBeam.dx * scaleX + protrusion_beam_dx,\n            y2: stemY + iPointOnBeam.dy + protrusion_beam_dy,\n        };\n        return ret;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Mark Meeus 2019\nimport { KeySignature } from './keysignature';\nimport { Note } from './note';\nimport { Category } from './typeguard';\nexport class KeySigNote extends Note {\n    constructor(keySpec, cancelKeySpec, alterKeySpec) {\n        super({ duration: 'b' });\n        this.keySignature = new KeySignature(keySpec, cancelKeySpec, alterKeySpec);\n        // Note properties\n        this.ignore_ticks = true;\n    }\n    static get CATEGORY() {\n        return Category.KeySigNote;\n    }\n    /* Overridden to ignore */\n    // eslint-disable-next-line\n    addToModifierContext(mc) {\n        // DO NOTHING.\n        return this;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        this.keySignature.setStave(this.checkStave());\n        this.setWidth(this.keySignature.getWidth());\n        return this;\n    }\n    draw() {\n        const ctx = this.checkStave().checkContext();\n        this.setRendered();\n        this.keySignature.setX(this.getAbsoluteX());\n        this.keySignature.setContext(ctx);\n        this.keySignature.draw();\n    }\n}\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements multiple measure rests.\nimport { Element } from './element';\nimport { Glyph } from './glyph';\nimport { NoteHead } from './notehead';\nimport { StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { TimeSignature } from './timesignature';\nimport { Category, isBarline } from './typeguard';\nimport { defined } from './util';\nlet semibreve_rest;\nfunction get_semibreve_rest() {\n    if (!semibreve_rest) {\n        const noteHead = new NoteHead({ duration: 'w', note_type: 'r' });\n        semibreve_rest = {\n            glyph_font_scale: noteHead.render_options.glyph_font_scale,\n            glyph_code: noteHead.glyph_code,\n            width: noteHead.getWidth(),\n        };\n    }\n    return semibreve_rest;\n}\nexport class MultiMeasureRest extends Element {\n    /**\n     *\n     * @param number_of_measures Number of measures.\n     * @param options The options object.\n     */\n    constructor(number_of_measures, options) {\n        super();\n        this.xs = { left: NaN, right: NaN };\n        this.hasPaddingLeft = false;\n        this.hasPaddingRight = false;\n        this.hasLineThickness = false;\n        this.hasSymbolSpacing = false;\n        this.number_of_measures = number_of_measures;\n        // Keep track of whether these four options were provided.\n        this.hasPaddingLeft = typeof options.padding_left === 'number';\n        this.hasPaddingRight = typeof options.padding_right === 'number';\n        this.hasLineThickness = typeof options.line_thickness === 'number';\n        this.hasSymbolSpacing = typeof options.symbol_spacing === 'number';\n        const musicFont = Tables.currentMusicFont();\n        this.render_options = Object.assign({ use_symbols: false, show_number: true, number_line: -0.5, number_glyph_point: musicFont.lookupMetric('digits.point'), line: 2, spacing_between_lines_px: Tables.STAVE_LINE_DISTANCE, serif_thickness: 2, semibreve_rest_glyph_scale: Tables.NOTATION_FONT_SCALE, padding_left: 0, padding_right: 0, line_thickness: 5, symbol_spacing: 0 }, options);\n        const fontLineShift = musicFont.lookupMetric('digits.shiftLine', 0);\n        this.render_options.number_line += fontLineShift;\n    }\n    static get CATEGORY() {\n        return Category.MultiMeasureRest;\n    }\n    getXs() {\n        return this.xs;\n    }\n    setStave(stave) {\n        this.stave = stave;\n        return this;\n    }\n    getStave() {\n        return this.stave;\n    }\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    drawLine(stave, ctx, left, right, spacingBetweenLines) {\n        const options = this.render_options;\n        const y = stave.getYForLine(options.line);\n        const padding = (right - left) * 0.1;\n        left += padding;\n        right -= padding;\n        let lineThicknessHalf;\n        if (this.hasLineThickness) {\n            lineThicknessHalf = options.line_thickness * 0.5;\n        }\n        else {\n            lineThicknessHalf = spacingBetweenLines * 0.25;\n        }\n        const serifThickness = options.serif_thickness;\n        const top = y - spacingBetweenLines;\n        const bot = y + spacingBetweenLines;\n        const leftIndented = left + serifThickness;\n        const rightIndented = right - serifThickness;\n        const lineTop = y - lineThicknessHalf;\n        const lineBottom = y + lineThicknessHalf;\n        ctx.save();\n        ctx.beginPath();\n        ctx.moveTo(left, top);\n        ctx.lineTo(leftIndented, top);\n        ctx.lineTo(leftIndented, lineTop);\n        ctx.lineTo(rightIndented, lineTop);\n        ctx.lineTo(rightIndented, top);\n        ctx.lineTo(right, top);\n        ctx.lineTo(right, bot);\n        ctx.lineTo(rightIndented, bot);\n        ctx.lineTo(rightIndented, lineBottom);\n        ctx.lineTo(leftIndented, lineBottom);\n        ctx.lineTo(leftIndented, bot);\n        ctx.lineTo(left, bot);\n        ctx.closePath();\n        ctx.fill();\n    }\n    drawSymbols(stave, ctx, left, right, spacingBetweenLines) {\n        const n4 = Math.floor(this.number_of_measures / 4);\n        const n = this.number_of_measures % 4;\n        const n2 = Math.floor(n / 2);\n        const n1 = n % 2;\n        const options = this.render_options;\n        // FIXME: TODO: invalidate semibreve_rest at the appropriate time\n        // (e.g., if the system font settings are changed).\n        semibreve_rest = undefined;\n        const rest = get_semibreve_rest();\n        const rest_scale = options.semibreve_rest_glyph_scale;\n        const rest_width = rest.width * (rest_scale / rest.glyph_font_scale);\n        const glyphs = {\n            2: {\n                width: rest_width * 0.5,\n                height: spacingBetweenLines,\n            },\n            1: {\n                width: rest_width,\n            },\n        };\n        /* 10: normal spacingBetweenLines */\n        const spacing = this.hasSymbolSpacing ? options.symbol_spacing : 10;\n        const width = n4 * glyphs[2].width + n2 * glyphs[2].width + n1 * glyphs[1].width + (n4 + n2 + n1 - 1) * spacing;\n        let x = left + (right - left) * 0.5 - width * 0.5;\n        const line = options.line;\n        const yTop = stave.getYForLine(line - 1);\n        const yMiddle = stave.getYForLine(line);\n        const yBottom = stave.getYForLine(line + 1);\n        ctx.save();\n        ctx.setStrokeStyle('none');\n        ctx.setLineWidth(0);\n        for (let i = 0; i < n4; ++i) {\n            ctx.fillRect(x, yMiddle - glyphs[2].height, glyphs[2].width, glyphs[2].height);\n            ctx.fillRect(x, yBottom - glyphs[2].height, glyphs[2].width, glyphs[2].height);\n            x += glyphs[2].width + spacing;\n        }\n        for (let i = 0; i < n2; ++i) {\n            ctx.fillRect(x, yMiddle - glyphs[2].height, glyphs[2].width, glyphs[2].height);\n            x += glyphs[2].width + spacing;\n        }\n        for (let i = 0; i < n1; ++i) {\n            Glyph.renderGlyph(ctx, x, yTop, rest_scale, rest.glyph_code);\n            x += glyphs[1].width + spacing;\n        }\n        ctx.restore();\n    }\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        const stave = this.checkStave();\n        let left = stave.getNoteStartX();\n        let right = stave.getNoteEndX();\n        // FIXME: getNoteStartX() returns x + 5(barline width)\n        //        getNoteEndX() returns x + width(no barline width)\n        // See Stave constructor. How do we fix this?\n        // Here, we subtract the barline width.\n        const begModifiers = stave.getModifiers(StaveModifierPosition.BEGIN);\n        if (begModifiers.length === 1 && isBarline(begModifiers[0])) {\n            left -= begModifiers[0].getWidth();\n        }\n        const options = this.render_options;\n        if (this.hasPaddingLeft) {\n            left = stave.getX() + options.padding_left;\n        }\n        if (this.hasPaddingRight) {\n            right = stave.getX() + stave.getWidth() - options.padding_right;\n        }\n        this.xs.left = left;\n        this.xs.right = right;\n        const spacingBetweenLines = options.spacing_between_lines_px;\n        if (options.use_symbols) {\n            this.drawSymbols(stave, ctx, left, right, spacingBetweenLines);\n        }\n        else {\n            this.drawLine(stave, ctx, left, right, spacingBetweenLines);\n        }\n        if (options.show_number) {\n            const timeSpec = '/' + this.number_of_measures;\n            const timeSig = new TimeSignature(timeSpec, 0, false);\n            timeSig.point = options.number_glyph_point;\n            timeSig.setTimeSig(timeSpec);\n            timeSig.setStave(stave);\n            timeSig.setX(left + (right - left) * 0.5 - timeSig.getInfo().glyph.getMetrics().width * 0.5);\n            timeSig.bottomLine = options.number_line;\n            timeSig.setContext(ctx).draw();\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (PedalMarking.DEBUG)\n        log('Vex.Flow.PedalMarking', args);\n}\n/**\n * Draws a pedal glyph with the provided `name` on a rendering `context`\n * at the coordinates `x` and `y. Takes into account the glyph data\n * coordinate shifts.\n */\nfunction drawPedalGlyph(name, context, x, y, point) {\n    const glyph_data = PedalMarking.GLYPHS[name];\n    const glyph = new Glyph(glyph_data.code, point, { category: 'pedalMarking' });\n    glyph.render(context, x + glyph_data.x_shift, y + glyph_data.y_shift);\n}\n/**\n * PedalMarking implements different types of pedal markings. These notation\n * elements indicate to the performer when to depress and release the a pedal.\n *\n * In order to create \"Sostenuto\", and \"una corda\" markings, you must set\n * custom text for the release/depress pedal markings.\n */\nexport class PedalMarking extends Element {\n    constructor(notes) {\n        super();\n        this.notes = notes;\n        this.type = PedalMarking.type.TEXT;\n        this.line = 0;\n        // Custom text for the release/depress markings\n        this.custom_depress_text = '';\n        this.custom_release_text = '';\n        this.resetFont();\n        this.render_options = {\n            bracket_height: 10,\n            text_margin_right: 6,\n            bracket_line_width: 1,\n            color: 'black',\n        };\n    }\n    static get CATEGORY() {\n        return Category.PedalMarking;\n    }\n    /**\n     * Create a sustain pedal marking. Returns the defaults PedalMarking.\n     * Which uses the traditional \"Ped\" and \"*\"\" markings.\n     */\n    static createSustain(notes) {\n        const pedal = new PedalMarking(notes);\n        return pedal;\n    }\n    /** Create a sostenuto pedal marking */\n    static createSostenuto(notes) {\n        const pedal = new PedalMarking(notes);\n        pedal.setType(PedalMarking.type.MIXED);\n        pedal.setCustomText('Sost. Ped.');\n        return pedal;\n    }\n    /** Create an una corda pedal marking */\n    static createUnaCorda(notes) {\n        const pedal = new PedalMarking(notes);\n        pedal.setType(PedalMarking.type.TEXT);\n        pedal.setCustomText('una corda', 'tre corda');\n        return pedal;\n    }\n    /** Set pedal type. */\n    setType(type) {\n        type = typeof type === 'string' ? PedalMarking.typeString[type] : type;\n        if (type >= PedalMarking.type.TEXT && type <= PedalMarking.type.MIXED) {\n            this.type = type;\n        }\n        return this;\n    }\n    /**\n     * Set custom text for the `depress`/`release` pedal markings. No text is\n     * set if the parameter is falsy.\n     */\n    setCustomText(depress, release) {\n        this.custom_depress_text = depress || '';\n        this.custom_release_text = release || '';\n        return this;\n    }\n    /** Set the staff line to render the markings on. */\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    /** Draw the bracket based pedal markings. */\n    drawBracketed() {\n        const ctx = this.checkContext();\n        let is_pedal_depressed = false;\n        let prev_x;\n        let prev_y;\n        // Iterate through each note\n        this.notes.forEach((note, index, notes) => {\n            // Each note triggers the opposite pedal action\n            is_pedal_depressed = !is_pedal_depressed;\n            // Get the initial coordinates for the note\n            const x = note.getAbsoluteX();\n            const y = note.checkStave().getYForBottomText(this.line + 3);\n            // Throw if current note is positioned before the previous note\n            if (x < prev_x) {\n                throw new RuntimeError('InvalidConfiguration', 'The notes provided must be in order of ascending x positions');\n            }\n            // Determine if the previous or next note are the same\n            // as the current note. We need to keep track of this for\n            // when adjustments are made for the release+depress action\n            const next_is_same = notes[index + 1] === note;\n            const prev_is_same = notes[index - 1] === note;\n            let x_shift = 0;\n            const point = Tables.currentMusicFont().lookupMetric(`pedalMarking.${is_pedal_depressed ? 'down' : 'up'}.point`);\n            if (is_pedal_depressed) {\n                // Adjustment for release+depress\n                x_shift = prev_is_same ? 5 : 0;\n                if (this.type === PedalMarking.type.MIXED && !prev_is_same) {\n                    // For MIXED style, start with text instead of bracket\n                    if (this.custom_depress_text) {\n                        // If we have custom text, use instead of the default \"Ped\" glyph\n                        const text_width = ctx.measureText(this.custom_depress_text).width;\n                        ctx.fillText(this.custom_depress_text, x - text_width / 2, y);\n                        x_shift = text_width / 2 + this.render_options.text_margin_right;\n                    }\n                    else {\n                        // Render the Ped glyph in position\n                        drawPedalGlyph('pedal_depress', ctx, x, y, point);\n                        x_shift = 20 + this.render_options.text_margin_right;\n                    }\n                }\n                else {\n                    // Draw start bracket\n                    ctx.beginPath();\n                    ctx.moveTo(x, y - this.render_options.bracket_height);\n                    ctx.lineTo(x + x_shift, y);\n                    ctx.stroke();\n                    ctx.closePath();\n                }\n            }\n            else {\n                // Adjustment for release+depress\n                x_shift = next_is_same ? -5 : 0;\n                // Draw end bracket\n                ctx.beginPath();\n                ctx.moveTo(prev_x, prev_y);\n                ctx.lineTo(x + x_shift, y);\n                ctx.lineTo(x, y - this.render_options.bracket_height);\n                ctx.stroke();\n                ctx.closePath();\n            }\n            // Store previous coordinates\n            prev_x = x + x_shift;\n            prev_y = y;\n        });\n    }\n    /**\n     * Draw the text based pedal markings. This defaults to the traditional\n     * \"Ped\" and \"*\"\" symbols if no custom text has been provided.\n     */\n    drawText() {\n        const ctx = this.checkContext();\n        let is_pedal_depressed = false;\n        // Iterate through each note, placing glyphs or custom text accordingly\n        this.notes.forEach((note) => {\n            is_pedal_depressed = !is_pedal_depressed;\n            const stave = note.checkStave();\n            const x = note.getAbsoluteX();\n            const y = stave.getYForBottomText(this.line + 3);\n            const point = Tables.currentMusicFont().lookupMetric(`pedalMarking.${is_pedal_depressed ? 'down' : 'up'}.point`);\n            let text_width = 0;\n            if (is_pedal_depressed) {\n                if (this.custom_depress_text) {\n                    text_width = ctx.measureText(this.custom_depress_text).width;\n                    ctx.fillText(this.custom_depress_text, x - text_width / 2, y);\n                }\n                else {\n                    drawPedalGlyph('pedal_depress', ctx, x, y, point);\n                }\n            }\n            else {\n                if (this.custom_release_text) {\n                    text_width = ctx.measureText(this.custom_release_text).width;\n                    ctx.fillText(this.custom_release_text, x - text_width / 2, y);\n                }\n                else {\n                    drawPedalGlyph('pedal_release', ctx, x, y, point);\n                }\n            }\n        });\n    }\n    /** Render the pedal marking in position on the rendering context. */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        ctx.save();\n        ctx.setStrokeStyle(this.render_options.color);\n        ctx.setFillStyle(this.render_options.color);\n        ctx.setFont(this.textFont);\n        L('Rendering Pedal Marking');\n        if (this.type === PedalMarking.type.BRACKET || this.type === PedalMarking.type.MIXED) {\n            ctx.setLineWidth(this.render_options.bracket_line_width);\n            this.drawBracketed();\n        }\n        else if (this.type === PedalMarking.type.TEXT) {\n            this.drawText();\n        }\n        ctx.restore();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.PedalMarking.DEBUG` to `true`. */\nPedalMarking.DEBUG = false;\nPedalMarking.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 12,\n    weight: FontWeight.BOLD,\n    style: FontStyle.ITALIC,\n};\n/** Glyph data */\nPedalMarking.GLYPHS = {\n    pedal_depress: {\n        code: 'keyboardPedalPed',\n        x_shift: -10,\n        y_shift: 0,\n    },\n    pedal_release: {\n        code: 'keyboardPedalUp',\n        x_shift: -2,\n        y_shift: 3,\n    },\n};\n/** Pedal type as number. */\nPedalMarking.type = {\n    TEXT: 1,\n    BRACKET: 2,\n    MIXED: 3,\n};\n/** Pedal type as string. */\nPedalMarking.typeString = {\n    text: PedalMarking.type.TEXT,\n    bracket: PedalMarking.type.BRACKET,\n    mixed: PedalMarking.type.MIXED,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\nimport { Glyph } from './glyph';\nimport { GlyphNote } from './glyphnote';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\n// Map `type` to SMuFL glyph code.\nconst CODES = {\n    '1': 'repeat1Bar',\n    '2': 'repeat2Bars',\n    '4': 'repeat4Bars',\n    slash: 'repeatBarSlash',\n};\nexport class RepeatNote extends GlyphNote {\n    static get CATEGORY() {\n        return Category.RepeatNote;\n    }\n    constructor(type, noteStruct, options) {\n        super(undefined, Object.assign({ duration: 'q', align_center: type !== 'slash' }, noteStruct), options);\n        const glyphCode = CODES[type] || 'repeat1Bar';\n        const glyph = new Glyph(glyphCode, Tables.currentMusicFont().lookupMetric('repeatNote.point', 40), {\n            category: 'repeatNote',\n        });\n        this.setGlyph(glyph);\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `StaveLine` which are simply lines that connect\n// two notes. This object is highly configurable, see the `render_options`.\n// A simple line is often used for notating glissando articulations, but you\n// can format a `StaveLine` with arrows or colors for more pedagogical\n// purposes, such as diagrams.\nimport { Element } from './element';\nimport { Tables } from './tables';\nimport { TextJustification } from './textnote';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\n// Attribution: Arrow rendering implementations based off of\n// Patrick Horgan's article, \"Drawing lines and arcs with\n// arrow heads on  HTML5 Canvas\"\n//\n// Draw an arrow head that connects between 3 coordinates.\nfunction drawArrowHead(ctx, x0, y0, x1, y1, x2, y2) {\n    // all cases do this.\n    ctx.beginPath();\n    ctx.moveTo(x0, y0);\n    ctx.lineTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.lineTo(x0, y0);\n    ctx.closePath();\n    ctx.fill();\n}\nexport class StaveLine extends Element {\n    // Initialize the StaveLine with the given `notes`.\n    //\n    // `notes` is a struct that has:\n    //\n    //  ```\n    //  {\n    //    first_note: Note,\n    //    last_note: Note,\n    //    first_indices: [n1, n2, n3],\n    //    last_indices: [n1, n2, n3]\n    //  }\n    //  ```\n    constructor(notes) {\n        super();\n        this.setNotes(notes);\n        this.text = '';\n        this.resetFont();\n        this.render_options = {\n            // Space to add to the left or the right\n            padding_left: 4,\n            padding_right: 3,\n            // The width of the line in pixels\n            line_width: 1,\n            // An array of line/space lengths. (TODO/QUESTION: Is this supported in SVG?).\n            line_dash: undefined,\n            // Can draw rounded line end, instead of a square. (TODO/QUESTION: Is this supported in SVG?).\n            rounded_end: true,\n            // The color of the line and arrowheads\n            color: undefined,\n            // Flags to draw arrows on each end of the line\n            draw_start_arrow: false,\n            draw_end_arrow: false,\n            // The length of the arrowhead sides\n            arrowhead_length: 10,\n            // The angle of the arrowhead\n            arrowhead_angle: Math.PI / 8,\n            // The position of the text\n            text_position_vertical: StaveLine.TextVerticalPosition.TOP,\n            text_justification: StaveLine.TextJustification.CENTER,\n        };\n    }\n    static get CATEGORY() {\n        return Category.StaveLine;\n    }\n    // The the annotation for the `StaveLine`\n    setText(text) {\n        this.text = text;\n        return this;\n    }\n    // Set the notes for the `StaveLine`\n    setNotes(notes) {\n        if (!notes.first_note && !notes.last_note) {\n            throw new RuntimeError('BadArguments', 'Notes needs to have either first_note or last_note set.');\n        }\n        if (!notes.first_indices)\n            notes.first_indices = [0];\n        if (!notes.last_indices)\n            notes.last_indices = [0];\n        if (notes.first_indices.length !== notes.last_indices.length) {\n            throw new RuntimeError('BadArguments', 'Connected notes must have same number of indices.');\n        }\n        this.notes = notes;\n        this.first_note = notes.first_note;\n        this.first_indices = notes.first_indices;\n        this.last_note = notes.last_note;\n        this.last_indices = notes.last_indices;\n        return this;\n    }\n    // Apply the style of the `StaveLine` to the context\n    applyLineStyle() {\n        const ctx = this.checkContext();\n        const render_options = this.render_options;\n        if (render_options.line_dash) {\n            ctx.setLineDash(render_options.line_dash);\n        }\n        if (render_options.line_width) {\n            ctx.setLineWidth(render_options.line_width);\n        }\n        if (render_options.rounded_end) {\n            ctx.setLineCap('round');\n        }\n        else {\n            ctx.setLineCap('square');\n        }\n    }\n    // Apply the text styling to the context\n    applyFontStyle() {\n        const ctx = this.checkContext();\n        ctx.setFont(this.textFont);\n        const render_options = this.render_options;\n        const color = render_options.color;\n        if (color) {\n            ctx.setStrokeStyle(color);\n            ctx.setFillStyle(color);\n        }\n    }\n    // Helper function to draw a line with arrow heads\n    drawArrowLine(ctx, pt1, pt2) {\n        const both_arrows = this.render_options.draw_start_arrow && this.render_options.draw_end_arrow;\n        const x1 = pt1.x;\n        const y1 = pt1.y;\n        const x2 = pt2.x;\n        const y2 = pt2.y;\n        // For ends with arrow we actually want to stop before we get to the arrow\n        // so that wide lines won't put a flat end on the arrow.\n        const distance = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n        const ratio = (distance - this.render_options.arrowhead_length / 3) / distance;\n        let end_x;\n        let end_y;\n        let start_x;\n        let start_y;\n        if (this.render_options.draw_end_arrow || both_arrows) {\n            end_x = Math.round(x1 + (x2 - x1) * ratio);\n            end_y = Math.round(y1 + (y2 - y1) * ratio);\n        }\n        else {\n            end_x = x2;\n            end_y = y2;\n        }\n        if (this.render_options.draw_start_arrow || both_arrows) {\n            start_x = x1 + (x2 - x1) * (1 - ratio);\n            start_y = y1 + (y2 - y1) * (1 - ratio);\n        }\n        else {\n            start_x = x1;\n            start_y = y1;\n        }\n        if (this.render_options.color) {\n            ctx.setStrokeStyle(this.render_options.color);\n            ctx.setFillStyle(this.render_options.color);\n        }\n        // Draw the shaft of the arrow\n        ctx.beginPath();\n        ctx.moveTo(start_x, start_y);\n        ctx.lineTo(end_x, end_y);\n        ctx.stroke();\n        ctx.closePath();\n        // calculate the angle of the line\n        const line_angle = Math.atan2(y2 - y1, x2 - x1);\n        // h is the line length of a side of the arrow head\n        const h = Math.abs(this.render_options.arrowhead_length / Math.cos(this.render_options.arrowhead_angle));\n        let angle1;\n        let angle2;\n        let top_x;\n        let top_y;\n        let bottom_x;\n        let bottom_y;\n        if (this.render_options.draw_end_arrow || both_arrows) {\n            angle1 = line_angle + Math.PI + this.render_options.arrowhead_angle;\n            top_x = x2 + Math.cos(angle1) * h;\n            top_y = y2 + Math.sin(angle1) * h;\n            angle2 = line_angle + Math.PI - this.render_options.arrowhead_angle;\n            bottom_x = x2 + Math.cos(angle2) * h;\n            bottom_y = y2 + Math.sin(angle2) * h;\n            drawArrowHead(ctx, top_x, top_y, x2, y2, bottom_x, bottom_y);\n        }\n        if (this.render_options.draw_start_arrow || both_arrows) {\n            angle1 = line_angle + this.render_options.arrowhead_angle;\n            top_x = x1 + Math.cos(angle1) * h;\n            top_y = y1 + Math.sin(angle1) * h;\n            angle2 = line_angle - this.render_options.arrowhead_angle;\n            bottom_x = x1 + Math.cos(angle2) * h;\n            bottom_y = y1 + Math.sin(angle2) * h;\n            drawArrowHead(ctx, top_x, top_y, x1, y1, bottom_x, bottom_y);\n        }\n    }\n    // Renders the `StaveLine` on the context\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        const first_note = this.first_note;\n        const last_note = this.last_note;\n        const render_options = this.render_options;\n        ctx.save();\n        this.applyLineStyle();\n        // Cycle through each set of indices and draw lines\n        let start_position = { x: 0, y: 0 };\n        let end_position = { x: 0, y: 0 };\n        this.first_indices.forEach((first_index, i) => {\n            const last_index = this.last_indices[i];\n            // Get initial coordinates for the start/end of the line\n            start_position = first_note.getModifierStartXY(2, first_index);\n            end_position = last_note.getModifierStartXY(1, last_index);\n            const upwards_slope = start_position.y > end_position.y;\n            // Adjust `x` coordinates for modifiers\n            start_position.x += first_note.getMetrics().modRightPx + render_options.padding_left;\n            end_position.x -= last_note.getMetrics().modLeftPx + render_options.padding_right;\n            // Adjust first `x` coordinates for displacements\n            const notehead_width = first_note.getGlyph().getWidth();\n            const first_displaced = first_note.getKeyProps()[first_index].displaced;\n            if (first_displaced && first_note.getStemDirection() === 1) {\n                start_position.x += notehead_width + render_options.padding_left;\n            }\n            // Adjust last `x` coordinates for displacements\n            const last_displaced = last_note.getKeyProps()[last_index].displaced;\n            if (last_displaced && last_note.getStemDirection() === -1) {\n                end_position.x -= notehead_width + render_options.padding_right;\n            }\n            // Adjust y position better if it's not coming from the center of the note\n            start_position.y += upwards_slope ? -3 : 1;\n            end_position.y += upwards_slope ? 2 : 0;\n            this.drawArrowLine(ctx, start_position, end_position);\n        });\n        ctx.restore();\n        // Determine the x coordinate where to start the text\n        const text_width = ctx.measureText(this.text).width;\n        const justification = render_options.text_justification;\n        let x = 0;\n        if (justification === StaveLine.TextJustification.LEFT) {\n            x = start_position.x;\n        }\n        else if (justification === StaveLine.TextJustification.CENTER) {\n            const delta_x = end_position.x - start_position.x;\n            const center_x = delta_x / 2 + start_position.x;\n            x = center_x - text_width / 2;\n        }\n        else if (justification === StaveLine.TextJustification.RIGHT) {\n            x = end_position.x - text_width;\n        }\n        // Determine the y value to start the text\n        let y = 0;\n        const vertical_position = render_options.text_position_vertical;\n        if (vertical_position === StaveLine.TextVerticalPosition.TOP) {\n            y = first_note.checkStave().getYForTopText();\n        }\n        else if (vertical_position === StaveLine.TextVerticalPosition.BOTTOM) {\n            y = first_note.checkStave().getYForBottomText(Tables.TEXT_HEIGHT_OFFSET_HACK);\n        }\n        // Draw the text\n        ctx.save();\n        this.applyFontStyle();\n        ctx.fillText(this.text, x, y);\n        ctx.restore();\n        return this;\n    }\n}\n/** Default text font. */\nStaveLine.TEXT_FONT = Object.assign({}, Element.TEXT_FONT);\n// Text Positioning\nStaveLine.TextVerticalPosition = {\n    TOP: 1,\n    BOTTOM: 2,\n};\nStaveLine.TextJustification = TextJustification;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { BoundingBox } from './boundingbox';\nimport { Element } from './element';\nimport { Formatter } from './formatter';\nimport { Note } from './note';\nimport { Stave } from './stave';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\n/**\n * System implements a musical system, which is a collection of staves,\n * each which can have one or more voices. All voices across all staves in\n * the system are formatted together.\n */\nexport class System extends Element {\n    constructor(params = {}) {\n        super();\n        this.setOptions(params);\n        this.parts = [];\n    }\n    static get CATEGORY() {\n        return Category.System;\n    }\n    /** Set formatting options. */\n    setOptions(options = {}) {\n        if (!options.factory) {\n            throw new RuntimeError('NoFactory', 'System.setOptions(options) requires a factory.');\n        }\n        this.factory = options.factory;\n        this.options = Object.assign(Object.assign({ factory: this.factory, x: 10, y: 10, width: 500, spaceBetweenStaves: 12, autoWidth: false, noJustification: false, debugFormatter: false, formatIterations: 0, noPadding: false }, options), { details: Object.assign({ alpha: 0.5 }, options.details), formatOptions: Object.assign({}, options.formatOptions) });\n        if (this.options.noJustification === false && typeof options.width === 'undefined') {\n            this.options.autoWidth = true;\n        }\n    }\n    /** Set associated context. */\n    setContext(context) {\n        super.setContext(context);\n        this.factory.setContext(context);\n        return this;\n    }\n    /**\n     * Add connector between staves.\n     * @param type see {@link StaveConnector.typeString}\n     */\n    addConnector(type = 'double') {\n        this.connector = this.factory.StaveConnector({\n            top_stave: this.parts[0].stave,\n            bottom_stave: this.parts[this.parts.length - 1].stave,\n            type,\n        });\n        return this.connector;\n    }\n    /**\n     * Add a stave to the system.\n     *\n     * Example (one voice):\n     *\n     * `system.addStave({voices: [score.voice(score.notes('C#5/q, B4, A4, G#4'))]});`\n     *\n     * Example (two voices):\n     *\n     * `system.addStave({voices: [`\n     *   `score.voice(score.notes('C#5/q, B4, A4, G#4', {stem: 'up'})),`\n     *   `score.voice(score.notes('C#4/h, C#4', {stem: 'down'}))`\n     * `]});`\n     */\n    addStave(params) {\n        var _a;\n        const staveOptions = Object.assign({ left_bar: false }, params.options);\n        const stave = (_a = params.stave) !== null && _a !== void 0 ? _a : this.factory.Stave({ x: this.options.x, y: this.options.y, width: this.options.width, options: staveOptions });\n        const p = Object.assign(Object.assign({ stave, \n            /* voices: [], */\n            spaceAbove: 0, spaceBelow: 0, debugNoteMetrics: false, noJustification: false }, params), { options: staveOptions });\n        const ctx = this.getContext();\n        p.voices.forEach((voice) => voice\n            .setContext(ctx)\n            .setStave(stave)\n            .getTickables()\n            .forEach((tickable) => tickable.setStave(stave)));\n        this.parts.push(p);\n        return stave;\n    }\n    /** Format the system. */\n    format() {\n        const options_details = this.options.details;\n        let justifyWidth = 0;\n        const formatter = new Formatter(options_details);\n        this.formatter = formatter;\n        let y = this.options.y;\n        let startX = 0;\n        let allVoices = [];\n        let allStaves = [];\n        const debugNoteMetricsYs = [];\n        // Join the voices for each stave.\n        this.parts.forEach((part) => {\n            y = y + part.stave.space(part.spaceAbove);\n            part.stave.setY(y);\n            formatter.joinVoices(part.voices);\n            y = y + part.stave.space(part.spaceBelow);\n            y = y + part.stave.space(this.options.spaceBetweenStaves);\n            if (part.debugNoteMetrics) {\n                debugNoteMetricsYs.push({ y, voice: part.voices[0] });\n                y += 15;\n            }\n            allVoices = allVoices.concat(part.voices);\n            allStaves = allStaves.concat(part.stave);\n            startX = Math.max(startX, part.stave.getNoteStartX());\n        });\n        // Update the start position of all staves.\n        this.parts.forEach((part) => part.stave.setNoteStartX(startX));\n        if (this.options.autoWidth) {\n            justifyWidth = formatter.preCalculateMinTotalWidth(allVoices);\n            this.parts.forEach((part) => {\n                part.stave.setWidth(justifyWidth + Stave.rightPadding + (startX - this.options.x));\n            });\n        }\n        else {\n            justifyWidth = this.options.noPadding\n                ? this.options.width - (startX - this.options.x)\n                : this.options.width - (startX - this.options.x) - Stave.defaultPadding;\n        }\n        formatter.format(allVoices, this.options.noJustification ? 0 : justifyWidth, this.options.formatOptions);\n        for (let i = 0; i < this.options.formatIterations; i++) {\n            formatter.tune(options_details);\n        }\n        this.startX = startX;\n        this.debugNoteMetricsYs = debugNoteMetricsYs;\n        this.lastY = y;\n        this.boundingBox = new BoundingBox(this.options.x, this.options.y, this.options.width, this.lastY - this.options.y);\n        Stave.formatBegModifiers(allStaves);\n    }\n    /** Render the system. */\n    draw() {\n        // Render debugging information, if requested.\n        const ctx = this.checkContext();\n        if (!this.formatter || !this.startX || !this.lastY || !this.debugNoteMetricsYs) {\n            throw new RuntimeError('NoFormatter', 'format() must be called before draw()');\n        }\n        this.setRendered();\n        if (this.options.debugFormatter) {\n            Formatter.plotDebugging(ctx, this.formatter, this.startX, this.options.y, this.lastY);\n        }\n        this.debugNoteMetricsYs.forEach((d) => {\n            d.voice.getTickables().forEach((tickable) => Note.plotMetrics(ctx, tickable, d.y));\n        });\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// The file implements notes for Tablature notation. This consists of one or\n// more fret positions, and can either be drawn with or without stems.\n//\n// See `tests/tabnote_tests.ts` for usage examples.\nimport { Font } from './font';\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { Stem } from './stem';\nimport { StemmableNote } from './stemmablenote';\nimport { Tables } from './tables';\nimport { Category, isDot } from './typeguard';\nimport { defined, RuntimeError } from './util';\n// Gets the unused strings grouped together if consecutive.\n//\n// Parameters:\n// * num_lines - The number of lines\n// * strings_used - An array of numbers representing which strings have fret positions\nfunction getUnusedStringGroups(num_lines, strings_used) {\n    const stem_through = [];\n    let group = [];\n    for (let string = 1; string <= num_lines; string++) {\n        const is_used = strings_used.indexOf(string) > -1;\n        if (!is_used) {\n            group.push(string);\n        }\n        else {\n            stem_through.push(group);\n            group = [];\n        }\n    }\n    if (group.length > 0)\n        stem_through.push(group);\n    return stem_through;\n}\n// Gets groups of points that outline the partial stem lines\n// between fret positions\n//\n// Parameters:\n// * stem_Y - The `y` coordinate the stem is located on\n// * unused_strings - An array of groups of unused strings\n// * stave - The stave to use for reference\n// * stem_direction - The direction of the stem\nfunction getPartialStemLines(stem_y, unused_strings, stave, stem_direction) {\n    const up_stem = stem_direction !== 1;\n    const down_stem = stem_direction !== -1;\n    const line_spacing = stave.getSpacingBetweenLines();\n    const total_lines = stave.getNumLines();\n    const stem_lines = [];\n    unused_strings.forEach((strings) => {\n        const containsLastString = strings.indexOf(total_lines) > -1;\n        const containsFirstString = strings.indexOf(1) > -1;\n        if ((up_stem && containsFirstString) || (down_stem && containsLastString)) {\n            return;\n        }\n        // If there's only one string in the group, push a duplicate value.\n        // We do this because we need 2 strings to convert into upper/lower y\n        // values.\n        if (strings.length === 1) {\n            strings.push(strings[0]);\n        }\n        const line_ys = [];\n        // Iterate through each group string and store it's y position\n        strings.forEach((string, index, strings) => {\n            const isTopBound = string === 1;\n            const isBottomBound = string === total_lines;\n            // Get the y value for the appropriate staff line,\n            // we adjust for a 0 index array, since string numbers are index 1\n            let y = stave.getYForLine(string - 1);\n            // Unless the string is the first or last, add padding to each side\n            // of the line\n            if (index === 0 && !isTopBound) {\n                y -= line_spacing / 2 - 1;\n            }\n            else if (index === strings.length - 1 && !isBottomBound) {\n                y += line_spacing / 2 - 1;\n            }\n            // Store the y value\n            line_ys.push(y);\n            // Store a subsequent y value connecting this group to the main\n            // stem above/below the stave if it's the top/bottom string\n            if (stem_direction === 1 && isTopBound) {\n                line_ys.push(stem_y - 2);\n            }\n            else if (stem_direction === -1 && isBottomBound) {\n                line_ys.push(stem_y + 2);\n            }\n        });\n        // Add the sorted y values to the\n        stem_lines.push(line_ys.sort((a, b) => a - b));\n    });\n    return stem_lines;\n}\nexport class TabNote extends StemmableNote {\n    // Initialize the TabNote with a `noteStruct` full of properties\n    // and whether to `draw_stem` when rendering the note\n    constructor(noteStruct, draw_stem = false) {\n        super(noteStruct);\n        this.glyphs = [];\n        // Return the number of the greatest string, which is the string lowest on the display\n        this.greatestString = () => {\n            return this.positions.map((x) => x.str).reduce((a, b) => (a > b ? a : b));\n        };\n        // Return the number of the least string, which is the string highest on the display\n        this.leastString = () => {\n            return this.positions.map((x) => x.str).reduce((a, b) => (a < b ? a : b));\n        };\n        this.ghost = false; // Renders parenthesis around notes\n        // Note properties\n        // The fret positions in the note. An array of `{ str: X, fret: X }`\n        this.positions = noteStruct.positions || [];\n        // Render Options\n        this.render_options = Object.assign(Object.assign({}, this.render_options), { \n            // font size for note heads and rests\n            glyph_font_scale: Tables.TABLATURE_FONT_SCALE, \n            // Flag to draw a stem\n            draw_stem, \n            // Flag to draw dot modifiers\n            draw_dots: draw_stem, \n            // Flag to extend the main stem through the stave and fret positions\n            draw_stem_through_stave: false, \n            // vertical shift from stave line\n            y_shift: 0, \n            // normal glyph scale\n            scale: 1.0, \n            // default tablature font\n            font: `${Font.SIZE}pt ${Font.SANS_SERIF}` });\n        this.glyph = Tables.getGlyphProps(this.duration, this.noteType);\n        defined(this.glyph, 'BadArguments', `No glyph found for duration '${this.duration}' and type '${this.noteType}'`);\n        this.buildStem();\n        if (noteStruct.stem_direction) {\n            this.setStemDirection(noteStruct.stem_direction);\n        }\n        else {\n            this.setStemDirection(Stem.UP);\n        }\n        // Renders parenthesis around notes\n        this.ghost = false;\n        this.updateWidth();\n    }\n    static get CATEGORY() {\n        return Category.TabNote;\n    }\n    reset() {\n        super.reset();\n        if (this.stave)\n            this.setStave(this.stave);\n        return this;\n    }\n    // Set as ghost `TabNote`, surrounds the fret positions with parenthesis.\n    // Often used for indicating frets that are being bent to\n    setGhost(ghost) {\n        this.ghost = ghost;\n        this.updateWidth();\n        return this;\n    }\n    // Determine if the note has a stem\n    hasStem() {\n        if (this.render_options.draw_stem)\n            return true;\n        return false;\n    }\n    // Get the default stem extension for the note\n    getStemExtension() {\n        const glyph = this.getGlyph();\n        if (this.stem_extension_override != null) {\n            return this.stem_extension_override;\n        }\n        if (glyph) {\n            return this.getStemDirection() === Stem.UP ? glyph.tabnote_stem_up_extension : glyph.tabnote_stem_down_extension;\n        }\n        return 0;\n    }\n    // Calculate and store the width of the note\n    updateWidth() {\n        this.glyphs = [];\n        this.width = 0;\n        for (let i = 0; i < this.positions.length; ++i) {\n            let fret = this.positions[i].fret;\n            if (this.ghost)\n                fret = '(' + fret + ')';\n            const glyph = Tables.tabToGlyph(fret.toString(), this.render_options.scale);\n            this.glyphs.push(glyph);\n            this.width = Math.max(glyph.getWidth(), this.width);\n        }\n        // For some reason we associate a notehead glyph with a TabNote, and this\n        // glyph is used for certain width calculations. Of course, this is totally\n        // incorrect since a notehead is a poor approximation for the dimensions of\n        // a fret number which can have multiple digits. As a result, we must\n        // overwrite getWidth() to return the correct width\n        this.glyph.getWidth = () => this.width;\n    }\n    // Set the `stave` to the note\n    setStave(stave) {\n        super.setStave(stave);\n        const ctx = stave.getContext();\n        this.setContext(ctx);\n        // Calculate the fret number width based on font used\n        if (ctx) {\n            this.width = 0;\n            for (let i = 0; i < this.glyphs.length; ++i) {\n                const glyph = this.glyphs[i];\n                const text = '' + glyph.text;\n                if (text.toUpperCase() !== 'X') {\n                    ctx.save();\n                    ctx.setFont(this.render_options.font);\n                    glyph.width = ctx.measureText(text).width;\n                    ctx.restore();\n                    glyph.getWidth = () => glyph.width;\n                }\n                this.width = Math.max(glyph.getWidth(), this.width);\n            }\n            this.glyph.getWidth = () => this.width;\n        }\n        // we subtract 1 from `line` because getYForLine expects a 0-based index,\n        // while the position.str is a 1-based index\n        const ys = this.positions.map(({ str: line }) => stave.getYForLine(Number(line) - 1));\n        this.setYs(ys);\n        if (this.stem) {\n            this.stem.setYBounds(this.getStemY(), this.getStemY());\n        }\n        return this;\n    }\n    // Get the fret positions for the note\n    getPositions() {\n        return this.positions;\n    }\n    // Get the default `x` and `y` coordinates for a modifier at a specific\n    // `position` at a fret position `index`\n    getModifierStartXY(position, index) {\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n        }\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', 'No Y-Values calculated for this note.');\n        }\n        let x = 0;\n        if (position === Modifier.Position.LEFT) {\n            x = -1 * 2; // FIXME: modifier padding, move to font file\n        }\n        else if (position === Modifier.Position.RIGHT) {\n            x = this.width + 2; // FIXME: modifier padding, move to font file\n        }\n        else if (position === Modifier.Position.BELOW || position === Modifier.Position.ABOVE) {\n            const note_glyph_width = this.glyph.getWidth();\n            x = note_glyph_width / 2;\n        }\n        return {\n            x: this.getAbsoluteX() + x,\n            y: this.ys[index],\n        };\n    }\n    // Get the default line for rest\n    getLineForRest() {\n        return Number(this.positions[0].str);\n    }\n    // Pre-render formatting\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        if (this.modifierContext)\n            this.modifierContext.preFormat();\n        // width is already set during init()\n        this.preFormatted = true;\n    }\n    // Get the x position for the stem\n    getStemX() {\n        return this.getCenterGlyphX();\n    }\n    // Get the y position for the stem\n    getStemY() {\n        const num_lines = this.checkStave().getNumLines();\n        // The decimal staff line amounts provide optimal spacing between the\n        // fret number and the stem\n        const stemUpLine = -0.5;\n        const stemDownLine = num_lines - 0.5;\n        const stemStartLine = Stem.UP === this.stem_direction ? stemUpLine : stemDownLine;\n        return this.checkStave().getYForLine(stemStartLine);\n    }\n    // Get the stem extents for the tabnote\n    getStemExtents() {\n        return this.checkStem().getExtents();\n    }\n    // Draw the fal onto the context\n    drawFlag() {\n        var _a;\n        const { beam, glyph, render_options: { draw_stem }, } = this;\n        const context = this.checkContext();\n        const shouldDrawFlag = beam == undefined && draw_stem;\n        // Now it's the flag's turn.\n        if (glyph.flag && shouldDrawFlag) {\n            const flag_x = this.getStemX();\n            const flag_y = this.getStemDirection() === Stem.DOWN\n                ? // Down stems are below the note head and have flags on the right.\n                    this.getStemY() - this.checkStem().getHeight() - (this.glyph ? this.glyph.stem_down_extension : 0)\n                : // Up stems are above the note head and have flags on the right.\n                    this.getStemY() - this.checkStem().getHeight() + (this.glyph ? this.glyph.stem_up_extension : 0);\n            // Draw the Flag\n            //this.flag?.setOptions({ category: 'flag.tabStem' });\n            (_a = this.flag) === null || _a === void 0 ? void 0 : _a.render(context, flag_x, flag_y);\n            //Glyph.renderGlyph(context, flag_x, flag_y, glyph_font_scale, flag_code, { category: 'flag.tabStem' });\n        }\n    }\n    // Render the modifiers onto the context.\n    drawModifiers() {\n        this.modifiers.forEach((modifier) => {\n            // Only draw the dots if enabled.\n            if (isDot(modifier) && !this.render_options.draw_dots) {\n                return;\n            }\n            modifier.setContext(this.getContext());\n            modifier.drawWithStyle();\n        });\n    }\n    // Render the stem extension through the fret positions\n    drawStemThrough() {\n        const stemX = this.getStemX();\n        const stemY = this.getStemY();\n        const ctx = this.checkContext();\n        const drawStem = this.render_options.draw_stem;\n        const stemThrough = this.render_options.draw_stem_through_stave;\n        if (drawStem && stemThrough) {\n            const numLines = this.checkStave().getNumLines();\n            const stringsUsed = this.positions.map((position) => Number(position.str));\n            const unusedStrings = getUnusedStringGroups(numLines, stringsUsed);\n            const stemLines = getPartialStemLines(stemY, unusedStrings, this.checkStave(), this.getStemDirection());\n            ctx.save();\n            ctx.setLineWidth(Stem.WIDTH);\n            stemLines.forEach((bounds) => {\n                if (bounds.length === 0)\n                    return;\n                ctx.beginPath();\n                ctx.moveTo(stemX, bounds[0]);\n                ctx.lineTo(stemX, bounds[bounds.length - 1]);\n                ctx.stroke();\n                ctx.closePath();\n            });\n            ctx.restore();\n        }\n    }\n    // Render the fret positions onto the context\n    drawPositions() {\n        const ctx = this.checkContext();\n        const x = this.getAbsoluteX();\n        const ys = this.ys;\n        for (let i = 0; i < this.positions.length; ++i) {\n            const y = ys[i] + this.render_options.y_shift;\n            const glyph = this.glyphs[i];\n            // Center the fret text beneath the notation note head\n            const note_glyph_width = this.glyph.getWidth();\n            const tab_x = x + note_glyph_width / 2 - glyph.getWidth() / 2;\n            // FIXME: Magic numbers.\n            ctx.clearRect(tab_x - 2, y - 3, glyph.getWidth() + 4, 6);\n            if (glyph.code) {\n                Glyph.renderGlyph(ctx, tab_x, y, this.render_options.glyph_font_scale * this.render_options.scale, glyph.code);\n            }\n            else {\n                ctx.save();\n                ctx.setFont(this.render_options.font);\n                const text = glyph.text.toString();\n                ctx.fillText(text, tab_x, y + 5 * this.render_options.scale);\n                ctx.restore();\n            }\n        }\n    }\n    // The main rendering function for the entire note.\n    draw() {\n        const ctx = this.checkContext();\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', \"Can't draw note without Y values.\");\n        }\n        this.setRendered();\n        const render_stem = this.beam == undefined && this.render_options.draw_stem;\n        ctx.openGroup('tabnote', undefined, { pointerBBox: true });\n        this.drawPositions();\n        this.drawStemThrough();\n        if (this.stem && render_stem) {\n            const stem_x = this.getStemX();\n            this.stem.setNoteHeadXBounds(stem_x, stem_x);\n            ctx.openGroup('stem', undefined, { pointerBBox: true });\n            this.stem.setContext(ctx).draw();\n            ctx.closeGroup();\n        }\n        this.drawFlag();\n        this.drawModifiers();\n        ctx.closeGroup();\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\nimport { Stave } from './stave';\nimport { Category } from './typeguard';\nexport class TabStave extends Stave {\n    static get CATEGORY() {\n        return Category.TabStave;\n    }\n    constructor(x, y, width, options) {\n        const tab_options = Object.assign({ spacing_between_lines_px: 13, num_lines: 6, top_text_position: 1 }, options);\n        super(x, y, width, tab_options);\n    }\n    getYForGlyphs() {\n        return this.getYForLine(2.5);\n    }\n    // Deprecated\n    addTabGlyph() {\n        this.addClef('tab');\n        return this;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// This file implements `TextBrackets` which extend between two notes.\n// The octave transposition markings (8va, 8vb, 15va, 15vb) can be created\n// using this class.\nimport { Element } from './element';\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Renderer } from './renderer';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { log, RuntimeError } from './util';\n// To enable logging for this class. Set `Vex.Flow.TextBracket.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (TextBracket.DEBUG)\n        log('Vex.Flow.TextBracket', args);\n}\nexport var TextBracketPosition;\n(function (TextBracketPosition) {\n    TextBracketPosition[TextBracketPosition[\"TOP\"] = 1] = \"TOP\";\n    TextBracketPosition[TextBracketPosition[\"BOTTOM\"] = -1] = \"BOTTOM\";\n})(TextBracketPosition || (TextBracketPosition = {}));\nexport class TextBracket extends Element {\n    constructor({ start, stop, text = '', superscript = '', position = TextBracketPosition.TOP }) {\n        super();\n        this.start = start;\n        this.stop = stop;\n        this.text = text;\n        this.superscript = superscript;\n        this.position = typeof position === 'string' ? TextBracket.PositionString[position] : position;\n        this.line = 1;\n        this.resetFont();\n        this.render_options = {\n            dashed: true,\n            dash: [5],\n            color: 'black',\n            line_width: 1,\n            show_bracket: true,\n            bracket_height: 8,\n            // In the BOTTOM position, the bracket line can extend\n            // under the superscript.\n            underline_superscript: true,\n        };\n    }\n    static get CATEGORY() {\n        return Category.TextBracket;\n    }\n    static get Position() {\n        return TextBracketPosition;\n    }\n    static get PositionString() {\n        return {\n            top: TextBracketPosition.TOP,\n            bottom: TextBracketPosition.BOTTOM,\n        };\n    }\n    /**\n     * @deprecated Use `TextBracket.Position` instead.\n     */\n    static get Positions() {\n        L('Positions is deprecated, use TextBracketPosition instead.');\n        return TextBracketPosition;\n    }\n    /**\n     * @deprecated Use `TextBracket.PositionString` instead.\n     */\n    static get PositionsString() {\n        L('PositionsString is deprecated, use PositionString instead.');\n        return TextBracket.PositionString;\n    }\n    /**\n     * Apply the text backet styling to the provided context.\n     * @param ctx\n     * @returns this\n     */\n    applyStyle(ctx) {\n        ctx.setFont(this.font);\n        const options = this.render_options;\n        ctx.setStrokeStyle(options.color);\n        ctx.setFillStyle(options.color);\n        ctx.setLineWidth(options.line_width);\n        return this;\n    }\n    // Set whether the bracket line should be `dashed`. You can also\n    // optionally set the `dash` pattern by passing in an array of numbers\n    setDashed(dashed, dash) {\n        this.render_options.dashed = dashed;\n        if (dash)\n            this.render_options.dash = dash;\n        return this;\n    }\n    // Set the rendering `context` for the octave bracket\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    // Draw the octave bracket on the rendering context\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        let y = 0;\n        switch (this.position) {\n            case TextBracketPosition.TOP:\n                y = this.start.checkStave().getYForTopText(this.line);\n                break;\n            case TextBracketPosition.BOTTOM:\n                y = this.start.checkStave().getYForBottomText(this.line + Tables.TEXT_HEIGHT_OFFSET_HACK);\n                break;\n            default:\n                throw new RuntimeError('InvalidPosition', `The position ${this.position} is invalid.`);\n        }\n        // Get the preliminary start and stop coordintates for the bracket\n        const start = { x: this.start.getAbsoluteX(), y };\n        const stop = { x: this.stop.getAbsoluteX(), y };\n        L('Rendering TextBracket: start:', start, 'stop:', stop, 'y:', y);\n        const bracket_height = this.render_options.bracket_height * this.position;\n        ctx.save();\n        this.applyStyle(ctx);\n        // Draw text\n        ctx.fillText(this.text, start.x, start.y);\n        // Get the width and height for the octave number\n        const main_measure = ctx.measureText(this.text);\n        const main_width = main_measure.width;\n        const main_height = main_measure.height;\n        // Calculate the y position for the super script\n        const super_y = start.y - main_height / 2.5;\n        // We called this.resetFont() in the constructor, so we know this.textFont is available.\n        // eslint-disable-next-line\n        const { family, size, weight, style } = this.textFont;\n        // To draw the superscript, we scale the font size by 1/1.4.\n        const smallerFontSize = Font.scaleSize(size, 0.714286);\n        ctx.setFont(family, smallerFontSize, weight, style);\n        ctx.fillText(this.superscript, start.x + main_width + 1, super_y);\n        // Determine width and height of the superscript\n        const super_measure = ctx.measureText(this.superscript);\n        const super_width = super_measure.width;\n        const super_height = super_measure.height;\n        // Setup initial coordinates for the bracket line\n        let start_x = start.x;\n        let line_y = super_y;\n        const end_x = stop.x + this.stop.getGlyph().getWidth();\n        // Adjust x and y coordinates based on position\n        if (this.position === TextBracketPosition.TOP) {\n            start_x += main_width + super_width + 5;\n            line_y -= super_height / 2.7;\n        }\n        else if (this.position === TextBracketPosition.BOTTOM) {\n            line_y += super_height / 2.7;\n            start_x += main_width + 2;\n            if (!this.render_options.underline_superscript) {\n                start_x += super_width;\n            }\n        }\n        if (this.render_options.dashed) {\n            // Main line\n            Renderer.drawDashedLine(ctx, start_x, line_y, end_x, line_y, this.render_options.dash);\n            // Ending Bracket\n            if (this.render_options.show_bracket) {\n                Renderer.drawDashedLine(ctx, end_x, line_y + 1 * this.position, end_x, line_y + bracket_height, this.render_options.dash);\n            }\n        }\n        else {\n            ctx.beginPath();\n            ctx.moveTo(start_x, line_y);\n            // Main line\n            ctx.lineTo(end_x, line_y);\n            if (this.render_options.show_bracket) {\n                // Ending bracket\n                ctx.lineTo(end_x, line_y + bracket_height);\n            }\n            ctx.stroke();\n            ctx.closePath();\n        }\n        ctx.restore();\n    }\n}\nTextBracket.DEBUG = false;\nTextBracket.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 15,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.ITALIC,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Glyph } from './glyph';\nimport { Note } from './note';\nimport { Category } from './typeguard';\nimport { defined, log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (TextDynamics.DEBUG)\n        log('Vex.Flow.TextDynamics', args);\n}\n/**\n * `TextDynamics` renders traditional\n * text dynamics markings, **ie: p, f, sfz, rfz, ppp**\n *\n * You can render any dynamics string that contains a combination of\n * the following letters:  P, M, F, Z, R, S\n */\nexport class TextDynamics extends Note {\n    /**\n     * Create the dynamics marking.\n     *\n     * A `TextDynamics` object inherits from `Note` so that it can be formatted\n     * within a `Voice`.\n     *\n     * @param noteStruct an object that contains a `duration` property and a\n     * `sequence` of letters that represents the letters to render.\n     */\n    constructor(noteStruct) {\n        super(noteStruct);\n        this.sequence = (noteStruct.text || '').toLowerCase();\n        this.line = noteStruct.line || 0;\n        this.glyphs = [];\n        this.render_options = Object.assign(Object.assign({}, this.render_options), { glyph_font_size: 40 });\n        L('New Dynamics Text: ', this.sequence);\n    }\n    static get CATEGORY() {\n        return Category.TextDynamics;\n    }\n    /** The glyph data for each dynamics letter. */\n    static get GLYPHS() {\n        return {\n            f: {\n                code: 'dynamicForte',\n                width: 12,\n            },\n            p: {\n                code: 'dynamicPiano',\n                width: 14,\n            },\n            m: {\n                code: 'dynamicMezzo',\n                width: 17,\n            },\n            s: {\n                code: 'dynamicSforzando',\n                width: 10,\n            },\n            z: {\n                code: 'dynamicZ',\n                width: 12,\n            },\n            r: {\n                code: 'dynamicRinforzando',\n                width: 12,\n            },\n        };\n    }\n    /** Set the Stave line on which the note should be placed. */\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    /** Preformat the dynamics text. */\n    preFormat() {\n        let total_width = 0;\n        // length of this.glyphs must be <=\n        // length of this.sequence, so if we're formatted before\n        // create new glyphs.\n        this.glyphs = [];\n        // Iterate through each letter\n        this.sequence.split('').forEach((letter) => {\n            // Get the glyph data for the letter\n            const glyph_data = TextDynamics.GLYPHS[letter];\n            if (!glyph_data)\n                throw new RuntimeError('Invalid dynamics character: ' + letter);\n            const size = defined(this.render_options.glyph_font_size);\n            const glyph = new Glyph(glyph_data.code, size, { category: 'textNote' });\n            // Add the glyph\n            this.glyphs.push(glyph);\n            total_width += glyph_data.width;\n        });\n        // Store the width of the text\n        this.setWidth(total_width);\n        this.preFormatted = true;\n        return this;\n    }\n    /** Draw the dynamics text on the rendering context. */\n    draw() {\n        this.setRendered();\n        const x = this.getAbsoluteX();\n        const y = this.checkStave().getYForLine(this.line + -3);\n        L('Rendering Dynamics: ', this.sequence);\n        let letter_x = x;\n        this.glyphs.forEach((glyph, index) => {\n            const current_letter = this.sequence[index];\n            glyph.render(this.checkContext(), letter_x, y);\n            letter_x += TextDynamics.GLYPHS[current_letter].width;\n        });\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.TextDynamics.DEBUG` to `true`. */\nTextDynamics.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\nimport { Note } from './note';\nimport { TimeSignature } from './timesignature';\nimport { Category } from './typeguard';\nexport class TimeSigNote extends Note {\n    constructor(timeSpec, customPadding) {\n        super({ duration: 'b' });\n        const timeSignature = new TimeSignature(timeSpec, customPadding);\n        this.timeSigInfo = timeSignature.getInfo();\n        this.setWidth(this.timeSigInfo.glyph.getMetrics().width);\n        // Note properties\n        this.ignore_ticks = true;\n    }\n    static get CATEGORY() {\n        return Category.TimeSigNote;\n    }\n    /* Overridden to ignore */\n    // eslint-disable-next-line\n    addToModifierContext(mc) {\n        // DO NOTHING.\n        return this;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = this.checkContext();\n        this.setRendered();\n        if (!this.timeSigInfo.glyph.getContext()) {\n            this.timeSigInfo.glyph.setContext(ctx);\n        }\n        this.timeSigInfo.glyph.setStave(stave);\n        this.timeSigInfo.glyph.setYShift(stave.getYForLine(2) - stave.getYForGlyphs());\n        this.timeSigInfo.glyph.renderToStave(this.getAbsoluteX());\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Balazs Forian-Szabo\n// MIT License\nimport { Element } from './element';\nimport { Category } from './typeguard';\nimport { log } from './util';\nimport { Vibrato } from './vibrato';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (VibratoBracket.DEBUG)\n        log('Vex.Flow.VibratoBracket', args);\n}\n/** `VibratoBracket` renders vibrato effect between two notes. */\nexport class VibratoBracket extends Element {\n    /**\n     * Either the stop or start note must be set, or both of them.\n     * An undefined value for the start or stop note indicates that the vibrato\n     * is drawn from the beginning or until the end of the stave accordingly.\n     */\n    constructor(bracket_data) {\n        super();\n        if (bracket_data.start)\n            this.start = bracket_data.start;\n        if (bracket_data.stop)\n            this.stop = bracket_data.stop;\n        this.line = 1;\n        this.render_options = {\n            harsh: false,\n            wave_height: 6,\n            wave_width: 4,\n            wave_girth: 2,\n            vibrato_width: 0,\n        };\n    }\n    static get CATEGORY() {\n        return Category.VibratoBracket;\n    }\n    /** Set line position of the vibrato bracket. */\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    /** Set harsh vibrato bracket. */\n    setHarsh(harsh) {\n        this.render_options.harsh = harsh;\n        return this;\n    }\n    /** Draw the vibrato bracket on the rendering context. */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        const y = (this.start && this.start.checkStave().getYForTopText(this.line)) ||\n            (this.stop && this.stop.checkStave().getYForTopText(this.line)) ||\n            0;\n        // If start note is not set then vibrato will be drawn\n        // from the beginning of the stave\n        const start_x = (this.start && this.start.getAbsoluteX()) || (this.stop && this.stop.checkStave().getTieStartX()) || 0;\n        // If stop note is not set then vibrato will be drawn\n        // until the end of the stave\n        const stop_x = (this.stop && this.stop.getAbsoluteX() - this.stop.getWidth() - 5) ||\n            (this.start && this.start.checkStave().getTieEndX() - 10) ||\n            0;\n        this.render_options.vibrato_width = stop_x - start_x;\n        L('Rendering VibratoBracket: start_x:', start_x, 'stop_x:', stop_x, 'y:', y);\n        Vibrato.renderVibrato(ctx, start_x, y, this.render_options);\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.VibratoBracket.DEBUG` to `true`. */\nVibratoBracket.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n// MIT License\nimport { Accidental } from './accidental';\nimport { Annotation, AnnotationHorizontalJustify, AnnotationVerticalJustify } from './annotation';\nimport { Articulation } from './articulation';\nimport { BarNote } from './barnote';\nimport { Beam } from './beam';\nimport { ChordSymbol } from './chordsymbol';\nimport { ClefNote } from './clefnote';\nimport { Curve } from './curve';\nimport { EasyScore } from './easyscore';\nimport { Element } from './element';\nimport { Formatter } from './formatter';\nimport { FretHandFinger } from './frethandfinger';\nimport { GhostNote } from './ghostnote';\nimport { GlyphNote } from './glyphnote';\nimport { GraceNote } from './gracenote';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { KeySigNote } from './keysignote';\nimport { ModifierContext } from './modifiercontext';\nimport { MultiMeasureRest } from './multimeasurerest';\nimport { NoteSubGroup } from './notesubgroup';\nimport { Ornament } from './ornament';\nimport { PedalMarking } from './pedalmarking';\nimport { Renderer } from './renderer';\nimport { RepeatNote } from './repeatnote';\nimport { Stave } from './stave';\nimport { StaveConnector } from './staveconnector';\nimport { StaveLine } from './staveline';\nimport { StaveNote } from './stavenote';\nimport { StaveTie } from './stavetie';\nimport { StringNumber } from './stringnumber';\nimport { System } from './system';\nimport { TabNote } from './tabnote';\nimport { TabStave } from './tabstave';\nimport { TextBracket } from './textbracket';\nimport { TextDynamics } from './textdynamics';\nimport { TextNote } from './textnote';\nimport { TickContext } from './tickcontext';\nimport { TimeSigNote } from './timesignote';\nimport { Tuplet } from './tuplet';\nimport { defined, log, RuntimeError } from './util';\nimport { VibratoBracket } from './vibratobracket';\nimport { Voice } from './voice';\nimport { isHTMLCanvas } from './web';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Factory.DEBUG)\n        log('Vex.Flow.Factory', args);\n}\n/**\n * Factory implements a high level API around VexFlow.\n */\nexport class Factory {\n    /**\n     * Example:\n     *\n     * Create an SVG renderer and attach it to the DIV element named \"boo\" to render using <page-width> 1200 and <page-height> 600\n     *\n     * `const vf: Factory = new Vex.Flow.Factory({renderer: { elementId: 'boo', width: 1200, height: 600 }});`\n     */\n    constructor(options = {}) {\n        L('New factory: ', options);\n        this.options = {\n            stave: {\n                space: 10,\n            },\n            renderer: {\n                elementId: '',\n                width: 500,\n                height: 200,\n                background: '#FFF',\n            },\n            font: Factory.TEXT_FONT,\n        };\n        this.setOptions(options);\n    }\n    /**\n     * Static simplified function to access constructor without providing FactoryOptions\n     *\n     * Example:\n     *\n     * Create an SVG renderer and attach it to the DIV element named \"boo\" to render using <page-width> 1200 and <page-height> 600\n     *\n     * `const vf: Factory = Vex.Flow.Factory.newFromElementId('boo', 1200, 600 );`\n     */\n    static newFromElementId(elementId, width = 500, height = 200) {\n        return new Factory({ renderer: { elementId, width, height } });\n    }\n    reset() {\n        this.renderQ = [];\n        this.systems = [];\n        this.staves = [];\n        this.voices = [];\n        this.stave = undefined; // current stave\n    }\n    setOptions(options) {\n        this.options = Object.assign(Object.assign({}, this.options), options);\n        this.initRenderer();\n        this.reset();\n    }\n    initRenderer() {\n        const { elementId, width, height, background } = this.options.renderer;\n        if (elementId == null) {\n            return;\n        }\n        if (elementId == '') {\n            L(this);\n            throw new RuntimeError('renderer.elementId not set in FactoryOptions');\n        }\n        let backend = this.options.renderer.backend;\n        if (backend === undefined) {\n            const elem = document.getElementById(elementId);\n            // We use a custom type check here, because node-canvas mimics canvas,\n            // but is not an instance of window.HTMLCanvasElement.\n            // In fact, `window` might be undefined here.\n            // See: https://www.npmjs.com/package/canvas\n            if (isHTMLCanvas(elem)) {\n                backend = Renderer.Backends.CANVAS;\n            }\n            else {\n                backend = Renderer.Backends.SVG;\n            }\n        }\n        this.context = Renderer.buildContext(elementId, backend, width, height, background);\n    }\n    getContext() {\n        return this.context;\n    }\n    setContext(context) {\n        this.context = context;\n        return this;\n    }\n    getStave() {\n        return this.stave;\n    }\n    getVoices() {\n        return this.voices;\n    }\n    /** Return pixels from current stave spacing. */\n    Stave(params) {\n        const staveSpace = this.options.stave.space;\n        const p = Object.assign({ x: 0, y: 0, width: this.options.renderer.width - staveSpace * 1.0, options: { spacing_between_lines_px: staveSpace * 1.0 } }, params);\n        const stave = new Stave(p.x, p.y, p.width, p.options);\n        this.staves.push(stave);\n        stave.setContext(this.context);\n        this.stave = stave;\n        return stave;\n    }\n    TabStave(params) {\n        const staveSpace = this.options.stave.space;\n        const p = Object.assign({ x: 0, y: 0, width: this.options.renderer.width - staveSpace * 1.0, options: { spacing_between_lines_px: staveSpace * 1.3 } }, params);\n        const stave = new TabStave(p.x, p.y, p.width, p.options);\n        this.staves.push(stave);\n        stave.setContext(this.context);\n        this.stave = stave;\n        return stave;\n    }\n    StaveNote(noteStruct) {\n        const note = new StaveNote(noteStruct);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    GlyphNote(glyph, noteStruct, options) {\n        const note = new GlyphNote(glyph, noteStruct, options);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    RepeatNote(type, noteStruct, options) {\n        const note = new RepeatNote(type, noteStruct, options);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    GhostNote(noteStruct) {\n        const ghostNote = new GhostNote(noteStruct);\n        if (this.stave)\n            ghostNote.setStave(this.stave);\n        ghostNote.setContext(this.context);\n        this.renderQ.push(ghostNote);\n        return ghostNote;\n    }\n    TextNote(noteStruct) {\n        const textNote = new TextNote(noteStruct);\n        if (this.stave)\n            textNote.setStave(this.stave);\n        textNote.setContext(this.context);\n        this.renderQ.push(textNote);\n        return textNote;\n    }\n    BarNote(params = {}) {\n        const barNote = new BarNote(params.type);\n        if (this.stave)\n            barNote.setStave(this.stave);\n        barNote.setContext(this.context);\n        this.renderQ.push(barNote);\n        return barNote;\n    }\n    ClefNote(params) {\n        const p = Object.assign({ type: 'treble', options: {\n                size: 'default',\n                annotation: undefined,\n            } }, params);\n        const clefNote = new ClefNote(p.type, p.options.size, p.options.annotation);\n        if (this.stave)\n            clefNote.setStave(this.stave);\n        clefNote.setContext(this.context);\n        this.renderQ.push(clefNote);\n        return clefNote;\n    }\n    TimeSigNote(params) {\n        const p = Object.assign({ time: '4/4' }, params);\n        const timeSigNote = new TimeSigNote(p.time);\n        if (this.stave)\n            timeSigNote.setStave(this.stave);\n        timeSigNote.setContext(this.context);\n        this.renderQ.push(timeSigNote);\n        return timeSigNote;\n    }\n    KeySigNote(params) {\n        const keySigNote = new KeySigNote(params.key, params.cancelKey, params.alterKey);\n        if (this.stave)\n            keySigNote.setStave(this.stave);\n        keySigNote.setContext(this.context);\n        this.renderQ.push(keySigNote);\n        return keySigNote;\n    }\n    TabNote(noteStruct) {\n        const note = new TabNote(noteStruct);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    GraceNote(noteStruct) {\n        const note = new GraceNote(noteStruct);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        return note;\n    }\n    GraceNoteGroup(params) {\n        const group = new GraceNoteGroup(params.notes, params.slur);\n        group.setContext(this.context);\n        return group;\n    }\n    Accidental(params) {\n        const accid = new Accidental(params.type);\n        accid.setContext(this.context);\n        return accid;\n    }\n    Annotation(params) {\n        const p = Object.assign({ text: 'p', hJustify: AnnotationHorizontalJustify.CENTER, vJustify: AnnotationVerticalJustify.BOTTOM }, params);\n        const annotation = new Annotation(p.text);\n        annotation.setJustification(p.hJustify);\n        annotation.setVerticalJustification(p.vJustify);\n        annotation.setFont(p.font);\n        annotation.setContext(this.context);\n        return annotation;\n    }\n    ChordSymbol(params) {\n        const p = Object.assign({ vJustify: 'top', hJustify: 'center', kerning: true, reportWidth: true }, params);\n        const chordSymbol = new ChordSymbol();\n        chordSymbol.setHorizontal(p.hJustify);\n        chordSymbol.setVertical(p.vJustify);\n        chordSymbol.setEnableKerning(p.kerning);\n        chordSymbol.setReportWidth(p.reportWidth);\n        // There is a default font based on the engraving font.  Only set then\n        // font if it is specific, else use the default\n        if (typeof p.fontFamily === 'string' && typeof p.fontSize === 'number') {\n            if (typeof p.fontWeight === 'string')\n                chordSymbol.setFont(p.fontFamily, p.fontSize, p.fontWeight);\n            else\n                chordSymbol.setFont(p.fontFamily, p.fontSize, '');\n        }\n        else if (typeof p.fontSize === 'number') {\n            chordSymbol.setFontSize(p.fontSize);\n        }\n        chordSymbol.setContext(this.context);\n        return chordSymbol;\n    }\n    Articulation(params) {\n        const p = Object.assign({ type: 'a.', position: 'above' }, params);\n        const articulation = new Articulation(p.type);\n        articulation.setPosition(p.position);\n        articulation.setContext(this.context);\n        return articulation;\n    }\n    Ornament(type, params) {\n        const options = Object.assign({ type, position: 0, accidental: '' }, params);\n        const ornament = new Ornament(type);\n        ornament.setPosition(options.position);\n        if (options.upperAccidental) {\n            ornament.setUpperAccidental(options.upperAccidental);\n        }\n        if (options.lowerAccidental) {\n            ornament.setLowerAccidental(options.lowerAccidental);\n        }\n        if (typeof options.delayed !== 'undefined') {\n            ornament.setDelayed(options.delayed);\n        }\n        ornament.setContext(this.context);\n        return ornament;\n    }\n    TextDynamics(params) {\n        const p = Object.assign({ text: 'p', duration: 'q', dots: 0, line: 0 }, params);\n        const text = new TextDynamics({\n            text: p.text,\n            line: p.line,\n            duration: p.duration,\n            dots: p.dots,\n        });\n        if (this.stave)\n            text.setStave(this.stave);\n        text.setContext(this.context);\n        this.renderQ.push(text);\n        return text;\n    }\n    Fingering(params) {\n        const p = Object.assign({ number: '0', position: 'left' }, params);\n        const fingering = new FretHandFinger(p.number);\n        fingering.setPosition(p.position);\n        fingering.setContext(this.context);\n        return fingering;\n    }\n    StringNumber(params, drawCircle = true) {\n        const stringNumber = new StringNumber(params.number);\n        stringNumber.setPosition(params.position);\n        stringNumber.setContext(this.context);\n        stringNumber.setDrawCircle(drawCircle);\n        return stringNumber;\n    }\n    TickContext() {\n        return new TickContext();\n    }\n    ModifierContext() {\n        return new ModifierContext();\n    }\n    MultiMeasureRest(params) {\n        const numMeasures = defined(params.number_of_measures, 'NoNumberOfMeasures');\n        const multiMeasureRest = new MultiMeasureRest(numMeasures, params);\n        multiMeasureRest.setContext(this.context);\n        this.renderQ.push(multiMeasureRest);\n        return multiMeasureRest;\n    }\n    Voice(params) {\n        const p = Object.assign({ time: '4/4' }, params);\n        const voice = new Voice(p.time);\n        this.voices.push(voice);\n        return voice;\n    }\n    StaveConnector(params) {\n        const connector = new StaveConnector(params.top_stave, params.bottom_stave);\n        connector.setType(params.type).setContext(this.context);\n        this.renderQ.push(connector);\n        return connector;\n    }\n    Formatter(options) {\n        return new Formatter(options);\n    }\n    Tuplet(params) {\n        const p = Object.assign({ notes: [], options: {} }, params);\n        const tuplet = new Tuplet(p.notes, p.options).setContext(this.context);\n        this.renderQ.push(tuplet);\n        return tuplet;\n    }\n    Beam(params) {\n        var _a, _b, _c, _d, _e;\n        const beam = new Beam(params.notes, (_a = params.options) === null || _a === void 0 ? void 0 : _a.autoStem).setContext(this.context);\n        beam.breakSecondaryAt((_c = (_b = params.options) === null || _b === void 0 ? void 0 : _b.secondaryBeamBreaks) !== null && _c !== void 0 ? _c : []);\n        if ((_d = params.options) === null || _d === void 0 ? void 0 : _d.partialBeamDirections) {\n            Object.entries((_e = params.options) === null || _e === void 0 ? void 0 : _e.partialBeamDirections).forEach(([noteIndex, direction]) => {\n                beam.setPartialBeamSideAt(Number(noteIndex), direction);\n            });\n        }\n        this.renderQ.push(beam);\n        return beam;\n    }\n    Curve(params) {\n        const curve = new Curve(params.from, params.to, params.options).setContext(this.context);\n        this.renderQ.push(curve);\n        return curve;\n    }\n    StaveTie(params) {\n        var _a;\n        const tie = new StaveTie({\n            first_note: params.from,\n            last_note: params.to,\n            first_indices: params.first_indices,\n            last_indices: params.last_indices,\n        }, params.text);\n        if ((_a = params.options) === null || _a === void 0 ? void 0 : _a.direction)\n            tie.setDirection(params.options.direction);\n        tie.setContext(this.context);\n        this.renderQ.push(tie);\n        return tie;\n    }\n    StaveLine(params) {\n        var _a, _b;\n        const line = new StaveLine({\n            first_note: params.from,\n            last_note: params.to,\n            first_indices: params.first_indices,\n            last_indices: params.last_indices,\n        });\n        if ((_a = params.options) === null || _a === void 0 ? void 0 : _a.text)\n            line.setText(params.options.text);\n        if ((_b = params.options) === null || _b === void 0 ? void 0 : _b.font)\n            line.setFont(params.options.font);\n        line.setContext(this.context);\n        this.renderQ.push(line);\n        return line;\n    }\n    VibratoBracket(params) {\n        const vibratoBracket = new VibratoBracket({\n            start: params.from,\n            stop: params.to,\n        });\n        if (params.options.line)\n            vibratoBracket.setLine(params.options.line);\n        if (params.options.harsh)\n            vibratoBracket.setHarsh(params.options.harsh);\n        vibratoBracket.setContext(this.context);\n        this.renderQ.push(vibratoBracket);\n        return vibratoBracket;\n    }\n    TextBracket(params) {\n        const textBracket = new TextBracket({\n            start: params.from,\n            stop: params.to,\n            text: params.text,\n            superscript: params.options.superscript,\n            position: params.options.position,\n        });\n        if (params.options.line)\n            textBracket.setLine(params.options.line);\n        if (params.options.font)\n            textBracket.setFont(params.options.font);\n        textBracket.setContext(this.context);\n        this.renderQ.push(textBracket);\n        return textBracket;\n    }\n    System(params = {}) {\n        params.factory = this;\n        const system = new System(params).setContext(this.context);\n        this.systems.push(system);\n        return system;\n    }\n    /**\n     * Creates EasyScore. Normally the first step after constructing a Factory. For example:\n     * ```\n     * const vf: Factory = new Vex.Flow.Factory({renderer: { elementId: 'boo', width: 1200, height: 600 }});\n     * const score: EasyScore = vf.EasyScore();\n     * ```\n     * @param options.factory optional instance of Factory\n     * @param options.builder instance of Builder\n     * @param options.commitHooks function to call after a note element is created\n     * @param options.throwOnError throw error in case of parsing error\n     */\n    EasyScore(options = {}) {\n        options.factory = this;\n        return new EasyScore(options);\n    }\n    PedalMarking(params) {\n        const p = Object.assign({ notes: [], options: {\n                style: 'mixed',\n            } }, params);\n        const pedal = new PedalMarking(p.notes);\n        pedal.setType(PedalMarking.typeString[p.options.style]);\n        pedal.setContext(this.context);\n        this.renderQ.push(pedal);\n        return pedal;\n    }\n    NoteSubGroup(params) {\n        const p = Object.assign({ notes: [] }, params);\n        const group = new NoteSubGroup(p.notes);\n        group.setContext(this.context);\n        return group;\n    }\n    /** Render the score. */\n    draw() {\n        const ctx = this.context;\n        this.systems.forEach((s) => s.setContext(ctx).format());\n        this.staves.forEach((s) => s.setContext(ctx).draw());\n        this.voices.forEach((v) => v.setContext(ctx).draw());\n        this.renderQ.forEach((e) => {\n            if (!e.isRendered())\n                e.setContext(ctx).draw();\n        });\n        this.systems.forEach((s) => s.setContext(ctx).draw());\n        this.reset();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Factory.DEBUG` to `true`. */\nFactory.DEBUG = false;\n/** Default text font. */\nFactory.TEXT_FONT = Object.assign({}, Element.TEXT_FONT);\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Balazs Forian-Szabo\n//\n// ## Description\n//\n// A basic implementation of grace notes\n// to be rendered on a tab stave.\n//\n// See `tests/gracetabnote_tests.ts` for usage examples.\nimport { Font } from './font';\nimport { TabNote } from './tabnote';\nimport { Category } from './typeguard';\nexport class GraceTabNote extends TabNote {\n    static get CATEGORY() {\n        return Category.GraceTabNote;\n    }\n    constructor(noteStruct) {\n        super(noteStruct, false);\n        this.render_options = Object.assign(Object.assign({}, this.render_options), { \n            // vertical shift from stave line\n            y_shift: 0.3, \n            // grace glyph scale\n            scale: 0.6, \n            // grace tablature font\n            font: `7.5pt ${Font.SANS_SERIF}` });\n        this.updateWidth();\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This class implements diatonic key management.\nimport { Music } from './music';\nimport { RuntimeError } from './util';\nexport class KeyManager {\n    constructor(key) {\n        this.music = new Music();\n        this.setKey(key);\n    }\n    setKey(key) {\n        this.key = key;\n        this.reset();\n        return this;\n    }\n    getKey() {\n        return this.key;\n    }\n    reset() {\n        this.keyParts = this.music.getKeyParts(this.key);\n        this.keyString = this.keyParts.root;\n        if (this.keyParts.accidental)\n            this.keyString += this.keyParts.accidental;\n        const is_supported_type = Music.scaleTypes[this.keyParts.type];\n        if (!is_supported_type) {\n            throw new RuntimeError('BadArguments', `Unsupported key type: ${this.key}`);\n        }\n        this.scale = this.music.getScaleTones(this.music.getNoteValue(this.keyString), Music.scaleTypes[this.keyParts.type]);\n        this.scaleMap = {};\n        this.scaleMapByValue = {};\n        this.originalScaleMapByValue = {};\n        const noteLocation = Music.root_indices[this.keyParts.root];\n        for (let i = 0; i < Music.roots.length; ++i) {\n            const index = (noteLocation + i) % Music.roots.length;\n            const rootName = Music.roots[index];\n            const noteName = this.music.getRelativeNoteName(rootName, this.scale[i]);\n            this.scaleMap[rootName] = noteName;\n            this.scaleMapByValue[this.scale[i]] = noteName;\n            this.originalScaleMapByValue[this.scale[i]] = noteName;\n        }\n        return this;\n    }\n    getAccidental(key) {\n        const root = this.music.getKeyParts(key).root;\n        const parts = this.music.getNoteParts(this.scaleMap[root]);\n        return {\n            note: this.scaleMap[root],\n            accidental: parts.accidental,\n        };\n    }\n    selectNote(note) {\n        note = note.toLowerCase();\n        const parts = this.music.getNoteParts(note);\n        // First look for matching note in our altered scale\n        const scaleNote = this.scaleMap[parts.root];\n        const modparts = this.music.getNoteParts(scaleNote);\n        if (scaleNote === note) {\n            return {\n                note: scaleNote,\n                accidental: parts.accidental,\n                change: false,\n            };\n        }\n        // Then search for a note of equivalent value in our altered scale\n        const valueNote = this.scaleMapByValue[this.music.getNoteValue(note)];\n        if (valueNote != null) {\n            return {\n                note: valueNote,\n                accidental: this.music.getNoteParts(valueNote).accidental,\n                change: false,\n            };\n        }\n        // Then search for a note of equivalent value in the original scale\n        const originalValueNote = this.originalScaleMapByValue[this.music.getNoteValue(note)];\n        if (originalValueNote != null) {\n            this.scaleMap[modparts.root] = originalValueNote;\n            delete this.scaleMapByValue[this.music.getNoteValue(scaleNote)];\n            this.scaleMapByValue[this.music.getNoteValue(note)] = originalValueNote;\n            return {\n                note: originalValueNote,\n                accidental: this.music.getNoteParts(originalValueNote).accidental,\n                change: true,\n            };\n        }\n        // Then try to unmodify a currently modified note.\n        if (modparts.root === note) {\n            delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n            this.scaleMapByValue[this.music.getNoteValue(modparts.root)] = modparts.root;\n            this.scaleMap[modparts.root] = modparts.root;\n            return {\n                note: modparts.root,\n                accidental: undefined,\n                change: true,\n            };\n        }\n        // Last resort -- shitshoot\n        delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n        this.scaleMapByValue[this.music.getNoteValue(note)] = note;\n        delete this.scaleMap[modparts.root];\n        this.scaleMap[modparts.root] = note;\n        return {\n            note,\n            accidental: parts.accidental,\n            change: true,\n        };\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Author: Raffaele Viglianti, 2012 http://itisnotsound.wordpress.com/\n//\n// This class implements hairpins between notes.\n// Hairpins can be either crescendo or decrescendo.\nimport { Element } from './element';\nimport { Modifier } from './modifier';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class StaveHairpin extends Element {\n    /**\n     * Create a new hairpin from the specified notes.\n     *\n     * @param {!Object} notes The notes to tie up.\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *  }\n     * @param {!Object} type The type of hairpin\n     */\n    constructor(notes, type) {\n        super();\n        this.setNotes(notes);\n        this.hairpin = type;\n        this.position = Modifier.Position.BELOW;\n        this.render_options = {\n            height: 10,\n            y_shift: 0,\n            left_shift_px: 0,\n            right_shift_px: 0,\n            right_shift_ticks: 0,\n            left_shift_ticks: 0,\n        };\n    }\n    static get CATEGORY() {\n        return Category.StaveHairpin;\n    }\n    /* Helper function to convert ticks into pixels.\n     * Requires a Formatter with voices joined and formatted (to\n     * get pixels per tick)\n     *\n     * options is struct that has:\n     *\n     *  {\n     *   height: px,\n     *   y_shift: px,         // vertical offset\n     *   left_shift_ticks: 0, // left horizontal offset expressed in ticks\n     *   right_shift_ticks: 0 // right horizontal offset expressed in ticks\n     *  }\n     *\n     **/\n    static FormatByTicksAndDraw(ctx, formatter, notes, type, position, options) {\n        var _a, _b;\n        const ppt = formatter.pixelsPerTick;\n        if (ppt == null) {\n            throw new RuntimeError('BadArguments', 'A valid Formatter must be provide to draw offsets by ticks.');\n        }\n        const l_shift_px = ppt * ((_a = options.left_shift_ticks) !== null && _a !== void 0 ? _a : 0);\n        const r_shift_px = ppt * ((_b = options.right_shift_ticks) !== null && _b !== void 0 ? _b : 0);\n        const hairpin_options = {\n            height: options.height,\n            y_shift: options.y_shift,\n            left_shift_px: l_shift_px,\n            right_shift_px: r_shift_px,\n            right_shift_ticks: 0,\n            left_shift_ticks: 0,\n        };\n        new StaveHairpin({\n            first_note: notes.first_note,\n            last_note: notes.last_note,\n        }, type)\n            .setContext(ctx)\n            .setRenderOptions(hairpin_options)\n            .setPosition(position)\n            .draw();\n    }\n    setPosition(position) {\n        if (position === Modifier.Position.ABOVE || position === Modifier.Position.BELOW) {\n            this.position = position;\n        }\n        return this;\n    }\n    setRenderOptions(options) {\n        if (options.height != null &&\n            options.y_shift != null &&\n            options.left_shift_px != null &&\n            options.right_shift_px != null) {\n            this.render_options = options;\n        }\n        return this;\n    }\n    /**\n     * Set the notes to attach this hairpin to.\n     *\n     * @param {!Object} notes The start and end notes.\n     */\n    setNotes(notes) {\n        if (!notes.first_note && !notes.last_note) {\n            throw new RuntimeError('BadArguments', 'Hairpin needs to have either first_note or last_note set.');\n        }\n        this.notes = notes;\n        this.first_note = notes.first_note;\n        this.last_note = notes.last_note;\n        return this;\n    }\n    renderHairpin(params) {\n        const ctx = this.checkContext();\n        let dis = this.render_options.y_shift + 20;\n        let y_shift = params.first_y;\n        if (this.position === Modifier.Position.ABOVE) {\n            dis = -dis + 30;\n            y_shift = params.first_y - params.staff_height;\n        }\n        const l_shift = this.render_options.left_shift_px;\n        const r_shift = this.render_options.right_shift_px;\n        ctx.beginPath();\n        switch (this.hairpin) {\n            case StaveHairpin.type.CRESC:\n                ctx.moveTo(params.last_x + r_shift, y_shift + dis);\n                ctx.lineTo(params.first_x + l_shift, y_shift + this.render_options.height / 2 + dis);\n                ctx.lineTo(params.last_x + r_shift, y_shift + this.render_options.height + dis);\n                break;\n            case StaveHairpin.type.DECRESC:\n                ctx.moveTo(params.first_x + l_shift, y_shift + dis);\n                ctx.lineTo(params.last_x + r_shift, y_shift + this.render_options.height / 2 + dis);\n                ctx.lineTo(params.first_x + l_shift, y_shift + this.render_options.height + dis);\n                break;\n            default:\n                // Default is NONE, so nothing to draw\n                break;\n        }\n        ctx.stroke();\n        ctx.closePath();\n    }\n    draw() {\n        this.checkContext();\n        this.setRendered();\n        const firstNote = this.first_note;\n        const lastNote = this.last_note;\n        if (!firstNote || !lastNote)\n            throw new RuntimeError('NoNote', 'Notes required to draw');\n        const start = firstNote.getModifierStartXY(this.position, 0);\n        const end = lastNote.getModifierStartXY(this.position, 0);\n        this.renderHairpin({\n            first_x: start.x,\n            last_x: end.x,\n            first_y: firstNote.checkStave().getY() + firstNote.checkStave().getHeight(),\n            last_y: lastNote.checkStave().getY() + lastNote.checkStave().getHeight(),\n            staff_height: firstNote.checkStave().getHeight(),\n        });\n    }\n}\nStaveHairpin.type = {\n    CRESC: 1,\n    DECRESC: 2,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n//\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\nimport { Font, FontStyle, FontWeight } from './font';\nimport { TabTie } from './tabtie';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class TabSlide extends TabTie {\n    /**\n     * @param notes is a struct of the form:\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     * @param notes.first_note the starting note of the slide\n     * @param notes.last_note the ending note of the slide\n     * @param notes.first_indices specifies which string + fret positions of the TabNote are used in this slide. zero indexed.\n     * @param notes.last_indices currently unused. we assume it's the same as first_indices.\n     *\n     * @param direction TabSlide.SLIDE_UP or TabSlide.SLIDE_DOWN\n     */\n    constructor(notes, direction) {\n        super(notes, 'sl.');\n        // Determine the direction automatically if it is not provided.\n        if (!direction) {\n            let first_fret = notes.first_note.getPositions()[0].fret;\n            if (typeof first_fret === 'string') {\n                first_fret = parseInt(first_fret, 10);\n            }\n            let last_fret = notes.last_note.getPositions()[0].fret;\n            if (typeof last_fret === 'string') {\n                last_fret = parseInt(last_fret, 10);\n            }\n            // If either of the frets are 'X', parseInt() above will return NaN.\n            // Choose TabSlide.SLIDE_UP by default.\n            if (isNaN(first_fret) || isNaN(last_fret)) {\n                direction = TabSlide.SLIDE_UP;\n            }\n            else {\n                direction = first_fret > last_fret ? TabSlide.SLIDE_DOWN : TabSlide.SLIDE_UP;\n            }\n        }\n        this.direction = direction;\n        this.render_options.cp1 = 11;\n        this.render_options.cp2 = 14;\n        this.render_options.y_shift = 0.5;\n        this.resetFont();\n    }\n    static get CATEGORY() {\n        return Category.TabSlide;\n    }\n    static get SLIDE_UP() {\n        return 1;\n    }\n    static get SLIDE_DOWN() {\n        return -1;\n    }\n    static createSlideUp(notes) {\n        return new TabSlide(notes, TabSlide.SLIDE_UP);\n    }\n    static createSlideDown(notes) {\n        return new TabSlide(notes, TabSlide.SLIDE_DOWN);\n    }\n    renderTie(params) {\n        if (params.first_ys.length === 0 || params.last_ys.length === 0) {\n            throw new RuntimeError('BadArguments', 'No Y-values to render');\n        }\n        const ctx = this.checkContext();\n        const first_x_px = params.first_x_px;\n        const first_ys = params.first_ys;\n        const last_x_px = params.last_x_px;\n        const direction = params.direction;\n        if (direction !== TabSlide.SLIDE_UP && direction !== TabSlide.SLIDE_DOWN) {\n            throw new RuntimeError('BadSlide', 'Invalid slide direction');\n        }\n        // eslint-disable-next-line\n        const first_indices = this.notes.first_indices;\n        for (let i = 0; i < first_indices.length; ++i) {\n            const slide_y = first_ys[first_indices[i]] + this.render_options.y_shift;\n            if (isNaN(slide_y)) {\n                throw new RuntimeError('BadArguments', 'Bad indices for slide rendering.');\n            }\n            ctx.beginPath();\n            ctx.moveTo(first_x_px, slide_y + 3 * direction);\n            ctx.lineTo(last_x_px, slide_y - 3 * direction);\n            ctx.closePath();\n            ctx.stroke();\n        }\n        this.setRendered();\n    }\n}\nTabSlide.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 10,\n    weight: FontWeight.BOLD,\n    style: FontStyle.ITALIC,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Mike Corrigan <corrigan@gmail.com>\n// MIT License\nimport { Glyph } from './glyph';\nimport { GraceNote } from './gracenote';\nimport { Modifier } from './modifier';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category, isGraceNote } from './typeguard';\n/** Tremolo implements tremolo notation. */\nexport class Tremolo extends Modifier {\n    /**\n     * @param num number of bars\n     */\n    constructor(num) {\n        super();\n        this.num = num;\n        this.position = Modifier.Position.CENTER;\n        this.code = 'tremolo1';\n        // big strokes scales initialised to 1 (no scale)\n        this.y_spacing_scale = 1;\n        this.extra_stroke_scale = 1;\n    }\n    static get CATEGORY() {\n        return Category.Tremolo;\n    }\n    /** Draw the tremolo on the rendering context. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const stemDirection = note.getStemDirection();\n        const start = note.getModifierStartXY(this.position, this.index);\n        let x = start.x;\n        const gn = isGraceNote(note);\n        const scale = gn ? GraceNote.SCALE : 1;\n        const category = `tremolo.${gn ? 'grace' : 'default'}`;\n        const musicFont = Tables.currentMusicFont();\n        let y_spacing = musicFont.lookupMetric(`${category}.spacing`) * stemDirection;\n        // add y_spacing_scale for big strokes (#1258)\n        y_spacing *= this.y_spacing_scale;\n        const height = this.num * y_spacing;\n        let y = note.getStemExtents().baseY - height;\n        if (stemDirection < 0) {\n            y += musicFont.lookupMetric(`${category}.offsetYStemDown`) * scale;\n        }\n        else {\n            y += musicFont.lookupMetric(`${category}.offsetYStemUp`) * scale;\n        }\n        const fontScale = musicFont.lookupMetric(`${category}.point`);\n        x += musicFont.lookupMetric(`${category}.offsetXStem${stemDirection === Stem.UP ? 'Up' : 'Down'}`);\n        for (let i = 0; i < this.num; ++i) {\n            Glyph.renderGlyph(ctx, x, y, fontScale, this.code, { category, scale: this.extra_stroke_scale });\n            y += y_spacing;\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Tables } from './tables';\nimport { RuntimeError } from './util';\n/** `Tuning` implements varies types of tunings for tablature. */\nexport class Tuning {\n    /**\n     * Constructor.\n     * @param tuningString tuning name (eg. 'dagdad') or comma separated note strings\n     */\n    constructor(tuningString = 'E/5,B/4,G/4,D/4,A/3,E/3,B/2,E/2') {\n        this.tuningValues = [];\n        // Default to standard tuning.\n        this.setTuning(tuningString);\n    }\n    static get names() {\n        return {\n            standard: 'E/5,B/4,G/4,D/4,A/3,E/3',\n            dagdad: 'D/5,A/4,G/4,D/4,A/3,D/3',\n            dropd: 'E/5,B/4,G/4,D/4,A/3,D/3',\n            eb: 'Eb/5,Bb/4,Gb/4,Db/4,Ab/3,Db/3',\n            standardBanjo: 'D/5,B/4,G/4,D/4,G/5',\n        };\n    }\n    /** Return the note number associated to the note string. */\n    noteToInteger(noteString) {\n        return Tables.keyProperties(noteString).int_value;\n    }\n    /**\n     * Set tuning identified by tuning name (eg. 'dagdad')\n     * @param tuningString tuning name (eg. 'dagdad') or comma separated note strings\n     */\n    setTuning(tuningString) {\n        if (Tuning.names[tuningString]) {\n            tuningString = Tuning.names[tuningString];\n        }\n        this.tuningValues = [];\n        const keys = tuningString.split(/\\s*,\\s*/);\n        if (keys.length === 0) {\n            throw new RuntimeError('BadArguments', `Invalid tuning string: ${tuningString}`);\n        }\n        for (let i = 0; i < keys.length; ++i) {\n            this.tuningValues[i] = this.noteToInteger(keys[i]);\n        }\n    }\n    /** Return the note number associated with a tablature string. */\n    getValueForString(stringNum) {\n        const s = Number(stringNum);\n        if (s < 1 || s > this.tuningValues.length) {\n            throw new RuntimeError('BadArguments', `String number must be between 1 and ${this.tuningValues.length}:${stringNum}`);\n        }\n        return this.tuningValues[s - 1];\n    }\n    /** Return the note number associated with a tablature string and fret. */\n    getValueForFret(fretNum, stringNum) {\n        const stringValue = this.getValueForString(stringNum);\n        const f = Number(fretNum);\n        if (f < 0) {\n            throw new RuntimeError('BadArguments', `Fret number must be 0 or higher: ${fretNum}`);\n        }\n        return stringValue + f;\n    }\n    /** Return the note string associated with tablature string and fret. */\n    getNoteForFret(fretNum, stringNum) {\n        const noteValue = this.getValueForFret(fretNum, stringNum);\n        const octave = Math.floor(noteValue / 12);\n        const value = noteValue % 12;\n        return `${Tables.integerToNote(value)}/${octave}`;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Accidental } from './accidental';\nimport { Annotation, AnnotationHorizontalJustify, AnnotationVerticalJustify } from './annotation';\nimport { Articulation } from './articulation';\nimport { BarNote } from './barnote';\nimport { Beam } from './beam';\nimport { Bend } from './bend';\nimport { BoundingBox } from './boundingbox';\nimport { BoundingBoxComputation } from './boundingboxcomputation';\nimport { CanvasContext } from './canvascontext';\nimport { ChordSymbol, ChordSymbolHorizontalJustify, ChordSymbolVerticalJustify, SymbolModifiers, SymbolTypes, } from './chordsymbol';\nimport { Clef } from './clef';\nimport { ClefNote } from './clefnote';\nimport { Crescendo } from './crescendo';\nimport { Curve, CurvePosition } from './curve';\nimport { Dot } from './dot';\nimport { EasyScore } from './easyscore';\nimport { Element } from './element';\nimport { Factory } from './factory';\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Formatter } from './formatter';\nimport { Fraction } from './fraction';\nimport { FretHandFinger } from './frethandfinger';\nimport { GhostNote } from './ghostnote';\nimport { Glyph } from './glyph';\nimport { GlyphNote } from './glyphnote';\nimport { GraceNote } from './gracenote';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { GraceTabNote } from './gracetabnote';\nimport { KeyManager } from './keymanager';\nimport { KeySignature } from './keysignature';\nimport { KeySigNote } from './keysignote';\nimport { Modifier, ModifierPosition } from './modifier';\nimport { ModifierContext } from './modifiercontext';\nimport { MultiMeasureRest } from './multimeasurerest';\nimport { Music } from './music';\nimport { Note } from './note';\nimport { NoteHead } from './notehead';\nimport { NoteSubGroup } from './notesubgroup';\nimport { Ornament } from './ornament';\nimport { Parenthesis } from './parenthesis';\nimport { Parser } from './parser';\nimport { PedalMarking } from './pedalmarking';\nimport { Registry } from './registry';\nimport { RenderContext } from './rendercontext';\nimport { Renderer, RendererBackends, RendererLineEndType } from './renderer';\nimport { RepeatNote } from './repeatnote';\nimport { Stave } from './stave';\nimport { Barline, BarlineType } from './stavebarline';\nimport { StaveConnector } from './staveconnector';\nimport { StaveHairpin } from './stavehairpin';\nimport { StaveLine } from './staveline';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { StaveNote } from './stavenote';\nimport { Repetition } from './staverepetition';\nimport { StaveTempo } from './stavetempo';\nimport { StaveText } from './stavetext';\nimport { StaveTie } from './stavetie';\nimport { Volta, VoltaType } from './stavevolta';\nimport { Stem } from './stem';\nimport { StringNumber } from './stringnumber';\nimport { Stroke } from './strokes';\nimport { SVGContext } from './svgcontext';\nimport { System } from './system';\nimport { Tables } from './tables';\nimport { TabNote } from './tabnote';\nimport { TabSlide } from './tabslide';\nimport { TabStave } from './tabstave';\nimport { TabTie } from './tabtie';\nimport { TextBracket, TextBracketPosition } from './textbracket';\nimport { TextDynamics } from './textdynamics';\nimport { TextFormatter } from './textformatter';\nimport { TextJustification, TextNote } from './textnote';\nimport { TickContext } from './tickcontext';\nimport { TimeSignature } from './timesignature';\nimport { TimeSigNote } from './timesignote';\nimport { Tremolo } from './tremolo';\nimport { Tuning } from './tuning';\nimport { Tuplet } from './tuplet';\nimport { DATE, ID, VERSION } from './version';\nimport { Vibrato } from './vibrato';\nimport { VibratoBracket } from './vibratobracket';\nimport { Voice, VoiceMode } from './voice';\nexport class Flow {\n    static get BUILD() {\n        return {\n            /** version number. */\n            VERSION: VERSION,\n            /** git commit ID that this library was built from. */\n            ID: ID,\n            /** The date when this library was compiled. */\n            DATE: DATE,\n        };\n    }\n    /**\n     * Examples:\n     * ```\n     * Vex.Flow.setMusicFont('Petaluma');\n     * Vex.Flow.setMusicFont('Bravura', 'Gonville');\n     * ```\n     *\n     * **CASE 1**: You are using `vexflow.js`, which includes all music fonts (Bravura, Gonville, Petaluma, Custom).\n     * In this case, calling this method is optional, since VexFlow already defaults to a music font stack of:\n     * 'Bravura', 'Gonville', 'Custom'.\n     *\n     * **CASE 2**: You are using `vexflow-bravura.js` or `vexflow-petaluma.js` or `vexflow-gonville.js`,\n     * which includes a single music font. Calling this method is unnecessary.\n     *\n     * **CASE 3**: You are using the light weight `vexflow-core.js` to take advantage of lazy loading for fonts.\n     * In this case, the default music font stack is empty.\n     * Example:\n     * ```\n     * await Vex.Flow.fetchMusicFont('Petaluma');\n     * Vex.Flow.setMusicFont('Petaluma');\n     * ... (do VexFlow stuff) ...\n     * ```\n     * See `demos/fonts/` for more examples.\n     *\n     * @returns an array of Font objects corresponding to the provided `fontNames`.\n     */\n    static setMusicFont(...fontNames) {\n        // Convert the array of font names into an array of Font objects.\n        const fonts = fontNames.map((fontName) => Font.load(fontName));\n        Tables.MUSIC_FONT_STACK = fonts;\n        Glyph.MUSIC_FONT_STACK = fonts.slice();\n        Glyph.CURRENT_CACHE_KEY = fontNames.join(',');\n        return fonts;\n    }\n    /**\n     * Used with vexflow-core which supports dynamic font loading.\n     */\n    // eslint-disable-next-line\n    static fetchMusicFont(fontName, fontModuleOrPath) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // The default implementation does nothing.\n            // See vexflow-core.ts for the implementation that vexflow-core.js uses.\n        });\n    }\n    static getMusicFont() {\n        const fonts = Tables.MUSIC_FONT_STACK;\n        return fonts.map((font) => font.getName());\n    }\n    static get RENDER_PRECISION_PLACES() {\n        return Tables.RENDER_PRECISION_PLACES;\n    }\n    static set RENDER_PRECISION_PLACES(precision) {\n        Tables.RENDER_PRECISION_PLACES = precision;\n    }\n    static get SOFTMAX_FACTOR() {\n        return Tables.SOFTMAX_FACTOR;\n    }\n    static set SOFTMAX_FACTOR(factor) {\n        Tables.SOFTMAX_FACTOR = factor;\n    }\n    static get NOTATION_FONT_SCALE() {\n        return Tables.NOTATION_FONT_SCALE;\n    }\n    static set NOTATION_FONT_SCALE(value) {\n        Tables.NOTATION_FONT_SCALE = value;\n    }\n    static get TABLATURE_FONT_SCALE() {\n        return Tables.TABLATURE_FONT_SCALE;\n    }\n    static set TABLATURE_FONT_SCALE(value) {\n        Tables.TABLATURE_FONT_SCALE = value;\n    }\n    static get RESOLUTION() {\n        return Tables.RESOLUTION;\n    }\n    static set RESOLUTION(value) {\n        Tables.RESOLUTION = value;\n    }\n    static get SLASH_NOTEHEAD_WIDTH() {\n        return Tables.SLASH_NOTEHEAD_WIDTH;\n    }\n    static set SLASH_NOTEHEAD_WIDTH(value) {\n        Tables.SLASH_NOTEHEAD_WIDTH = value;\n    }\n    static get STAVE_LINE_DISTANCE() {\n        return Tables.STAVE_LINE_DISTANCE;\n    }\n    static set STAVE_LINE_DISTANCE(value) {\n        Tables.STAVE_LINE_DISTANCE = value;\n    }\n    static get STAVE_LINE_THICKNESS() {\n        return Tables.STAVE_LINE_THICKNESS;\n    }\n    static set STAVE_LINE_THICKNESS(value) {\n        Tables.STAVE_LINE_THICKNESS = value;\n    }\n    static get STEM_HEIGHT() {\n        return Tables.STEM_HEIGHT;\n    }\n    static set STEM_HEIGHT(value) {\n        Tables.STEM_HEIGHT = value;\n    }\n    static get STEM_WIDTH() {\n        return Tables.STEM_WIDTH;\n    }\n    static set STEM_WIDTH(value) {\n        Tables.STEM_WIDTH = value;\n    }\n    static get TIME4_4() {\n        return Tables.TIME4_4;\n    }\n    static get accidentalMap() {\n        return Tables.accidentalMap;\n    }\n    static get unicode() {\n        return Tables.unicode;\n    }\n    static keySignature(spec) {\n        return Tables.keySignature(spec);\n    }\n    static hasKeySignature(spec) {\n        return Tables.hasKeySignature(spec);\n    }\n    static getKeySignatures() {\n        return Tables.getKeySignatures();\n    }\n    static clefProperties(clef) {\n        return Tables.clefProperties(clef);\n    }\n    // eslint-disable-next-line\n    static keyProperties(key, clef, params) {\n        return Tables.keyProperties(key, clef, params);\n    }\n    static durationToTicks(duration) {\n        return Tables.durationToTicks(duration);\n    }\n}\nFlow.Accidental = Accidental;\nFlow.Annotation = Annotation;\nFlow.Articulation = Articulation;\nFlow.Barline = Barline;\nFlow.BarNote = BarNote;\nFlow.Beam = Beam;\nFlow.Bend = Bend;\nFlow.BoundingBox = BoundingBox;\nFlow.BoundingBoxComputation = BoundingBoxComputation;\nFlow.CanvasContext = CanvasContext;\nFlow.ChordSymbol = ChordSymbol;\nFlow.Clef = Clef;\nFlow.ClefNote = ClefNote;\nFlow.Crescendo = Crescendo;\nFlow.Curve = Curve;\nFlow.Dot = Dot;\nFlow.EasyScore = EasyScore;\nFlow.Element = Element;\nFlow.Factory = Factory;\nFlow.Font = Font;\nFlow.Formatter = Formatter;\nFlow.Fraction = Fraction;\nFlow.FretHandFinger = FretHandFinger;\nFlow.GhostNote = GhostNote;\nFlow.Glyph = Glyph;\nFlow.GlyphNote = GlyphNote;\nFlow.GraceNote = GraceNote;\nFlow.GraceNoteGroup = GraceNoteGroup;\nFlow.GraceTabNote = GraceTabNote;\nFlow.KeyManager = KeyManager;\nFlow.KeySignature = KeySignature;\nFlow.KeySigNote = KeySigNote;\nFlow.Modifier = Modifier;\nFlow.ModifierContext = ModifierContext;\nFlow.MultiMeasureRest = MultiMeasureRest;\nFlow.Music = Music;\nFlow.Note = Note;\nFlow.NoteHead = NoteHead;\nFlow.NoteSubGroup = NoteSubGroup;\nFlow.Ornament = Ornament;\nFlow.Parenthesis = Parenthesis;\nFlow.Parser = Parser;\nFlow.PedalMarking = PedalMarking;\nFlow.Registry = Registry;\nFlow.RenderContext = RenderContext;\nFlow.Renderer = Renderer;\nFlow.RepeatNote = RepeatNote;\nFlow.Repetition = Repetition;\nFlow.Stave = Stave;\nFlow.StaveConnector = StaveConnector;\nFlow.StaveHairpin = StaveHairpin;\nFlow.StaveLine = StaveLine;\nFlow.StaveModifier = StaveModifier;\nFlow.StaveNote = StaveNote;\nFlow.StaveTempo = StaveTempo;\nFlow.StaveText = StaveText;\nFlow.StaveTie = StaveTie;\nFlow.Stem = Stem;\nFlow.StringNumber = StringNumber;\nFlow.Stroke = Stroke;\nFlow.SVGContext = SVGContext;\nFlow.System = System;\nFlow.TabNote = TabNote;\nFlow.TabSlide = TabSlide;\nFlow.TabStave = TabStave;\nFlow.TabTie = TabTie;\nFlow.TextBracket = TextBracket;\nFlow.TextDynamics = TextDynamics;\nFlow.TextFormatter = TextFormatter;\nFlow.TextNote = TextNote;\nFlow.TickContext = TickContext;\nFlow.TimeSignature = TimeSignature;\nFlow.TimeSigNote = TimeSigNote;\nFlow.Tremolo = Tremolo;\nFlow.Tuning = Tuning;\nFlow.Tuplet = Tuplet;\nFlow.Vibrato = Vibrato;\nFlow.VibratoBracket = VibratoBracket;\nFlow.Voice = Voice;\nFlow.Volta = Volta;\n// Exported Enums.\n// Sorted by the module / file they are exported from.\nFlow.AnnotationHorizontalJustify = AnnotationHorizontalJustify;\nFlow.AnnotationVerticalJustify = AnnotationVerticalJustify;\nFlow.ChordSymbolHorizontalJustify = ChordSymbolHorizontalJustify;\nFlow.ChordSymbolVerticalJustify = ChordSymbolVerticalJustify;\nFlow.SymbolTypes = SymbolTypes;\nFlow.SymbolModifiers = SymbolModifiers;\nFlow.CurvePosition = CurvePosition;\nFlow.FontWeight = FontWeight;\nFlow.FontStyle = FontStyle;\nFlow.ModifierPosition = ModifierPosition;\nFlow.RendererBackends = RendererBackends;\nFlow.RendererLineEndType = RendererLineEndType;\nFlow.BarlineType = BarlineType;\nFlow.StaveModifierPosition = StaveModifierPosition;\nFlow.VoltaType = VoltaType;\nFlow.TextBracketPosition = TextBracketPosition;\nFlow.TextJustification = TextJustification;\nFlow.VoiceMode = VoiceMode;\n","export const VERSION = '4.0.3';\nexport const ID = '38d6b2dffc559d9271c8f30ac8582e7cc44a7920';\nexport const DATE = '2022-08-22T11:21:09.756Z';\n","export const BravuraFont = {\n    glyphs: {\n        bracketTop: {\n            x_min: 0,\n            x_max: 469,\n            y_min: 0,\n            y_max: 295,\n            ha: 295,\n            o: 'm 0 0 l 180 0 b 674 390 410 43 616 150 b 675 405 675 396 675 400 b 664 425 675 416 671 422 b 628 405 651 425 635 415 b 157 179 613 389 432 199 l 12 179 b 0 168 3 179 0 177 z',\n        },\n        bracketBottom: {\n            x_min: 0,\n            x_max: 469,\n            y_min: -295,\n            y_max: 0,\n            ha: 295,\n            o: 'm 0 -168 b 12 -179 0 -177 3 -179 l 157 -179 b 628 -405 432 -199 613 -389 b 664 -425 635 -415 651 -425 b 675 -405 671 -422 675 -416 b 674 -390 675 -400 675 -396 b 180 0 616 -150 410 -43 l 0 0 z',\n        },\n        barlineTick: {\n            x_min: 0,\n            x_max: 36,\n            y_min: 868,\n            y_max: 1120,\n            ha: 252,\n            o: 'm 52 1250 l 52 1613 l 0 1613 l 0 1250 z',\n        },\n        breathMarkTick: {\n            x_min: 0,\n            x_max: 500,\n            y_min: 0,\n            y_max: 502,\n            ha: 502,\n            o: 'm 9 367 b 0 374 6 372 3 374 b 9 334 0 367 0 343 b 179 19 40 312 164 121 b 192 0 179 3 186 0 b 210 19 197 0 207 6 b 698 701 245 197 507 658 b 720 714 714 704 720 711 b 698 723 720 720 711 723 b 197 186 455 714 210 202 b 186 176 194 179 189 176 b 176 186 179 176 176 186 b 9 367 143 266 27 359 z',\n        },\n        segno: {\n            x_min: 4,\n            x_max: 550,\n            y_min: -27,\n            y_max: 759,\n            ha: 786,\n            o: 'm 194 958 b 217 939 203 958 213 955 l 220 929 b 325 805 230 890 252 805 b 425 901 384 805 425 840 b 413 969 425 923 420 946 b 220 1060 390 1035 294 1060 b 6 793 120 1060 6 936 b 29 687 6 759 13 723 b 295 449 75 582 284 454 b 304 438 301 446 304 444 b 295 415 304 432 301 425 b 78 22 285 395 78 22 b 73 3 75 16 73 9 b 114 -39 73 -20 91 -39 b 150 -17 128 -39 143 -30 b 377 395 150 -17 373 386 b 395 402 377 393 389 402 b 704 176 416 397 704 312 b 621 75 704 120 670 82 l 616 73 b 562 138 586 73 562 94 l 562 154 b 485 249 562 209 526 249 b 468 246 480 249 474 248 b 366 153 415 233 366 210 b 540 -12 366 65 455 -12 b 600 -1 559 -12 579 -9 b 792 251 716 37 792 131 b 789 292 792 264 791 278 b 523 588 768 451 540 579 b 498 611 505 598 498 603 b 501 619 498 613 500 616 b 732 1032 508 631 732 1032 b 737 1053 736 1040 737 1045 b 697 1093 737 1076 719 1093 b 661 1073 683 1093 668 1086 b 423 647 661 1073 432 660 b 410 635 419 639 416 635 b 396 639 406 635 402 636 b 128 792 383 644 166 727 b 108 868 120 808 108 838 b 186 958 108 907 125 948 z m 598 671 b 680 589 598 626 635 589 b 762 671 726 589 762 626 b 680 753 762 717 726 753 b 598 671 635 753 598 717 z m 202 380 b 120 462 202 425 166 462 b 37 380 75 462 37 425 b 120 298 37 334 75 298 b 202 380 166 298 202 334 z',\n        },\n        coda: {\n            x_min: -4,\n            x_max: 955,\n            y_min: -158,\n            y_max: 898,\n            ha: 1056,\n            o: 'm 1349 576 l 1178 576 b 729 1083 1164 847 962 1064 l 729 1269 b 694 1293 729 1287 713 1293 b 660 1269 675 1293 660 1287 l 660 1083 b 210 576 426 1064 226 848 l 20 576 b -6 541 0 576 -6 560 b 20 507 -6 523 0 507 l 210 507 b 660 0 226 238 426 19 l 660 -202 b 694 -228 660 -222 675 -228 b 729 -202 713 -228 729 -222 l 729 0 b 1178 507 962 19 1164 238 l 1349 507 b 1375 541 1369 507 1375 523 b 1349 576 1375 560 1369 576 z m 940 576 l 729 576 l 729 1002 b 940 576 930 985 940 809 z m 660 1002 l 660 576 l 455 576 b 660 1002 455 809 455 985 z m 455 507 l 660 507 l 660 69 b 455 507 474 91 456 285 z m 729 69 l 729 507 l 940 507 b 729 69 936 287 909 91 z',\n        },\n        gClef: {\n            x_min: 0,\n            x_max: 671,\n            y_min: -658,\n            y_max: 1098,\n            ha: 1756,\n            o: 'm 541 598 b 550 625 539 615 541 616 b 824 1174 706 770 824 953 b 730 1509 824 1299 789 1423 b 655 1581 708 1541 671 1581 b 562 1512 635 1581 590 1544 b 420 1064 455 1394 420 1214 b 441 828 420 981 431 887 b 428 793 444 811 445 808 b 0 125 220 622 0 416 b 524 -363 0 -125 171 -363 b 624 -354 557 -363 595 -360 b 645 -367 639 -351 642 -350 b 684 -657 662 -464 684 -589 b 455 -896 684 -870 540 -896 b 340 -854 377 -896 340 -873 b 386 -829 340 -844 353 -840 b 482 -694 431 -816 482 -778 b 344 -547 482 -615 432 -547 b 190 -713 248 -547 190 -624 b 464 -948 190 -806 246 -948 b 747 -660 560 -948 747 -904 b 706 -351 747 -577 721 -441 b 724 -327 703 -334 704 -336 b 966 16 870 -269 966 -147 b 619 363 966 200 831 363 b 577 389 582 363 582 363 z m 677 1358 b 763 1240 724 1358 763 1319 b 513 851 763 1080 626 950 b 494 863 503 842 497 844 b 485 995 488 900 485 949 b 677 1358 485 1220 589 1358 z m 520 377 b 498 343 524 350 524 351 b 289 63 372 300 289 186 b 455 -192 289 -66 357 -158 b 494 -200 467 -196 484 -200 b 511 -184 505 -200 511 -193 b 490 -166 511 -174 500 -170 b 386 -12 429 -140 386 -78 b 530 157 386 71 442 132 b 559 145 553 163 556 161 l 631 -284 b 611 -304 634 -300 632 -300 b 530 -311 588 -308 559 -311 b 115 29 278 -311 115 -171 b 249 363 115 114 130 228 b 469 567 336 459 402 513 b 490 562 484 579 487 577 z m 619 148 b 635 168 616 166 618 170 b 848 -66 752 158 848 60 b 713 -271 848 -157 793 -230 b 690 -262 696 -279 693 -279 z',\n        },\n        cClef: {\n            x_min: 0,\n            x_max: 699,\n            y_min: -506,\n            y_max: 506,\n            ha: 1012,\n            o: 'm 331 694 b 301 724 331 714 321 724 l 300 724 b 269 694 279 724 269 714 l 269 -694 b 300 -724 269 -714 279 -724 l 301 -724 b 331 -694 321 -724 331 -714 l 331 -63 b 344 -55 331 -52 338 -53 b 472 -265 382 -65 442 -102 b 500 -301 477 -288 485 -301 b 530 -262 516 -301 523 -287 b 684 -128 549 -199 582 -128 b 804 -409 778 -128 804 -220 b 651 -683 804 -598 770 -683 b 528 -644 631 -683 528 -674 b 567 -622 528 -636 552 -628 b 625 -528 596 -612 625 -583 b 527 -429 625 -465 583 -429 b 416 -547 465 -429 416 -471 b 667 -729 416 -638 495 -729 b 1007 -413 903 -729 1007 -563 b 706 -76 1007 -215 897 -76 b 618 -89 664 -76 636 -84 b 576 -88 603 -94 589 -96 b 524 0 556 -75 524 -29 b 576 88 524 29 556 75 b 618 89 589 96 603 94 b 706 76 636 84 664 76 b 1007 413 897 76 1007 215 b 667 729 1007 563 903 729 b 416 547 495 729 416 638 b 527 429 416 471 465 429 b 625 528 583 429 625 465 b 567 622 625 583 596 612 b 528 644 552 628 528 636 b 651 683 528 674 631 683 b 804 409 770 683 804 598 b 684 128 804 220 778 128 b 530 262 582 128 549 199 b 500 301 523 287 516 301 b 472 265 485 301 477 288 b 344 55 442 102 382 65 b 331 63 338 53 331 52 z m 30 724 b 0 694 10 724 0 714 l 0 -694 b 30 -724 0 -714 10 -724 l 154 -724 b 184 -694 174 -724 184 -714 l 184 694 b 154 724 184 714 174 724 z',\n        },\n        fClef: {\n            x_min: -5,\n            x_max: 684,\n            y_min: -635,\n            y_max: 262,\n            ha: 897,\n            o: 'm 363 377 b 0 56 112 377 0 194 b 177 -158 0 -59 60 -158 b 330 -6 268 -158 330 -95 b 192 144 330 86 262 144 b 120 134 153 144 138 134 b 96 160 101 134 96 145 b 330 323 96 217 183 323 b 549 -53 482 323 549 173 b 14 -871 549 -455 350 -680 b -7 -897 1 -878 -7 -886 b 12 -914 -7 -906 -1 -914 b 36 -907 19 -914 27 -912 b 765 -40 390 -734 765 -478 b 363 377 765 210 612 377 z m 906 259 b 827 180 861 259 827 225 b 906 101 827 135 861 101 b 985 180 950 101 985 135 b 906 259 985 225 950 259 z m 907 -102 b 829 -180 863 -102 829 -135 b 907 -258 829 -225 863 -258 b 985 -180 952 -258 985 -225 b 907 -102 985 -135 952 -102 z',\n        },\n        unpitchedPercussionClef1: {\n            x_min: 0,\n            x_max: 382,\n            y_min: -250,\n            y_max: 250,\n            ha: 500,\n            o: 'm 230 -338 l 230 338 b 210 360 230 350 222 360 l 20 360 b 0 338 9 360 0 350 l 0 -338 b 20 -360 0 -350 9 -360 l 210 -360 b 230 -338 222 -360 230 -350 z m 550 338 b 530 360 550 350 541 360 l 340 360 b 320 338 328 360 320 350 l 320 -338 b 340 -360 320 -350 328 -360 l 530 -360 b 550 -338 541 -360 550 -350 z',\n        },\n        '6stringTabClef': {\n            x_min: -3,\n            x_max: 408,\n            y_min: -748,\n            y_max: 764,\n            ha: 1512,\n            o: 'm 557 1024 l 557 1100 l 26 1100 l 26 1024 l 249 1024 l 249 422 l 336 422 l 336 1024 z m 588 -328 l 350 348 l 238 348 l -4 -328 l 88 -328 l 160 -125 l 420 -125 l 491 -328 z m 397 -52 l 181 -52 l 292 256 z m 544 -883 b 420 -719 544 -802 507 -752 b 514 -572 482 -690 514 -639 b 314 -399 514 -472 442 -399 l 39 -399 l 39 -1077 l 344 -1077 b 544 -883 467 -1077 544 -995 z m 428 -583 b 292 -691 428 -652 389 -691 l 125 -691 l 125 -475 l 292 -475 b 428 -583 389 -475 428 -514 z m 458 -884 b 337 -1001 458 -949 418 -1001 l 125 -1001 l 125 -768 l 337 -768 b 458 -884 418 -768 458 -818 z',\n        },\n        timeSig0: {\n            x_min: 20,\n            x_max: 450,\n            y_min: -250,\n            y_max: 251,\n            ha: 501,\n            o: 'm 648 0 b 338 361 648 200 510 361 b 29 0 167 361 29 200 b 338 -360 29 -199 167 -360 b 648 0 510 -360 648 -199 z m 338 317 b 446 10 397 317 446 180 b 338 -295 446 -158 397 -295 b 230 10 278 -295 230 -158 b 338 317 230 180 278 317 z',\n        },\n        timeSig1: {\n            x_min: 20,\n            x_max: 314,\n            y_min: -250,\n            y_max: 251,\n            ha: 501,\n            o: 'm 35 19 b 29 0 35 19 29 10 b 45 -20 29 -7 33 -16 b 58 -23 50 -22 56 -23 b 78 -10 72 -23 78 -10 b 156 117 78 -10 140 89 b 170 131 161 127 167 131 b 179 111 176 131 179 120 l 179 -261 b 115 -315 179 -294 145 -315 b 91 -337 105 -315 91 -320 b 122 -360 91 -353 104 -360 l 429 -360 b 452 -337 452 -360 452 -337 b 431 -315 452 -337 452 -315 b 384 -265 410 -315 384 -289 l 384 328 b 356 361 384 351 376 360 b 281 356 336 361 300 356 b 206 360 253 356 228 357 b 199 361 203 360 200 361 b 173 334 184 361 179 347 z',\n        },\n        timeSig2: {\n            x_min: 20,\n            x_max: 426,\n            y_min: -257,\n            y_max: 254,\n            ha: 511,\n            o: 'm 606 -131 b 589 -111 606 -114 599 -111 b 570 -127 577 -111 573 -117 l 569 -128 b 513 -192 554 -164 543 -192 b 488 -187 505 -192 498 -190 b 445 -171 469 -180 459 -179 b 289 -137 416 -160 348 -137 b 236 -145 271 -137 252 -140 b 422 -42 268 -94 390 -50 b 613 147 523 -14 613 27 b 330 366 613 300 464 366 b 69 275 229 366 140 357 b 29 170 45 245 29 209 b 42 108 29 150 33 130 b 160 29 63 63 108 29 b 261 156 248 29 261 120 b 161 275 261 242 161 246 b 275 330 164 295 190 330 b 405 192 403 330 405 233 b 193 -102 405 60 297 -39 b 33 -317 114 -153 58 -223 l 32 -321 b 69 -370 32 -340 48 -370 b 203 -282 101 -370 118 -282 b 410 -360 261 -282 282 -360 b 606 -131 472 -360 583 -354 z',\n        },\n        timeSig3: {\n            x_min: 20,\n            x_max: 401,\n            y_min: -251,\n            y_max: 249,\n            ha: 500,\n            o: 'm 307 357 b 301 357 305 357 304 357 l 291 359 b 285 359 289 359 287 359 b 37 200 161 359 37 276 b 154 84 37 153 65 89 l 161 84 b 256 177 225 84 256 130 l 256 189 b 209 248 252 242 216 245 b 180 268 202 251 180 248 l 180 274 b 240 310 183 298 228 310 b 374 199 363 310 374 233 l 374 189 b 199 36 374 82 289 40 b 164 12 184 35 164 27 b 200 -6 164 -6 189 -6 b 379 -137 366 -6 379 -118 b 269 -307 379 -289 301 -307 b 256 -305 264 -307 258 -305 b 216 -282 245 -304 217 -304 l 216 -275 b 249 -180 216 -243 248 -222 b 145 -76 249 -120 207 -76 b 130 -78 140 -76 135 -76 b 60 -115 105 -82 78 -96 b 29 -203 36 -137 29 -171 b 275 -361 32 -315 134 -359 l 288 -361 b 577 -161 431 -361 577 -288 l 577 -151 b 537 -50 575 -109 564 -82 b 503 -20 528 -39 517 -29 l 472 -3 l 425 10 b 410 17 418 12 413 12 b 409 24 409 20 409 22 b 415 37 409 30 410 36 b 459 50 431 42 446 43 b 547 181 517 78 547 115 b 307 357 547 314 367 353 z',\n        },\n        timeSig4: {\n            x_min: 20,\n            x_max: 450,\n            y_min: -250,\n            y_max: 251,\n            ha: 501,\n            o: 'm 521 -107 l 521 202 b 504 226 521 213 520 226 b 475 213 491 226 484 223 l 338 48 b 325 14 333 40 325 32 l 325 -107 l 131 -107 b 481 336 246 -9 477 318 l 482 340 b 461 361 482 353 472 361 b 363 359 448 361 389 359 b 261 361 337 359 272 361 b 228 334 248 361 228 357 b 43 -105 228 156 86 -45 l 35 -117 b 35 -118 35 -117 35 -118 l 33 -120 b 29 -137 30 -127 29 -132 b 58 -161 29 -151 40 -161 l 325 -161 l 325 -252 b 268 -302 325 -291 294 -302 b 235 -330 245 -302 235 -315 b 262 -360 235 -344 240 -360 l 569 -360 b 598 -330 583 -360 598 -350 b 566 -301 598 -310 580 -301 b 521 -246 552 -301 521 -292 l 521 -161 l 626 -161 b 648 -134 641 -161 648 -151 b 626 -107 648 -117 642 -107 z',\n        },\n        timeSig5: {\n            x_min: 20,\n            x_max: 383,\n            y_min: -251,\n            y_max: 246,\n            ha: 497,\n            o: 'm 109 85 b 117 179 109 85 115 166 b 138 197 118 190 125 197 l 144 197 b 285 184 158 194 226 184 b 492 323 485 184 492 300 b 472 353 492 341 488 353 b 295 340 454 353 341 340 b 101 354 249 340 125 351 b 66 330 75 354 68 341 l 50 10 l 50 7 b 79 -14 50 -12 65 -14 b 111 14 94 -14 95 -1 b 209 62 125 29 160 62 b 357 -125 258 62 357 35 b 235 -304 357 -284 272 -304 b 202 -300 223 -304 212 -304 b 184 -279 194 -295 186 -289 b 202 -259 184 -269 194 -264 b 256 -163 235 -239 256 -203 b 144 -50 256 -99 206 -50 b 30 -157 66 -50 35 -107 b 29 -183 29 -166 29 -174 b 284 -361 29 -302 107 -361 b 552 -125 456 -361 552 -255 b 314 112 552 6 445 112 b 122 71 230 112 168 98 b 115 69 120 69 117 69 b 109 79 109 69 109 75 z',\n        },\n        timeSig6: {\n            x_min: 20,\n            x_max: 414,\n            y_min: -249,\n            y_max: 251,\n            ha: 500,\n            o: 'm 439 120 b 554 229 500 120 554 167 b 553 245 554 235 554 239 b 348 361 539 337 426 361 b 85 209 239 360 137 307 b 29 4 53 148 29 72 l 29 -1 b 73 -200 30 -68 42 -143 b 324 -359 132 -307 203 -359 b 513 -307 389 -359 461 -348 b 596 -137 563 -266 596 -202 b 379 72 596 -24 490 72 b 248 22 333 72 285 55 b 239 19 245 19 242 19 b 226 53 230 19 226 30 b 346 327 230 320 315 327 b 393 305 374 327 393 320 b 357 251 393 285 366 268 b 347 209 350 238 347 223 b 369 150 347 187 354 166 b 439 120 379 131 420 120 z m 320 3 b 405 -158 366 3 405 -69 b 320 -320 405 -248 366 -320 b 236 -158 274 -320 236 -248 b 320 3 236 -69 274 3 z',\n        },\n        timeSig7: {\n            x_min: 20,\n            x_max: 421,\n            y_min: -250,\n            y_max: 249,\n            ha: 499,\n            o: 'm 606 294 b 582 351 606 333 606 351 b 552 336 580 351 557 346 b 485 236 541 318 521 236 b 262 359 449 236 382 359 b 137 307 179 359 157 325 b 98 281 117 288 108 282 b 60 315 86 281 68 301 b 43 325 58 321 50 325 b 29 308 36 325 29 321 l 29 71 b 45 48 29 71 30 48 b 66 76 56 48 60 60 b 164 196 81 112 99 196 b 374 88 222 196 291 88 b 446 118 415 88 435 109 b 459 124 451 121 456 124 b 469 111 465 124 468 120 b 272 -112 469 71 359 -10 b 173 -315 217 -176 173 -259 b 200 -360 173 -346 173 -360 b 294 -347 226 -360 258 -347 b 412 -360 330 -347 397 -360 b 435 -307 426 -360 435 -348 b 606 288 435 -66 606 140 z',\n        },\n        timeSig8: {\n            x_min: 20,\n            x_max: 416,\n            y_min: -259,\n            y_max: 259,\n            ha: 518,\n            o: 'm 481 52 b 567 204 533 85 567 132 b 317 373 567 351 356 373 b 36 176 150 373 36 297 b 161 -16 36 76 92 23 b 29 -190 86 -52 29 -99 b 301 -373 29 -315 158 -373 b 599 -117 445 -373 599 -311 b 481 52 599 -30 549 17 z m 406 85 b 168 240 291 125 168 150 b 314 331 168 301 251 331 b 482 207 360 331 482 308 b 406 85 482 150 454 112 z m 295 -325 b 111 -183 199 -325 111 -276 b 225 -48 111 -125 161 -72 b 436 -219 330 -94 436 -124 b 295 -325 436 -276 392 -325 z',\n        },\n        timeSig9: {\n            x_min: 20,\n            x_max: 414,\n            y_min: -249,\n            y_max: 251,\n            ha: 500,\n            o: 'm 186 -117 b 71 -226 125 -117 71 -164 b 72 -242 71 -232 71 -236 b 276 -359 86 -334 199 -359 b 540 -206 386 -357 488 -304 b 596 -1 572 -145 596 -69 l 596 4 b 552 203 595 71 583 145 b 301 361 492 310 422 361 b 112 310 236 361 164 351 b 29 140 62 269 29 204 b 246 -69 29 27 135 -69 b 377 -19 292 -69 340 -52 b 386 -16 380 -16 383 -16 b 399 -50 395 -16 399 -27 b 279 -324 395 -317 310 -324 b 232 -302 251 -324 232 -317 b 268 -248 232 -282 259 -265 b 278 -206 275 -235 278 -220 b 256 -147 278 -184 271 -163 b 186 -117 246 -128 204 -117 z m 305 0 b 220 161 259 0 220 72 b 305 323 220 251 259 323 b 389 161 351 323 389 251 b 305 0 389 72 351 0 z',\n        },\n        timeSigCommon: {\n            x_min: 5,\n            x_max: 424,\n            y_min: -249,\n            y_max: 251,\n            ha: 500,\n            o: 'm 336 361 b 7 -14 131 361 7 180 b 101 -262 7 -108 42 -190 b 321 -359 156 -328 235 -359 b 611 -88 573 -359 611 -130 b 589 -56 611 -56 595 -56 b 567 -82 577 -56 567 -58 b 363 -311 567 -268 409 -311 b 184 40 246 -311 184 -197 b 372 327 184 278 294 327 b 477 278 446 327 477 292 b 451 246 477 265 472 246 b 360 140 393 246 360 184 b 471 32 360 58 431 32 b 580 156 471 32 580 36 b 336 361 580 344 363 361 z',\n        },\n        timeSigCutCommon: {\n            x_min: 0,\n            x_max: 418,\n            y_min: -359,\n            y_max: 361,\n            ha: 720,\n            o: 'm 573 -58 b 559 -82 567 -58 559 -60 b 354 -310 559 -266 400 -310 b 317 -305 340 -310 328 -308 b 302 -284 311 -304 302 -295 l 302 287 b 338 323 302 297 328 321 b 363 324 347 324 356 324 b 468 275 436 324 468 289 b 442 243 468 264 464 243 b 351 137 384 243 351 181 b 462 30 351 56 422 30 b 572 154 462 30 572 35 b 318 357 572 295 441 357 b 302 390 310 359 302 383 l 302 495 b 276 520 302 507 292 520 b 252 495 265 520 252 507 l 252 369 b 235 346 252 359 238 346 l 196 331 b 0 -14 66 275 0 122 b 225 -346 0 -150 86 -310 b 252 -382 235 -350 252 -369 l 252 -492 b 276 -517 252 -505 265 -517 b 302 -492 292 -517 302 -505 l 302 -379 b 318 -359 302 -370 308 -363 b 602 -85 563 -354 602 -130 b 579 -58 600 -58 586 -58 z m 252 -235 b 243 -252 252 -248 248 -252 b 236 -248 240 -252 238 -251 b 177 37 197 -193 177 -96 b 232 259 177 147 200 215 b 236 262 233 262 235 262 b 252 239 243 262 252 251 z',\n        },\n        timeSigPlus: {\n            x_min: -1,\n            x_max: 499,\n            y_min: -250,\n            y_max: 250,\n            ha: 500,\n            o: 'm 432 53 b 413 79 420 53 413 65 l 413 340 b 392 360 413 350 405 360 l 325 360 b 305 340 312 360 305 350 l 305 79 b 284 53 305 66 292 53 l 19 53 b -1 33 9 53 -1 46 l -1 -33 b 19 -55 -1 -46 9 -55 l 284 -55 b 305 -75 298 -55 305 -68 l 305 -340 b 325 -360 305 -350 312 -360 l 392 -360 b 413 -340 405 -360 413 -350 l 413 -78 b 433 -55 413 -63 423 -55 l 698 -55 b 719 -33 708 -55 719 -46 l 719 33 b 698 53 719 46 708 53 z',\n        },\n        timeSigPlusSmall: {\n            x_min: -1,\n            x_max: 255,\n            y_min: -133,\n            y_max: 123,\n            ha: 256,\n            o: 'm 220 20 b 210 33 215 20 210 26 l 210 166 b 200 177 210 171 206 177 l 166 177 b 156 166 160 177 156 171 l 156 33 b 145 20 156 27 150 20 l 10 20 b -1 10 4 20 -1 16 l -1 -24 b 10 -35 -1 -30 4 -35 l 145 -35 b 156 -46 153 -35 156 -42 l 156 -180 b 166 -192 156 -186 160 -192 l 200 -192 b 210 -180 206 -192 210 -186 l 210 -48 b 222 -35 210 -39 216 -35 l 356 -35 b 367 -24 361 -35 367 -30 l 367 10 b 356 20 367 16 361 20 z',\n        },\n        timeSigMinus: {\n            x_min: 0,\n            x_max: 448,\n            y_min: -35,\n            y_max: 40,\n            ha: 75,\n            o: 'm 645 39 b 619 58 645 49 634 58 l 27 58 b 0 39 12 58 0 49 l 0 -32 b 27 -50 0 -42 12 -50 l 619 -50 b 645 -32 634 -50 645 -42 z',\n        },\n        timeSigParensRight: {\n            x_min: 0,\n            x_max: 184,\n            y_min: -489,\n            y_max: 491,\n            ha: 980,\n            o: 'm 0 -696 b 3 -704 0 -698 1 -704 b 7 -703 4 -704 6 -704 b 265 1 187 -530 265 -282 b 12 701 265 289 187 531 b 4 707 12 701 6 707 b 0 696 1 707 0 703 l 0 665 b 4 644 0 665 0 651 b 167 1 112 503 167 315 b 6 -641 167 -311 109 -497 b 0 -658 3 -644 0 -651 z',\n        },\n        timeSigParensRightSmall: {\n            x_min: 0,\n            x_max: 110,\n            y_min: -251,\n            y_max: 249,\n            ha: 500,\n            o: 'm 0 -356 b 3 -361 0 -357 1 -361 b 158 0 112 -272 158 -145 b 4 359 158 147 109 272 b 0 353 3 359 0 357 l 0 338 b 3 327 0 338 0 330 b 91 0 60 246 91 160 b 4 -328 91 -160 62 -249 b 0 -337 3 -330 0 -333 z',\n        },\n        timeSigParensLeft: {\n            x_min: 0,\n            x_max: 184,\n            y_min: -489,\n            y_max: 491,\n            ha: 980,\n            o: 'm 265 -658 b 259 -641 265 -651 262 -644 b 98 1 156 -497 98 -311 b 261 644 98 315 153 503 b 265 665 265 651 265 665 l 265 696 b 261 707 265 703 264 707 b 253 701 259 707 253 701 b 0 1 78 531 0 289 b 258 -703 0 -282 78 -530 b 262 -704 259 -704 261 -704 b 265 -696 264 -704 265 -698 z',\n        },\n        timeSigParensLeftSmall: {\n            x_min: 0,\n            x_max: 110,\n            y_min: -251,\n            y_max: 249,\n            ha: 500,\n            o: 'm 158 -337 b 154 -328 158 -333 156 -330 b 68 0 96 -249 68 -160 b 156 327 68 160 98 246 b 158 338 158 330 158 338 l 158 353 b 154 359 158 357 156 359 b 0 0 49 272 0 147 b 156 -361 0 -145 46 -272 b 158 -356 157 -361 158 -357 z',\n        },\n        noteheadDoubleWhole: {\n            x_min: 0,\n            x_max: 599,\n            y_min: -155,\n            y_max: 155,\n            ha: 310,\n            o: 'm 13 223 b 0 212 4 223 0 217 l 0 -213 b 13 -223 0 -219 4 -223 l 32 -223 b 45 -213 39 -223 45 -219 l 45 212 b 32 223 45 217 39 223 z m 96 223 b 82 212 88 223 82 217 l 82 -213 b 96 -223 82 -219 88 -223 l 114 -223 b 128 -213 121 -223 128 -219 l 128 212 b 114 223 128 217 121 223 z m 747 223 b 733 212 740 223 733 217 l 733 -213 b 747 -223 733 -219 740 -223 l 766 -223 b 780 -213 773 -223 780 -219 l 780 212 b 766 223 780 217 773 223 z m 829 223 b 815 212 824 223 815 217 l 815 -213 b 829 -223 815 -219 824 -223 l 848 -223 b 863 -213 857 -223 863 -219 l 863 212 b 848 223 863 217 857 223 z m 438 180 b 130 1 248 180 130 101 b 423 -180 130 -92 210 -180 b 733 1 657 -180 733 -98 b 438 180 733 104 572 180 z m 469 -145 b 331 -71 409 -145 369 -112 b 284 58 305 -37 284 12 b 400 147 284 131 333 147 b 577 -45 498 147 577 42 b 469 -145 577 -115 533 -145 z',\n        },\n        noteheadWhole: {\n            x_min: 0,\n            x_max: 422,\n            y_min: -125,\n            y_max: 125,\n            ha: 250,\n            o: 'm 311 180 b 0 3 120 180 0 101 b 297 -180 0 -94 82 -180 b 608 3 533 -180 608 -98 b 311 180 608 105 445 180 z m 160 91 b 274 148 176 141 229 148 b 452 -45 373 148 452 42 b 386 -141 452 -89 433 -130 b 341 -147 372 -145 356 -147 b 206 -72 289 -147 236 -112 b 156 56 177 -39 156 10 b 160 91 156 68 157 79 z',\n        },\n        noteheadHalf: {\n            x_min: 0,\n            x_max: 295,\n            y_min: -125,\n            y_max: 125,\n            ha: 250,\n            o: 'm 140 -180 b 425 60 377 -180 425 13 b 282 180 425 134 366 180 b 0 -60 68 180 0 14 b 140 -180 0 -137 60 -180 z m 108 -125 b 50 -92 78 -125 60 -109 b 42 -63 46 -84 42 -73 b 318 121 42 7 251 121 b 372 91 346 121 361 108 b 380 63 376 82 380 73 b 108 -125 380 1 177 -125 z',\n        },\n        noteheadBlack: {\n            x_min: 0,\n            x_max: 295,\n            y_min: -125,\n            y_max: 125,\n            ha: 250,\n            o: 'm 140 -180 b 425 60 268 -180 425 -62 b 285 180 425 134 367 180 b 0 -60 127 180 0 63 b 140 -180 0 -135 62 -180 z',\n        },\n        noteheadXDoubleWhole: {\n            x_min: 0,\n            x_max: 546,\n            y_min: -155,\n            y_max: 155,\n            ha: 310,\n            o: 'm 43 213 b 30 223 43 217 39 223 l 13 223 b 0 213 6 223 0 217 l 0 -215 b 13 -223 0 -219 6 -223 l 30 -223 b 43 -215 39 -223 43 -219 z m 704 213 b 693 223 704 217 698 223 l 672 223 b 660 213 667 223 660 217 l 660 163 b 634 180 655 173 645 180 l 505 180 b 484 173 498 180 490 177 l 393 95 l 300 173 b 279 180 294 177 287 180 l 151 180 b 125 163 141 180 130 173 l 125 213 b 112 223 125 217 118 223 l 94 223 b 82 213 86 223 82 217 l 82 -215 b 94 -223 82 -219 86 -223 l 112 -223 b 125 -215 118 -223 125 -219 l 125 -163 b 151 -180 130 -173 140 -180 l 279 -180 b 300 -171 287 -180 294 -177 l 393 -95 l 485 -171 b 505 -180 491 -177 498 -180 l 632 -180 b 660 -163 645 -180 655 -173 l 660 -215 b 672 -223 660 -219 667 -223 l 693 -223 b 704 -215 698 -223 704 -219 z m 786 213 b 772 223 786 217 780 223 l 755 223 b 740 213 747 223 740 217 l 740 -215 b 755 -223 740 -219 747 -223 l 772 -223 b 786 -215 780 -223 786 -219 z m 507 -141 l 393 -45 l 276 -141 l 207 -141 l 364 0 l 207 141 l 276 141 l 393 45 l 507 141 l 577 141 l 420 0 l 577 -141 z m 660 -132 l 518 0 l 660 132 z m 125 131 l 266 0 l 125 -131 z',\n        },\n        noteheadXWhole: {\n            x_min: 0,\n            x_max: 377,\n            y_min: -125,\n            y_max: 125,\n            ha: 250,\n            o: 'm 272 -95 l 364 -171 b 384 -180 370 -177 377 -180 l 511 -180 b 543 -148 528 -180 543 -164 b 531 -124 543 -140 539 -131 l 412 0 l 531 124 b 541 148 539 131 541 140 b 513 180 541 164 528 180 l 384 180 b 364 171 377 180 370 177 l 272 94 l 179 171 b 158 180 173 177 166 180 l 30 180 b 0 148 16 180 0 164 b 12 124 0 140 4 131 l 132 0 l 12 -124 b 1 -148 4 -131 1 -140 b 32 -180 1 -164 14 -180 l 158 -180 b 179 -171 166 -180 173 -177 z m 386 -141 l 272 -45 l 157 -141 l 88 -141 l 245 0 l 88 141 l 157 141 l 272 45 l 386 141 l 456 141 l 300 0 l 456 -141 z',\n        },\n        noteheadXHalf: {\n            x_min: 0,\n            x_max: 334,\n            y_min: -125,\n            y_max: 125,\n            ha: 250,\n            o: 'm 295 180 b 271 170 287 180 278 177 l 209 98 l 115 171 b 95 180 109 177 104 180 l 36 180 b 4 148 19 180 4 164 b 14 124 4 140 7 132 l 140 22 l 7 -127 b 0 -148 3 -131 0 -138 b 32 -180 0 -166 14 -180 l 184 -180 b 209 -170 193 -180 203 -177 l 271 -99 l 363 -171 b 384 -180 370 -176 377 -180 l 445 -180 b 478 -147 461 -180 478 -163 b 465 -125 478 -138 474 -131 l 341 -22 l 474 127 b 481 148 480 131 481 138 b 448 180 481 166 468 180 z m 36 148 l 95 148 l 233 33 l 334 148 l 410 148 l 274 -6 l 445 -148 l 384 -148 l 248 -35 l 147 -148 l 71 -148 l 206 4 z',\n        },\n        noteheadXBlack: {\n            x_min: 0,\n            x_max: 290,\n            y_min: -125,\n            y_max: 125,\n            ha: 250,\n            o: 'm 410 -143 l 239 0 l 410 144 b 418 160 415 147 418 154 b 399 180 418 171 408 180 b 389 177 396 180 392 179 l 207 26 l 29 177 b 17 180 26 179 22 180 b 0 161 7 180 0 170 b 7 144 0 156 3 148 l 179 0 l 7 -143 b 0 -158 1 -147 0 -153 b 19 -180 0 -170 7 -180 b 29 -176 23 -180 26 -179 l 207 -24 l 389 -176 b 399 -180 392 -179 396 -180 b 418 -160 410 -180 418 -168 b 410 -143 418 -153 415 -147 z',\n        },\n        noteheadCircleXDoubleWhole: {\n            x_min: 0,\n            x_max: 422,\n            y_min: -155,\n            y_max: 155,\n            ha: 310,\n            o: 'm 576 223 b 563 213 570 223 563 219 l 563 -215 b 576 -223 563 -219 570 -223 l 595 -223 b 608 -215 602 -223 608 -219 l 608 213 b 595 223 608 219 602 223 z m 497 223 b 484 213 491 223 484 219 l 484 -215 b 497 -223 484 -219 491 -223 l 516 -223 b 528 -215 523 -223 528 -219 l 528 213 b 516 223 528 219 523 223 z m 94 223 b 81 213 86 223 81 219 l 81 -215 b 94 -223 81 -219 86 -223 l 111 -223 b 124 -215 118 -223 124 -219 l 124 213 b 111 223 124 219 118 223 z m 13 223 b 0 213 6 223 0 219 l 0 -215 b 13 -223 0 -219 6 -223 l 30 -223 b 45 -215 37 -223 45 -219 l 45 213 b 30 223 45 219 37 223 z m 304 180 b 127 0 206 180 127 101 b 304 -180 127 -99 206 -180 b 482 0 405 -180 482 -99 b 304 180 482 101 405 180 z m 305 32 l 225 112 b 304 140 248 130 275 140 b 387 112 336 140 364 130 z m 278 1 l 193 -82 b 216 0 199 -59 216 -30 b 194 85 216 33 203 50 z m 334 1 l 418 84 b 389 0 402 50 389 23 b 418 -81 389 -30 409 -60 z m 305 -27 l 389 -109 b 304 -138 364 -128 336 -138 b 222 -109 274 -138 246 -128 z',\n        },\n        noteheadCircleXWhole: {\n            x_min: 0,\n            x_max: 249,\n            y_min: -125,\n            y_max: 125,\n            ha: 250,\n            o: 'm 179 180 b 0 0 81 180 0 101 b 179 -180 0 -99 81 -180 b 359 0 278 -180 359 -99 b 179 180 359 101 278 180 z m 180 32 l 99 112 b 179 140 121 130 150 140 b 262 112 210 140 238 130 z m 151 1 l 68 -82 b 86 0 73 -59 86 -30 b 68 85 86 33 78 50 z m 209 1 l 291 84 b 269 0 276 50 269 32 b 291 -79 269 -26 282 -58 z m 180 -27 l 264 -111 b 179 -138 239 -128 210 -138 b 96 -111 148 -138 120 -128 z',\n        },\n        noteheadCircleXHalf: {\n            x_min: 0,\n            x_max: 250,\n            y_min: -125,\n            y_max: 125,\n            ha: 250,\n            o: 'm 179 180 b 0 0 81 180 0 101 b 179 -180 0 -99 81 -180 b 360 0 278 -180 360 -99 b 179 180 360 101 278 180 z m 186 37 l 131 92 b 220 124 153 109 189 124 b 262 112 236 124 249 121 z m 215 7 l 291 84 b 304 42 300 71 304 58 b 271 -49 304 10 288 -26 z m 145 -6 l 68 -82 b 56 -42 59 -71 56 -58 b 89 52 56 -9 72 27 z m 174 -33 l 230 -89 b 140 -124 206 -108 171 -124 b 96 -111 122 -124 109 -121 z',\n        },\n        noteheadCircleX: {\n            x_min: 0,\n            x_max: 249,\n            y_min: -125,\n            y_max: 125,\n            ha: 250,\n            o: 'm 179 180 b 0 0 81 180 0 99 b 179 -180 0 -99 81 -180 b 359 0 278 -180 359 -99 b 179 180 359 99 278 180 z m 261 112 l 180 30 l 98 112 b 179 138 121 128 148 138 b 261 112 210 138 238 128 z m 317 0 b 292 -82 317 -30 308 -59 l 209 1 l 291 84 b 317 0 307 60 317 30 z m 40 0 b 69 84 40 32 50 60 l 151 1 l 68 -84 b 40 0 49 -60 40 -30 z m 95 -111 l 180 -27 l 262 -111 b 179 -138 239 -128 210 -138 b 95 -111 148 -138 120 -128 z',\n        },\n        noteheadCircledDoubleWhole: {\n            x_min: 0,\n            x_max: 603,\n            y_min: -218,\n            y_max: 213,\n            ha: 431,\n            o: 'm 770 223 l 752 223 b 737 213 744 223 737 219 l 737 59 b 435 307 710 203 582 307 b 128 48 281 307 156 197 l 128 213 b 115 223 128 219 122 223 l 96 223 b 84 213 89 223 84 219 l 84 -215 b 96 -223 84 -220 89 -223 l 115 -223 b 128 -215 122 -223 128 -220 l 128 -56 b 435 -314 156 -206 282 -314 b 654 -223 517 -314 595 -282 b 737 -66 697 -180 726 -125 l 737 -215 b 752 -223 737 -220 744 -223 l 770 -223 b 785 -215 778 -223 785 -220 l 785 213 b 770 223 785 219 778 223 z m 435 274 b 698 85 556 274 661 194 b 439 180 641 143 534 180 b 176 99 320 180 228 148 b 435 274 217 203 318 274 z m 32 223 l 13 223 b 0 213 6 223 0 219 l 0 -215 b 13 -223 0 -220 6 -223 l 32 -223 b 45 -215 40 -223 45 -220 l 45 213 b 32 223 45 219 40 223 z m 852 223 l 835 223 b 819 213 828 223 819 219 l 819 -215 b 835 -223 819 -220 828 -223 l 852 -223 b 868 -215 861 -223 868 -220 l 868 213 b 852 223 868 219 861 223 z m 580 -46 b 514 -143 580 -91 562 -131 b 472 -148 501 -147 487 -148 b 364 -105 433 -148 395 -131 l 334 -73 b 285 58 307 -39 285 10 b 289 91 285 69 287 79 b 403 145 305 140 357 145 b 580 -46 501 145 580 42 z m 435 -282 b 176 -108 318 -282 217 -209 b 425 -180 222 -151 301 -180 b 691 -109 563 -180 647 -153 b 435 -282 651 -210 550 -282 z',\n        },\n        noteheadCircledWhole: {\n            x_min: 0,\n            x_max: 437,\n            y_min: -225,\n            y_max: 211,\n            ha: 436,\n            o: 'm 314 304 b 0 -10 140 304 0 164 b 314 -324 0 -183 141 -324 b 629 -10 487 -324 629 -183 b 314 304 629 164 488 304 z m 314 275 b 588 73 441 275 549 193 b 321 180 536 137 420 180 b 48 88 190 180 95 143 b 314 275 85 199 199 275 z m 393 -141 b 350 -147 379 -145 364 -147 b 314 -141 337 -147 325 -145 b 167 55 235 -120 167 -26 b 173 91 167 66 168 79 b 284 145 187 138 239 145 b 459 -48 382 145 459 39 b 393 -141 459 -91 438 -131 z m 314 -294 b 40 -86 187 -294 75 -207 b 305 -180 81 -141 164 -180 b 588 -86 464 -180 550 -143 b 314 -294 554 -209 442 -294 z',\n        },\n        noteheadCircledHalf: {\n            x_min: -18,\n            x_max: 311,\n            y_min: -162,\n            y_max: 167,\n            ha: 329,\n            o: 'm 212 240 b -26 3 81 240 -26 134 b 212 -233 -26 -127 81 -233 b 448 3 341 -233 448 -127 b 212 240 448 134 341 240 z m 212 220 b 363 160 271 220 324 197 b 281 180 341 173 312 180 b 0 -52 76 180 6 26 b -6 3 -4 -35 -6 -16 b 212 220 -6 122 92 220 z m 50 -92 b 42 -63 46 -84 42 -73 b 173 63 42 -33 73 7 b 317 120 243 105 288 120 b 369 89 344 120 359 107 b 377 62 374 81 377 72 b 248 -66 377 33 348 -1 b 108 -125 183 -109 138 -125 b 50 -92 78 -125 60 -109 z m 212 -215 b 84 -171 164 -215 120 -199 b 138 -180 101 -179 120 -180 b 422 56 372 -180 420 7 b 429 3 426 40 429 22 b 212 -215 429 -117 333 -215 z',\n        },\n        noteheadCircledBlack: {\n            x_min: -21,\n            x_max: 321,\n            y_min: -171,\n            y_max: 167,\n            ha: 338,\n            o: 'm 216 240 b -30 -3 82 240 -30 131 b 216 -246 -30 -137 82 -246 b 462 -3 351 -246 462 -137 b 216 240 462 131 351 240 z m 216 220 b 372 160 276 220 331 197 b 284 180 348 174 317 180 b 0 -59 127 180 0 65 l 0 -66 b -10 -3 -6 -45 -10 -24 b 216 220 -10 120 92 220 z m 216 -226 b 56 -158 153 -226 96 -200 b 140 -180 79 -171 107 -180 b 425 60 268 -180 425 -60 b 422 88 425 71 425 79 b 442 -3 435 60 442 29 b 216 -226 442 -125 341 -226 z',\n        },\n        noteheadDoubleWholeSquare: {\n            x_min: 0,\n            x_max: 416,\n            y_min: -190,\n            y_max: 198,\n            ha: 388,\n            o: 'm 563 217 b 528 180 563 192 544 180 l 62 180 b 36 215 52 180 36 192 l 36 268 b 17 285 36 278 27 285 b 0 268 7 285 0 278 l 0 -255 b 17 -274 0 -264 7 -274 b 36 -255 27 -274 36 -264 l 36 -213 b 66 -180 36 -197 53 -180 l 528 -180 b 563 -209 549 -180 563 -196 l 563 -255 b 580 -274 563 -264 570 -274 b 599 -255 590 -274 599 -264 l 599 268 b 580 285 599 278 590 285 b 563 268 570 285 563 278 z m 36 23 b 111 71 36 55 58 71 l 487 71 b 563 30 533 71 563 53 l 563 -22 b 487 -68 563 -53 533 -68 l 117 -68 b 36 -22 66 -68 36 -49 z',\n        },\n        noteheadSquareWhite: {\n            x_min: 0,\n            x_max: 313,\n            y_min: -125,\n            y_max: 125,\n            ha: 250,\n            o: 'm 451 -180 l 451 180 l 0 180 l 0 -180 z m 40 -138 l 40 140 l 410 140 l 410 -138 z',\n        },\n        noteheadSquareBlack: {\n            x_min: 0,\n            x_max: 313,\n            y_min: -125,\n            y_max: 125,\n            ha: 250,\n            o: 'm 451 -180 l 451 180 l 0 180 l 0 -180 z',\n        },\n        noteheadTriangleDownDoubleWhole: {\n            x_min: 0,\n            x_max: 483,\n            y_min: -155,\n            y_max: 155,\n            ha: 310,\n            o: 'm 696 213 b 681 223 696 219 690 223 l 662 223 b 648 213 655 223 648 219 l 648 -213 b 662 -223 648 -217 655 -223 l 681 -223 b 696 -213 690 -223 696 -217 z m 619 213 b 605 223 619 219 613 223 l 588 223 b 573 213 580 223 573 219 l 573 174 b 562 180 570 177 566 180 l 134 180 b 122 174 130 180 125 177 l 122 213 b 108 223 122 219 117 223 l 91 223 b 76 213 84 223 76 219 l 76 -213 b 91 -223 76 -217 84 -223 l 108 -223 b 122 -213 117 -223 122 -217 l 122 154 l 334 -173 b 346 -180 337 -177 341 -180 b 357 -173 351 -180 354 -177 l 573 154 l 573 -213 b 588 -223 573 -217 580 -223 l 605 -223 b 619 -213 613 -223 619 -217 z m 32 -223 b 46 -213 40 -223 46 -217 l 46 213 b 32 223 46 219 40 223 l 14 223 b 0 213 7 223 0 219 l 0 -213 b 14 -223 0 -217 7 -223 z m 428 98 b 346 -107 428 17 377 -53 b 265 96 315 -55 265 17 b 289 137 265 109 275 137 l 406 137 b 428 98 419 137 428 111 z',\n        },\n        noteheadTriangleDownWhole: {\n            x_min: 0,\n            x_max: 319,\n            y_min: -125,\n            y_max: 125,\n            ha: 250,\n            o: 'm 14 180 b 0 166 6 180 0 173 b 1 158 0 163 1 160 l 216 -173 b 228 -180 219 -177 225 -180 b 239 -173 233 -180 238 -177 l 458 158 b 459 166 458 160 459 163 b 445 180 459 173 454 180 z m 288 137 b 310 98 301 137 310 111 b 228 -108 310 17 259 -55 b 145 96 197 -56 145 17 b 170 137 145 109 157 137 z',\n        },\n        noteheadTriangleDownHalf: {\n            x_min: 0,\n            x_max: 285,\n            y_min: -125,\n            y_max: 125,\n            ha: 250,\n            o: 'm 196 -180 b 209 -173 200 -180 206 -177 l 408 157 b 410 166 409 160 410 163 b 396 180 410 173 403 180 l 14 180 b 0 166 4 180 0 173 b 1 158 0 163 0 161 l 183 -173 b 196 -180 184 -174 190 -180 z m 164 138 l 295 138 l 179 -76 l 114 37 z',\n        },\n        noteheadTriangleDownBlack: {\n            x_min: 0,\n            x_max: 292,\n            y_min: -125,\n            y_max: 125,\n            ha: 250,\n            o: 'm 207 -180 l 420 180 l 0 180 z',\n        },\n        noteheadTriangleUpDoubleWhole: {\n            x_min: 0,\n            x_max: 483,\n            y_min: -155,\n            y_max: 155,\n            ha: 310,\n            o: 'm 696 213 b 681 223 696 217 690 223 l 662 223 b 648 213 655 223 648 217 l 648 -213 b 662 -223 648 -219 655 -223 l 681 -223 b 696 -213 690 -223 696 -219 z m 619 213 b 605 223 619 217 613 223 l 588 223 b 573 213 580 223 573 217 l 573 -154 l 357 173 b 346 180 354 177 351 180 b 334 173 341 180 337 177 l 122 -154 l 122 213 b 108 223 122 217 117 223 l 91 223 b 76 213 84 223 76 217 l 76 -213 b 91 -223 76 -219 84 -223 l 108 -223 b 122 -213 117 -223 122 -219 l 122 -174 b 134 -180 125 -177 130 -180 l 562 -180 b 573 -174 566 -180 570 -177 l 573 -213 b 588 -223 573 -219 580 -223 l 605 -223 b 619 -213 613 -223 619 -219 z m 32 223 l 14 223 b 0 213 7 223 0 217 l 0 -213 b 14 -223 0 -219 7 -223 l 32 -223 b 46 -213 40 -223 46 -219 l 46 213 b 32 223 46 217 40 223 z m 428 -98 b 406 -137 428 -111 419 -137 l 289 -137 b 265 -96 275 -137 265 -109 b 346 107 265 -17 315 55 b 428 -98 377 53 428 -17 z',\n        },\n        noteheadTriangleUpWhole: {\n            x_min: 0,\n            x_max: 319,\n            y_min: -125,\n            y_max: 125,\n            ha: 250,\n            o: 'm 445 -180 b 459 -166 454 -180 459 -173 b 458 -158 459 -163 458 -160 l 239 173 b 228 180 238 177 233 180 b 216 173 225 180 219 177 l 1 -158 b 0 -166 1 -160 0 -163 b 14 -180 0 -173 6 -180 z m 170 -137 b 145 -96 157 -137 145 -109 b 228 108 145 -17 197 56 b 310 -98 259 55 310 -17 b 288 -137 310 -111 301 -137 z',\n        },\n        noteheadTriangleUpHalf: {\n            x_min: 0,\n            x_max: 285,\n            y_min: -125,\n            y_max: 125,\n            ha: 250,\n            o: 'm 215 180 b 202 173 210 180 204 177 l 3 -157 b 0 -166 1 -160 0 -163 b 14 -180 0 -173 7 -180 l 396 -180 b 410 -166 406 -180 410 -173 b 409 -158 410 -163 410 -161 l 228 173 b 215 180 226 174 220 180 z m 246 -138 l 115 -138 l 232 76 l 297 -37 z',\n        },\n        noteheadTriangleUpBlack: {\n            x_min: 0,\n            x_max: 293,\n            y_min: -125,\n            y_max: 125,\n            ha: 250,\n            o: 'm 422 -180 l 207 180 l 0 -180 z',\n        },\n        noteheadSlashedDoubleWhole1: {\n            x_min: 0,\n            x_max: 596,\n            y_min: -179,\n            y_max: 168,\n            ha: 347,\n            o: 'm 618 135 l 697 206 b 704 222 703 210 704 216 b 698 236 704 226 703 232 b 683 242 694 239 688 242 b 670 238 677 242 674 240 l 575 153 b 435 180 531 168 481 180 b 128 0 246 180 128 98 b 236 -148 128 -58 160 -114 l 153 -222 b 145 -238 148 -226 145 -232 b 151 -252 145 -242 148 -248 b 167 -258 156 -256 161 -258 b 181 -253 171 -258 177 -256 l 282 -164 b 420 -180 320 -173 366 -180 b 729 0 654 -180 729 -98 b 618 135 729 55 681 104 z m 114 223 l 95 223 b 82 212 88 223 82 217 l 82 -215 b 95 -223 82 -219 88 -223 l 114 -223 b 127 -215 121 -223 127 -219 l 127 212 b 114 223 127 217 121 223 z m 32 223 l 13 223 b 0 212 6 223 0 217 l 0 -215 b 13 -223 0 -219 6 -223 l 32 -223 b 45 -215 39 -223 45 -219 l 45 212 b 32 223 45 217 39 223 z m 844 223 l 825 223 b 811 212 819 223 811 217 l 811 -215 b 825 -223 811 -219 819 -223 l 844 -223 b 858 -215 851 -223 858 -219 l 858 212 b 844 223 858 217 851 223 z m 763 223 l 743 223 b 730 212 736 223 730 217 l 730 -215 b 743 -223 730 -219 736 -223 l 763 -223 b 776 -215 769 -223 776 -219 l 776 212 b 763 223 776 217 769 223 z m 282 56 b 285 89 282 68 284 79 b 399 144 301 137 354 144 b 510 95 441 144 480 124 l 327 -68 b 282 56 301 -35 282 13 z m 572 -72 b 508 -141 564 -108 544 -132 b 467 -147 495 -145 481 -147 b 360 -104 428 -147 389 -128 l 356 -98 l 537 63 b 575 -46 560 30 575 -9 b 572 -72 575 -55 573 -65 z',\n        },\n        noteheadSlashedWhole1: {\n            x_min: -22,\n            x_max: 433,\n            y_min: -157,\n            y_max: 148,\n            ha: 305,\n            o: 'm 484 140 b 308 180 431 166 367 180 b 0 1 118 180 0 99 b 73 -128 0 -48 22 -95 l -22 -190 b -32 -206 -27 -194 -32 -200 b -27 -217 -32 -210 -30 -215 b -12 -226 -23 -223 -17 -226 b 0 -223 -7 -226 -4 -225 l 112 -150 b 294 -180 157 -168 217 -180 b 602 1 526 -180 602 -98 b 523 118 602 48 570 86 l 613 177 b 624 193 619 181 624 187 b 619 204 624 197 622 200 b 603 213 615 209 609 213 b 592 209 599 213 596 212 z m 190 -52 b 154 56 170 -20 154 19 b 160 91 154 68 156 79 b 271 147 174 138 226 147 b 396 82 321 147 364 121 z m 419 50 b 446 -48 436 19 446 -14 b 337 -147 446 -120 402 -147 b 301 -141 327 -147 314 -144 b 235 -104 276 -134 253 -120 b 215 -84 226 -98 220 -91 z',\n        },\n        noteheadSlashedHalf1: {\n            x_min: -67,\n            x_max: 386,\n            y_min: -142,\n            y_max: 160,\n            ha: 302,\n            o: 'm 552 222 b 536 230 549 228 543 230 b 524 228 533 230 528 230 l 389 140 b 281 180 364 164 327 180 b 0 -60 65 180 0 13 b 7 -105 0 -78 3 -92 l -88 -167 b -96 -184 -94 -171 -96 -177 b -94 -194 -96 -187 -95 -192 b -76 -204 -89 -202 -84 -204 b -66 -202 -73 -204 -69 -203 l 29 -140 b 137 -180 55 -167 92 -180 b 420 59 374 -180 420 13 b 412 107 420 76 419 92 l 546 194 b 556 210 552 197 556 204 b 552 222 556 213 554 217 z m 315 120 b 347 112 328 120 338 117 l 46 -82 b 42 -63 43 -76 42 -69 b 315 120 42 6 248 120 z m 108 -124 b 69 -114 91 -124 79 -120 l 372 81 b 376 63 374 75 376 69 b 108 -124 376 0 174 -124 z',\n        },\n        noteheadSlashedBlack1: {\n            x_min: -80,\n            x_max: 375,\n            y_min: -165,\n            y_max: 167,\n            ha: 332,\n            o: 'm 518 240 b 507 236 514 240 510 239 l 384 148 b 284 180 359 168 324 180 b 0 -62 127 180 0 63 b 13 -115 0 -82 4 -99 l -107 -202 b -115 -217 -111 -204 -115 -212 b -111 -229 -115 -222 -114 -225 b -95 -238 -108 -235 -101 -238 b -84 -235 -91 -238 -86 -236 l 39 -148 b 140 -180 63 -170 99 -180 b 425 59 268 -180 425 -62 b 410 117 425 81 420 101 l 530 203 b 540 219 536 207 540 213 b 518 240 540 229 528 240 z',\n        },\n        noteheadSlashedDoubleWhole2: {\n            x_min: 0,\n            x_max: 596,\n            y_min: -178,\n            y_max: 169,\n            ha: 347,\n            o: 'm 729 0 b 435 180 729 102 569 180 b 278 156 374 180 321 170 l 184 239 b 170 243 181 242 176 243 b 154 238 166 243 158 240 b 150 223 151 233 150 228 b 156 207 150 217 153 212 l 233 138 b 128 0 167 107 128 56 b 420 -180 128 -94 210 -180 b 575 -164 482 -180 533 -174 l 672 -252 b 687 -256 677 -255 681 -256 b 703 -251 691 -256 698 -255 b 707 -236 706 -246 707 -240 b 701 -220 707 -230 706 -225 l 619 -150 b 729 0 700 -117 729 -62 z m 114 223 l 95 223 b 82 213 88 223 82 217 l 82 -213 b 95 -223 82 -219 88 -223 l 114 -223 b 127 -213 121 -223 127 -219 l 127 213 b 114 223 127 217 121 223 z m 32 223 l 13 223 b 0 213 6 223 0 217 l 0 -213 b 13 -223 0 -219 6 -223 l 32 -223 b 45 -213 39 -223 45 -219 l 45 213 b 32 223 45 217 39 223 z m 844 223 l 825 223 b 811 213 819 223 811 217 l 811 -213 b 825 -223 811 -219 819 -223 l 844 -223 b 858 -213 851 -223 858 -219 l 858 213 b 844 223 858 217 851 223 z m 763 223 l 743 223 b 730 213 736 223 730 217 l 730 -213 b 743 -223 730 -219 736 -223 l 763 -223 b 776 -213 769 -223 776 -219 l 776 213 b 763 223 776 217 769 223 z m 312 124 b 399 144 336 141 369 144 b 575 -46 495 144 575 40 b 563 -98 575 -65 570 -81 z m 508 -141 b 467 -147 495 -145 481 -147 b 360 -104 428 -147 389 -128 b 330 -72 350 -95 340 -82 b 282 56 304 -37 282 10 b 285 89 282 68 284 79 b 536 -130 287 89 304 75 z',\n        },\n        noteheadSlashedWhole2: {\n            x_min: -18,\n            x_max: 436,\n            y_min: -154,\n            y_max: 151,\n            ha: 305,\n            o: 'm 531 -128 b 602 1 582 -96 602 -49 b 308 180 602 104 441 180 b 114 144 230 180 164 166 l 4 215 b -6 217 1 217 -3 217 b -22 209 -13 217 -19 215 b -26 197 -24 204 -26 200 b -16 181 -26 192 -22 184 l 75 121 b 0 1 27 91 0 49 b 294 -180 0 -94 82 -180 b 491 -150 379 -180 444 -168 l 598 -219 b 608 -222 600 -222 605 -222 b 624 -213 615 -222 621 -219 b 628 -202 626 -209 628 -206 b 618 -186 628 -196 624 -189 z m 168 108 b 271 147 190 141 233 147 b 446 -48 369 147 446 40 b 445 -72 446 -56 446 -63 z m 154 69 l 429 -109 b 382 -141 419 -125 402 -135 b 337 -147 367 -144 351 -147 b 301 -141 327 -147 314 -144 b 235 -104 276 -134 253 -120 b 203 -72 223 -94 213 -82 b 154 58 177 -39 154 12 z',\n        },\n        noteheadSlashedHalf2: {\n            x_min: -73,\n            x_max: 380,\n            y_min: -134,\n            y_max: 168,\n            ha: 302,\n            o: 'm 537 -156 l 383 -58 b 422 60 413 -9 422 39 b 281 180 422 134 364 180 b 101 127 203 180 144 157 l -75 239 b -85 242 -78 242 -82 242 b -102 233 -92 242 -98 239 b -105 222 -104 229 -105 225 b -95 206 -105 216 -102 209 l 69 99 b 0 -59 19 46 0 -20 b 138 -180 0 -135 60 -180 b 359 -88 248 -180 317 -138 l 516 -190 b 527 -193 520 -192 524 -193 b 543 -183 534 -193 540 -190 b 547 -173 546 -180 547 -176 b 537 -156 547 -166 543 -160 z m 367 92 b 377 63 374 82 377 73 b 318 -14 377 43 361 20 l 184 72 b 317 121 248 108 289 121 b 367 92 344 121 357 109 z m 248 -66 b 108 -124 181 -108 138 -124 b 50 -92 78 -124 60 -109 b 42 -63 46 -84 42 -73 b 145 49 42 -35 68 0 l 285 -40 b 248 -66 274 -49 261 -56 z',\n        },\n        noteheadSlashedBlack2: {\n            x_min: -79,\n            x_max: 376,\n            y_min: -164,\n            y_max: 168,\n            ha: 332,\n            o: 'm 531 -200 l 363 -78 b 425 59 402 -37 425 10 b 285 180 425 132 367 180 b 92 114 210 180 144 154 l -81 238 b -94 242 -85 240 -89 242 b -111 232 -99 242 -107 238 b -114 220 -112 229 -114 225 b -105 204 -114 215 -111 207 l 62 85 b 0 -62 23 43 0 -9 b 140 -180 0 -137 62 -180 b 331 -108 204 -180 275 -153 l 507 -233 b 520 -236 511 -236 517 -236 b 537 -228 527 -236 533 -233 b 541 -216 540 -225 541 -220 b 531 -200 541 -210 537 -203 z',\n        },\n        noteheadDiamondDoubleWhole: {\n            x_min: 0,\n            x_max: 432,\n            y_min: -155,\n            y_max: 155,\n            ha: 310,\n            o: 'm 592 223 b 580 215 585 223 580 219 l 580 -215 b 592 -223 580 -219 585 -223 l 608 -223 b 622 -215 615 -223 622 -219 l 622 215 b 608 223 622 219 615 223 z m 517 223 b 504 215 510 223 504 219 l 504 -215 b 517 -223 504 -219 510 -223 l 533 -223 b 544 -215 540 -223 544 -219 l 544 215 b 533 223 544 219 540 223 z m 246 179 b 240 180 243 179 242 180 b 232 176 236 180 233 179 l 118 22 b 117 17 117 20 117 19 l 117 215 b 104 223 117 219 111 223 l 88 223 b 75 215 81 223 75 219 l 75 -215 b 88 -223 75 -219 81 -223 l 104 -223 b 117 -215 111 -223 117 -219 l 117 14 l 118 14 b 122 7 118 12 120 10 l 374 -179 b 382 -180 376 -180 379 -180 b 390 -177 384 -180 387 -180 l 503 -23 l 503 -17 b 500 -9 503 -13 503 -10 z m 12 223 b 0 215 4 223 0 219 l 0 -215 b 12 -223 0 -219 4 -223 l 29 -223 b 40 -215 36 -223 40 -219 l 40 215 b 29 223 40 219 36 223 z m 183 39 b 179 46 181 39 179 43 b 229 112 226 112 228 112 b 236 109 229 112 233 111 l 436 -39 b 439 -46 438 -39 439 -42 b 390 -112 393 -111 392 -112 b 383 -109 389 -112 386 -111 z',\n        },\n        noteheadDiamondWhole: {\n            x_min: 0,\n            x_max: 270,\n            y_min: -125,\n            y_max: 125,\n            ha: 250,\n            o: 'm 386 -23 b 389 -16 387 -20 389 -19 b 383 -7 389 -13 386 -9 l 130 179 b 122 180 128 180 125 180 b 115 177 120 180 117 180 l 3 23 b 0 17 1 20 0 19 b 4 7 0 16 3 10 l 258 -179 b 264 -180 261 -179 262 -180 b 272 -176 268 -180 271 -179 z m 66 40 b 62 48 65 42 62 45 l 109 111 b 112 112 109 112 111 112 b 118 111 115 112 117 111 l 320 -37 b 324 -46 323 -39 324 -42 b 275 -111 278 -111 276 -111 b 268 -108 272 -111 271 -109 z',\n        },\n        noteheadDiamondHalf: {\n            x_min: 0,\n            x_max: 251,\n            y_min: -125,\n            y_max: 125,\n            ha: 250,\n            o: 'm 359 -7 b 361 0 360 -6 361 -3 b 359 7 361 3 360 4 l 189 177 b 180 180 186 179 183 180 b 174 177 179 180 176 179 l 4 7 b 0 0 1 4 0 3 b 4 -7 0 -3 1 -6 l 174 -177 b 180 -180 176 -180 179 -180 b 189 -177 183 -180 186 -180 z m 266 26 b 138 -71 266 -12 176 -71 b 96 -50 121 -71 108 -63 b 88 -24 89 -43 88 -32 b 215 73 88 13 177 73 b 266 26 238 73 266 50 z',\n        },\n        noteheadDiamondBlack: {\n            x_min: 0,\n            x_max: 250,\n            y_min: -125,\n            y_max: 125,\n            ha: 250,\n            o: 'm 357 -6 b 360 1 359 -4 360 -1 b 357 9 360 4 359 7 l 189 177 b 180 180 187 179 184 180 b 171 177 177 180 173 179 l 3 9 b 0 1 0 6 0 4 b 4 -7 0 -1 1 -4 l 173 -177 b 180 -180 176 -180 177 -180 b 187 -177 181 -180 184 -180 z',\n        },\n        noteheadParenthesis: {\n            x_min: -73,\n            x_max: 368,\n            y_min: -180,\n            y_max: 182,\n            ha: 362,\n            o: 'm 52 -249 b -30 -144 3 -212 -14 -190 b -52 4 -45 -102 -52 -56 b 52 252 -52 118 -36 179 l 46 262 b -105 3 -49 197 -105 124 b 45 -259 -105 -109 -48 -200 z m 382 -259 b 530 3 474 -202 530 -108 b 379 262 530 122 474 200 l 373 252 b 478 4 462 180 478 118 b 456 -144 478 -56 471 -102 b 373 -249 439 -190 422 -212 z',\n        },\n        noteheadParenthesisRight: {\n            x_min: -36,\n            x_max: 73,\n            y_min: -181,\n            y_max: 181,\n            ha: 362,\n            o: 'm -43 -261 b 105 1 49 -203 105 -109 b -46 261 105 121 49 199 l -52 251 b 53 3 37 179 53 117 b 32 -145 53 -58 46 -104 b -52 -251 14 -192 -3 -213 z',\n        },\n        noteheadParenthesisLeft: {\n            x_min: 0,\n            x_max: 109,\n            y_min: -181,\n            y_max: 181,\n            ha: 362,\n            o: 'm 157 -251 b 75 -145 108 -213 91 -192 b 53 3 60 -104 53 -58 b 157 251 53 117 69 177 l 151 261 b 0 1 56 196 0 122 b 150 -261 0 -111 58 -202 z',\n        },\n        noteheadMoonBlack: {\n            x_min: 0,\n            x_max: 315,\n            y_min: -125,\n            y_max: 125,\n            ha: 250,\n            o: 'm 228 -180 b 454 0 343 -180 454 -130 l 454 180 l 0 180 l 0 0 b 228 -180 0 -131 112 -180 z',\n        },\n        noteheadTriangleLeftBlack: {\n            x_min: 0,\n            x_max: 339,\n            y_min: -125,\n            y_max: 125,\n            ha: 250,\n            o: 'm 488 -180 l 0 180 l 0 -180 z',\n        },\n        noteheadTriangleRightBlack: {\n            x_min: 0,\n            x_max: 339,\n            y_min: -125,\n            y_max: 125,\n            ha: 250,\n            o: 'm 488 180 l 0 -180 l 488 -180 z',\n        },\n        noteheadTriangleRoundDownBlack: {\n            x_min: 0,\n            x_max: 278,\n            y_min: -125,\n            y_max: 125,\n            ha: 250,\n            o: 'm 200 -180 l 400 112 l 383 124 b 199 180 327 161 264 180 b 16 124 135 180 73 161 l 0 112 z',\n        },\n        augmentationDot: {\n            x_min: 0,\n            x_max: 100,\n            y_min: -50,\n            y_max: 50,\n            ha: 100,\n            o: 'm 144 0 b 72 72 144 40 112 72 b 0 0 32 72 0 40 b 72 -72 0 -40 32 -72 b 144 0 112 -72 144 -40 z',\n        },\n        tremolo1: {\n            x_min: -150,\n            x_max: 150,\n            y_min: -93,\n            y_max: 94,\n            ha: 187,\n            o: 'm 216 -45 l 216 135 l -216 46 l -216 -134 z',\n        },\n        flag8thUp: {\n            x_min: 0,\n            x_max: 264,\n            y_min: -810.1921176545985,\n            y_max: 9,\n            ha: 819.1921176545985,\n            o: 'm 343 -1138 b 380 -888 343 -1138 380 -1001 b 215 -395 380 -708 305 -539 b 58 -19 141 -281 81 -157 b 27 13 53 4 42 13 b 0 -9 12 13 0 9 l 0 -353 b 284 -688 95 -370 232 -566 b 318 -904 305 -737 318 -819 b 284 -1102 318 -969 308 -1037 b 279 -1123 281 -1110 279 -1117 b 302 -1165 279 -1146 294 -1159 b 343 -1138 311 -1171 336 -1162 z',\n        },\n        flag8thDown: {\n            x_min: 0,\n            x_max: 306,\n            y_min: -14,\n            y_max: 808,\n            ha: 822,\n            o: 'm 346 1094 b 376 897 366 1034 376 962 b 318 642 376 812 340 691 b 0 340 265 521 193 405 l 0 1 b 23 -20 0 -13 12 -20 b 58 12 36 -20 55 -12 b 262 387 82 148 189 274 b 441 881 353 530 441 701 b 400 1142 441 994 412 1096 b 377 1164 396 1158 387 1164 b 346 1094 356 1164 331 1136 z',\n        },\n        flag16thUp: {\n            x_min: 0,\n            x_max: 279,\n            y_min: -813,\n            y_max: 2,\n            ha: 815,\n            o: 'm 392 -1146 b 402 -988 397 -1139 402 -1057 l 402 -956 b 360 -783 402 -896 386 -837 b 359 -770 360 -779 359 -776 b 360 -760 359 -768 359 -765 b 396 -577 364 -752 396 -665 b 392 -526 396 -559 395 -543 b 236 -275 377 -428 340 -387 b 53 -16 158 -192 78 -168 b 24 3 50 0 33 3 b 0 -12 16 3 0 -1 l 0 -570 l 7 -570 b 298 -778 96 -573 199 -576 b 344 -992 331 -847 344 -917 b 333 -1120 344 -1034 340 -1077 b 331 -1133 331 -1126 331 -1129 b 363 -1171 331 -1152 343 -1171 b 392 -1146 373 -1171 383 -1165 z m 301 -661 b 223 -562 278 -625 253 -596 b 59 -331 156 -484 89 -449 b 58 -327 58 -330 58 -328 b 78 -312 58 -321 66 -312 l 89 -312 b 302 -464 177 -312 255 -393 b 341 -592 328 -501 341 -546 b 340 -621 341 -602 341 -611 b 330 -658 337 -632 337 -647 b 311 -667 328 -662 318 -667 b 301 -661 307 -667 304 -665 z',\n        },\n        flag16thDown: {\n            x_min: 0,\n            x_max: 290.8951581511223,\n            y_min: -9,\n            y_max: 812.0064,\n            ha: 821.0064,\n            o: 'm 346 1132 b 312 768 367 1011 367 880 b 7 559 213 566 96 562 l 0 559 l 0 1 b 24 -13 0 -6 10 -13 b 53 6 35 -13 50 -10 b 406 516 88 228 372 289 b 410 567 409 531 410 549 b 374 750 410 655 379 742 b 373 760 373 753 373 756 b 374 773 373 766 374 769 b 405 1138 426 881 428 1022 b 370 1169 397 1171 387 1169 b 346 1132 353 1168 341 1156 z m 325 657 b 344 647 333 657 343 652 b 354 611 351 636 351 622 b 356 582 356 600 356 590 b 317 454 356 534 343 491 b 89 302 269 383 177 302 l 78 302 b 58 317 66 302 58 310 b 59 321 58 318 58 320 b 238 552 89 439 170 472 b 315 651 268 585 292 613 b 325 657 318 655 321 657 z',\n        },\n        flag32ndUp: {\n            x_min: 0,\n            x_max: 261,\n            y_min: -812,\n            y_max: 149,\n            ha: 961,\n            o: 'm 374 -969 b 337 -806 372 -913 359 -858 b 336 -796 336 -804 336 -801 b 337 -788 336 -793 336 -791 b 370 -616 340 -778 370 -698 b 340 -482 370 -570 360 -524 b 369 -330 353 -445 369 -386 b 366 -289 369 -315 369 -302 b 220 -58 350 -202 317 -163 b 46 187 148 20 71 43 b 20 215 45 200 35 215 b 0 197 12 215 0 207 l 0 -609 l 7 -609 b 278 -802 91 -612 186 -615 b 323 -999 310 -865 323 -930 b 311 -1122 323 -1040 318 -1080 b 310 -1132 311 -1126 310 -1129 b 328 -1166 310 -1149 318 -1162 b 337 -1169 331 -1168 334 -1169 b 366 -1146 346 -1169 356 -1162 b 376 -1009 370 -1138 376 -1071 b 374 -969 376 -995 374 -982 z m 300 -261 b 321 -330 315 -289 321 -311 b 317 -360 321 -341 318 -350 b 300 -423 314 -374 307 -399 b 220 -334 279 -397 253 -370 b 56 -92 150 -256 79 -232 b 300 -261 135 -92 220 -127 z m 315 -657 b 308 -690 312 -668 312 -680 b 292 -698 307 -694 300 -698 b 282 -693 288 -698 284 -697 b 216 -608 261 -661 240 -636 l 209 -600 b 56 -390 147 -527 88 -495 b 73 -367 53 -380 60 -367 b 318 -622 189 -367 318 -505 b 315 -657 318 -634 317 -645 z',\n        },\n        flag32ndDown: {\n            x_min: 0,\n            x_max: 273,\n            y_min: -172,\n            y_max: 812,\n            ha: 984,\n            o: 'm 393 973 b 333 1169 393 1002 383 1169 b 324 1168 330 1169 327 1169 b 304 1130 314 1164 304 1149 b 305 1120 304 1128 305 1125 b 334 962 317 1056 334 1011 b 289 821 334 922 323 880 b 0 619 180 625 88 622 l 0 -229 b 20 -248 0 -242 9 -248 b 48 -219 35 -248 46 -232 b 229 36 72 -69 154 -46 b 380 278 330 145 364 186 b 383 320 383 291 383 305 b 351 484 383 382 364 445 b 384 629 374 526 384 580 b 356 780 384 704 361 766 b 356 783 356 782 356 783 l 351 791 b 356 804 351 796 353 799 l 361 814 b 393 958 380 850 387 865 z m 56 386 b 217 609 86 501 153 533 b 292 706 246 642 269 670 b 304 711 295 710 300 711 b 321 703 311 711 320 707 b 328 670 325 693 325 681 b 331 634 330 658 331 645 b 82 367 331 516 199 367 l 75 367 b 56 386 62 367 56 379 z m 330 350 b 334 320 331 340 334 331 b 311 248 334 301 328 278 b 59 72 229 109 141 72 b 56 76 56 73 56 75 b 229 331 81 226 154 249 b 310 423 264 369 289 397 b 330 350 318 396 325 366 z',\n        },\n        flag64thUp: {\n            x_min: 0,\n            x_max: 261,\n            y_min: -812,\n            y_max: 347,\n            ha: 1159,\n            o: 'm 374 -969 b 337 -806 372 -913 359 -858 b 336 -796 336 -804 336 -801 b 337 -788 336 -793 336 -791 b 370 -616 340 -778 370 -698 b 340 -482 370 -570 360 -524 b 369 -330 353 -445 369 -386 b 337 -203 369 -287 359 -242 b 369 -43 350 -167 369 -104 b 366 -4 369 -30 367 -17 b 220 228 350 84 317 122 b 46 472 148 305 71 328 b 20 500 45 485 32 500 b 0 482 10 500 0 492 l 0 -609 l 7 -609 b 278 -802 91 -612 186 -615 b 323 -999 310 -865 323 -930 b 311 -1122 323 -1040 318 -1080 b 310 -1132 311 -1126 310 -1129 b 328 -1166 310 -1149 318 -1162 b 337 -1169 331 -1168 334 -1169 b 366 -1146 346 -1169 356 -1162 b 376 -1009 370 -1138 376 -1071 b 374 -969 376 -995 374 -982 z m 300 24 b 321 -45 315 -4 321 -26 b 317 -75 321 -56 318 -65 l 298 -145 b 220 -58 278 -121 253 -94 b 58 187 148 20 82 43 b 56 193 58 189 58 192 b 300 24 138 193 220 157 z m 300 -261 b 321 -330 315 -289 321 -311 b 317 -360 321 -341 318 -350 b 300 -423 314 -374 307 -399 b 220 -334 279 -397 253 -370 b 56 -92 150 -256 79 -232 b 300 -261 135 -92 220 -127 z m 315 -657 b 308 -690 312 -668 312 -680 b 292 -698 307 -694 300 -698 b 282 -693 288 -698 284 -697 b 216 -608 261 -661 240 -636 l 209 -600 b 55 -386 147 -527 84 -497 b 73 -367 52 -376 63 -367 b 318 -622 189 -367 318 -505 b 315 -657 318 -634 317 -645 z',\n        },\n        flag64thDown: {\n            x_min: 0,\n            x_max: 273,\n            y_min: -376,\n            y_max: 812,\n            ha: 1188,\n            o: 'm 393 973 b 333 1169 393 1002 383 1169 b 324 1168 330 1169 327 1169 b 304 1130 314 1164 304 1149 b 305 1120 304 1128 305 1125 b 334 962 317 1056 334 1011 b 289 821 334 922 323 880 b 0 619 180 625 88 622 l 0 -523 b 20 -541 0 -534 9 -541 b 48 -513 35 -541 46 -526 b 229 -258 72 -363 154 -340 b 380 -16 330 -148 364 -108 b 384 27 383 -1 384 13 b 351 189 384 88 366 151 b 380 278 366 216 374 243 b 383 320 383 291 383 305 b 351 484 383 382 364 445 b 384 629 374 526 384 580 b 356 780 384 704 361 766 b 356 783 356 782 356 783 l 351 791 b 356 804 351 796 353 799 l 361 814 b 393 958 380 850 387 865 z m 56 386 b 217 609 86 501 153 533 b 292 706 246 642 269 670 b 304 711 295 710 300 711 b 321 703 311 711 320 707 b 328 670 325 693 325 681 b 331 634 330 658 331 645 b 82 367 331 516 199 367 l 75 367 b 56 386 62 367 56 379 z m 330 350 b 334 320 331 340 334 331 b 311 248 334 301 328 278 b 59 72 229 109 141 72 b 56 76 56 73 56 75 b 229 331 81 226 154 249 b 310 423 264 369 289 397 b 330 350 318 396 325 366 z m 330 56 b 334 26 331 46 334 37 b 311 -46 334 7 328 -16 b 56 -222 229 -184 137 -222 b 229 36 75 -86 145 -55 b 311 128 264 73 289 102 z',\n        },\n        flag128thUp: {\n            x_min: 0,\n            x_max: 261,\n            y_min: -812,\n            y_max: 533,\n            ha: 1345,\n            o: 'm 374 -969 b 337 -806 372 -913 359 -858 b 336 -796 336 -804 336 -801 b 337 -788 336 -793 336 -791 b 370 -616 340 -778 370 -698 b 340 -482 370 -570 360 -524 b 369 -330 353 -445 369 -386 b 337 -203 369 -287 359 -242 b 369 -43 350 -167 369 -104 b 366 -4 369 -30 367 -17 b 341 75 360 26 353 50 b 369 222 354 111 369 167 b 366 264 369 236 369 251 b 220 495 350 351 317 390 b 46 740 148 573 71 596 b 22 768 45 753 35 768 b 0 750 10 768 0 760 l 0 -609 l 7 -609 b 278 -802 91 -612 186 -615 b 323 -999 310 -865 323 -930 b 311 -1122 323 -1040 318 -1080 b 310 -1132 311 -1126 310 -1129 b 328 -1166 310 -1149 318 -1162 b 337 -1169 331 -1168 334 -1169 b 366 -1146 346 -1169 356 -1162 b 376 -1009 370 -1138 376 -1071 b 374 -969 376 -995 374 -982 z m 300 292 b 321 223 315 264 321 242 b 317 193 321 212 318 203 b 301 135 314 180 308 158 b 220 228 281 161 255 190 b 55 461 151 304 79 327 b 300 292 134 461 220 426 z m 300 24 b 321 -45 315 -4 321 -26 b 317 -75 321 -56 318 -65 l 298 -145 b 220 -58 278 -121 253 -94 b 56 187 148 20 81 43 b 55 193 56 189 56 192 b 300 24 137 193 220 157 z m 300 -261 b 321 -330 315 -289 321 -311 b 317 -360 321 -341 318 -350 b 300 -423 314 -374 307 -399 b 220 -334 279 -397 253 -370 b 56 -92 150 -256 79 -232 b 300 -261 135 -92 220 -127 z m 315 -657 b 308 -690 312 -668 312 -680 b 292 -698 307 -694 300 -698 b 282 -693 288 -698 284 -697 b 216 -608 261 -661 240 -636 l 209 -600 b 55 -386 147 -527 84 -497 b 73 -367 53 -376 62 -367 b 318 -622 189 -367 318 -505 b 315 -657 318 -634 317 -645 z',\n        },\n        flag128thDown: {\n            x_min: 0,\n            x_max: 273,\n            y_min: -580,\n            y_max: 812,\n            ha: 1392,\n            o: 'm 393 973 b 333 1169 393 1002 383 1169 b 324 1168 330 1169 327 1169 b 304 1130 314 1164 304 1149 b 305 1120 304 1128 305 1125 b 334 962 317 1056 334 1011 b 289 821 334 922 323 880 b 0 619 180 625 88 622 l 0 -816 b 20 -835 0 -828 7 -835 b 48 -806 33 -835 46 -819 b 229 -552 72 -657 154 -634 b 380 -310 330 -442 364 -402 b 384 -266 383 -295 384 -281 b 351 -105 384 -206 366 -143 b 384 27 372 -66 384 -16 b 351 189 384 88 366 151 b 380 278 366 216 374 243 b 383 320 383 291 383 305 b 351 484 383 382 364 445 b 384 629 374 526 384 580 b 356 780 384 704 361 766 b 356 783 356 782 356 783 l 351 791 b 356 804 351 796 353 799 l 361 814 b 393 958 380 850 387 865 z m 56 386 b 217 609 86 501 153 533 b 292 706 246 642 269 670 b 304 711 295 710 300 711 b 321 703 311 711 320 707 b 328 670 325 693 325 681 b 331 634 330 658 331 645 b 82 367 331 516 199 367 l 75 367 b 56 386 62 367 56 379 z m 330 350 b 334 320 331 340 334 331 b 311 248 334 301 328 278 b 59 72 229 109 141 72 b 56 76 56 73 56 75 b 229 331 81 226 154 249 b 310 423 264 369 289 397 b 330 350 318 396 325 366 z m 330 56 b 334 26 331 46 334 37 b 311 -46 334 7 328 -16 b 56 -222 229 -184 137 -222 b 229 36 75 -86 145 -55 b 311 128 264 73 289 102 z m 330 -238 b 334 -268 331 -248 334 -256 b 311 -340 334 -287 328 -310 b 56 -516 229 -478 137 -516 b 229 -258 75 -380 145 -348 b 311 -166 264 -220 289 -192 z',\n        },\n        accidentalFlat: {\n            x_min: 0,\n            x_max: 226,\n            y_min: -175,\n            y_max: 439,\n            ha: 614,\n            o: 'm 17 -245 b 30 -252 22 -251 26 -252 b 39 -249 35 -252 39 -249 b 153 -161 82 -225 117 -186 b 325 82 281 -72 325 16 b 196 220 325 164 262 216 b 117 196 171 220 137 209 b 85 176 108 189 92 176 b 78 177 82 176 81 176 b 62 202 68 181 62 192 b 72 608 63 233 72 579 b 45 632 72 624 59 632 b 0 592 24 632 1 618 b 17 -245 0 592 6 -230 z m 68 -117 b 63 27 68 -117 63 -30 b 66 73 63 50 65 68 b 167 144 76 102 134 144 b 226 60 209 144 226 96 b 98 -134 226 -17 160 -95 b 84 -138 92 -137 88 -138 b 68 -117 71 -138 68 -124 z',\n        },\n        accidentalNatural: {\n            x_min: 0,\n            x_max: 168,\n            y_min: -335,\n            y_max: 341,\n            ha: 676,\n            o: 'm 203 261 b 197 259 200 261 199 259 b 68 226 197 259 105 226 b 53 233 59 226 53 228 l 53 474 b 36 491 53 484 45 491 l 17 491 b 0 474 7 491 0 484 l 0 -268 b 13 -281 0 -276 4 -281 l 16 -279 b 22 -278 17 -279 20 -279 b 164 -235 42 -269 122 -235 b 189 -251 179 -235 189 -239 l 189 -465 b 206 -482 189 -475 196 -482 l 225 -482 b 242 -465 233 -482 242 -475 l 242 258 b 230 269 242 265 236 269 b 225 268 229 269 226 269 z m 53 56 b 176 114 53 76 141 114 b 189 107 184 114 189 112 l 189 -42 b 71 -101 189 -68 107 -101 b 53 -92 60 -101 53 -98 z',\n        },\n        accidentalSharp: {\n            x_min: 0,\n            x_max: 249,\n            y_min: -348,\n            y_max: 350,\n            ha: 698,\n            o: 'm 341 170 b 359 194 351 174 359 186 l 359 297 b 348 308 359 304 354 308 b 341 307 346 308 344 308 b 305 294 341 307 312 295 b 285 312 295 294 285 301 l 285 488 b 265 504 285 497 276 504 b 242 488 251 504 242 497 l 242 301 b 223 259 240 287 236 268 b 132 223 206 249 157 229 b 115 252 120 223 115 240 l 115 425 b 95 441 115 433 105 441 b 72 425 81 441 72 433 l 72 230 b 55 192 72 210 63 196 b 17 176 46 187 17 176 b 0 153 7 173 0 161 l 0 50 b 13 37 0 42 4 37 l 16 39 b 50 53 17 39 39 48 l 52 55 b 72 29 63 55 72 40 l 72 -114 b 56 -147 72 -130 65 -143 b 17 -163 48 -150 17 -163 b 0 -186 7 -166 0 -177 l 0 -288 b 13 -301 0 -297 4 -301 l 16 -300 b 50 -287 17 -300 37 -291 b 55 -285 52 -285 53 -285 b 72 -308 65 -285 72 -301 l 72 -485 b 91 -501 72 -494 81 -501 b 115 -485 105 -501 115 -494 l 115 -285 b 130 -253 115 -266 122 -256 l 217 -217 b 219 -217 217 -217 219 -217 l 222 -216 b 242 -242 235 -216 242 -233 l 242 -422 b 261 -438 242 -431 251 -438 b 285 -422 276 -438 285 -431 l 285 -217 b 301 -184 285 -206 291 -189 b 341 -168 311 -180 341 -168 b 359 -144 351 -164 359 -153 l 359 -42 b 348 -30 359 -35 354 -30 b 341 -32 346 -30 344 -30 l 304 -46 b 285 -20 295 -46 285 -37 l 285 114 b 304 156 285 124 292 151 z m 242 -65 b 132 -122 233 -94 166 -122 b 115 -115 124 -122 117 -120 b 111 -43 112 -109 111 -78 b 115 63 111 1 112 52 b 220 118 118 88 184 118 b 242 109 230 118 239 115 b 248 27 245 102 248 66 b 242 -65 248 -12 245 -52 z',\n        },\n        accidentalDoubleSharp: {\n            x_min: 0,\n            x_max: 247,\n            y_min: -125,\n            y_max: 127,\n            ha: 252,\n            o: 'm 274 -46 b 206 1 258 -37 206 -9 b 274 50 206 22 253 43 b 278 50 275 50 276 50 l 287 49 b 346 63 304 49 331 52 b 356 115 353 71 356 92 b 292 183 356 174 351 183 b 233 173 266 183 240 180 b 226 117 228 168 226 143 b 179 49 219 101 196 49 b 130 117 158 49 135 96 b 118 173 130 141 125 167 b 66 183 112 180 89 183 b 7 173 42 183 16 180 b 0 120 3 170 0 145 b 7 63 0 94 3 68 b 68 49 17 55 43 49 b 82 50 73 49 78 50 b 150 3 98 42 150 13 b 84 -46 150 -16 104 -39 l 69 -46 b 7 -56 43 -46 16 -49 b 0 -111 3 -60 0 -85 b 7 -166 0 -137 3 -163 b 65 -180 17 -174 40 -180 b 118 -166 86 -180 109 -176 b 130 -111 127 -158 130 -134 b 132 -105 130 -109 131 -107 b 177 -45 141 -85 158 -45 b 226 -111 196 -45 220 -91 b 233 -166 226 -137 228 -161 b 291 -180 243 -174 266 -180 b 356 -114 346 -180 356 -166 b 346 -56 356 -89 351 -63 b 288 -46 338 -49 312 -46 z',\n        },\n        accidentalDoubleFlat: {\n            x_min: 0,\n            x_max: 411,\n            y_min: -175,\n            y_max: 437,\n            ha: 612,\n            o: 'm 452 217 b 384 194 426 217 408 207 b 350 176 374 189 363 176 b 343 177 347 176 344 176 b 328 202 333 180 328 190 b 337 606 328 232 337 579 b 310 629 337 622 324 629 b 265 592 291 629 268 616 b 269 194 265 592 266 395 b 196 217 248 209 223 217 l 187 217 b 120 194 160 217 143 207 b 85 176 108 189 98 176 b 78 177 82 176 81 176 b 62 202 68 180 62 190 b 72 606 62 232 72 579 b 45 629 72 622 59 629 b 0 592 24 629 1 616 b 17 -245 0 592 7 -232 b 30 -252 22 -251 26 -252 b 39 -249 35 -252 39 -249 b 153 -161 84 -226 120 -186 b 274 -50 206 -124 246 -85 b 284 -245 276 -158 279 -240 b 295 -252 288 -251 292 -252 b 304 -249 300 -252 304 -249 b 416 -163 348 -226 383 -186 b 592 82 546 -72 592 16 b 461 217 592 163 528 216 z m 96 -134 b 84 -138 92 -137 86 -138 b 68 -115 72 -138 68 -124 b 63 26 68 -115 63 -30 b 66 72 63 49 65 66 b 168 144 75 101 134 144 b 226 59 212 144 226 95 b 96 -134 226 -22 161 -94 z m 361 -134 b 348 -138 356 -137 351 -138 b 333 -115 337 -138 333 -124 b 328 39 333 -115 328 -16 b 330 72 328 55 328 68 b 433 144 338 101 399 144 b 468 130 448 144 459 140 b 490 59 481 112 490 88 b 361 -134 490 -22 426 -94 z',\n        },\n        accidentalParensLeft: {\n            x_min: 0,\n            x_max: 141,\n            y_min: -248,\n            y_max: 247,\n            ha: 495,\n            o: 'm 203 331 l 203 351 b 202 356 203 354 203 356 b 0 0 60 281 0 140 b 199 -357 0 -144 60 -269 b 203 -354 200 -357 203 -356 l 203 -333 b 200 -327 203 -330 202 -328 b 86 0 118 -253 86 -160 b 200 324 86 158 120 251 b 203 331 202 325 203 327 z',\n        },\n        accidentalParensRight: {\n            x_min: 0,\n            x_max: 141,\n            y_min: -248,\n            y_max: 247,\n            ha: 495,\n            o: 'm 0 331 b 3 324 0 327 1 325 b 117 0 84 251 117 158 b 3 -327 117 -160 85 -253 b 0 -333 1 -328 0 -330 l 0 -354 b 4 -357 0 -356 3 -357 b 203 0 143 -269 203 -144 b 1 356 203 140 143 281 b 0 351 0 356 0 354 z',\n        },\n        accidentalQuarterToneFlatStein: {\n            x_min: 1,\n            x_max: 227,\n            y_min: -175,\n            y_max: 439,\n            ha: 614,\n            o: 'm 310 -245 b 327 592 321 -230 327 592 b 282 632 325 618 302 632 b 255 608 268 632 255 624 b 265 202 255 579 264 233 b 249 177 265 192 259 181 b 242 176 246 176 245 176 b 210 196 235 176 219 189 b 131 220 190 209 156 220 b 1 85 65 216 1 164 b 174 -161 1 16 46 -72 b 288 -249 210 -186 245 -225 b 297 -252 288 -249 292 -252 b 310 -245 301 -252 305 -251 z m 259 -117 b 243 -138 259 -124 256 -138 b 229 -134 239 -138 235 -137 b 101 60 167 -95 101 -17 b 160 144 101 96 118 144 b 261 73 193 144 251 102 b 264 27 262 68 264 50 b 259 -117 264 -30 259 -117 z',\n        },\n        accidentalThreeQuarterTonesFlatZimmermann: {\n            x_min: 1,\n            x_max: 466,\n            y_min: -175,\n            y_max: 439,\n            ha: 614,\n            o: 'm 363 -245 b 376 -252 367 -251 372 -252 b 384 -249 380 -252 384 -249 b 497 -161 428 -226 464 -186 b 671 84 625 -72 671 16 b 541 220 671 164 606 217 b 513 217 531 220 523 219 b 464 196 495 212 480 206 b 431 176 452 189 442 176 b 423 177 428 176 426 176 b 408 202 413 180 408 190 l 419 608 b 392 632 419 625 406 632 b 346 592 372 632 347 618 b 363 -245 346 592 351 -230 z m 289 -249 b 297 -252 289 -249 292 -252 b 310 -245 300 -252 305 -251 b 328 592 321 -230 328 592 b 282 631 327 618 302 631 b 255 608 268 631 255 624 l 266 202 b 251 177 266 190 261 180 b 243 176 248 176 246 176 b 210 196 232 176 222 189 b 164 216 196 204 180 210 l 163 217 b 132 220 151 219 143 220 b 1 84 65 217 1 163 b 177 -163 1 16 48 -72 b 289 -249 210 -186 245 -226 z m 262 72 b 265 26 264 66 265 49 b 261 -115 265 -30 261 -115 b 245 -138 261 -124 258 -138 b 230 -134 240 -138 236 -137 b 102 60 166 -92 102 -20 b 124 128 102 88 111 112 b 161 144 134 138 147 144 b 199 134 173 144 184 141 b 262 72 219 122 256 92 z m 413 -115 b 409 26 413 -115 409 -30 b 412 72 409 49 410 66 b 514 144 420 102 480 144 b 570 60 557 144 570 96 b 442 -134 570 -23 508 -91 b 429 -138 436 -137 433 -138 b 413 -115 418 -138 413 -124 z',\n        },\n        accidentalQuarterToneSharpStein: {\n            x_min: 0,\n            x_max: 179,\n            y_min: -353,\n            y_max: 307,\n            ha: 660,\n            o: 'm 258 240 b 246 252 258 248 252 252 b 240 251 245 252 242 252 b 168 225 240 251 171 225 b 150 253 156 225 150 240 l 150 426 b 130 442 150 435 141 442 b 105 418 108 442 105 429 l 105 230 b 91 193 105 219 101 202 b 17 161 65 183 42 171 b 0 138 9 158 0 147 l 0 36 b 13 23 0 27 4 23 l 16 24 b 86 53 17 24 73 49 l 88 55 b 107 30 98 55 107 42 l 107 -114 b 92 -145 107 -130 101 -143 l 17 -177 b 0 -200 9 -180 0 -192 l 0 -302 b 13 -315 0 -311 4 -315 l 16 -314 b 85 -285 17 -314 72 -291 b 105 -312 92 -282 105 -301 l 105 -492 b 125 -508 105 -501 114 -508 b 150 -484 147 -508 150 -498 l 150 -285 b 151 -274 150 -281 150 -278 b 164 -253 153 -265 158 -256 b 240 -225 176 -251 240 -225 b 258 -202 249 -222 258 -210 l 258 -99 b 245 -86 258 -91 253 -86 l 242 -88 b 240 -88 242 -88 240 -88 l 240 -86 b 168 -115 240 -86 174 -114 b 148 -91 158 -115 148 -107 l 148 43 b 167 85 148 55 156 81 b 240 114 180 91 240 114 b 258 138 249 118 258 128 z',\n        },\n        accidentalThreeQuarterTonesSharpStein: {\n            x_min: 3,\n            x_max: 317,\n            y_min: -347,\n            y_max: 369,\n            ha: 716,\n            o: 'm 456 324 b 448 336 456 330 454 336 b 393 317 445 336 400 320 b 389 315 392 315 390 315 b 383 325 386 315 383 318 l 383 508 b 360 531 383 528 379 531 b 337 508 341 531 337 527 l 337 318 b 325 291 337 300 334 294 b 268 268 320 288 287 276 b 253 281 256 268 253 274 l 253 464 b 230 487 253 484 249 487 b 207 464 212 487 207 482 l 207 264 b 194 240 207 253 204 245 l 132 217 b 131 217 132 217 132 217 l 130 216 b 118 229 122 216 118 220 l 118 420 b 95 444 118 439 114 444 b 72 420 76 444 72 439 l 72 212 b 60 190 72 197 68 193 l 16 173 b 4 161 9 170 4 167 l 4 50 b 13 39 4 45 9 39 b 58 55 16 39 46 49 b 63 56 60 56 62 56 b 72 42 71 56 72 50 l 72 -125 b 58 -150 72 -137 65 -147 l 16 -166 b 4 -177 9 -168 4 -171 l 4 -289 b 14 -301 4 -295 9 -301 b 53 -287 16 -301 40 -291 b 62 -285 56 -285 59 -285 b 72 -298 69 -285 72 -289 l 72 -477 b 95 -500 72 -495 76 -500 b 118 -477 114 -500 118 -495 l 118 -278 b 127 -259 118 -269 121 -261 l 196 -232 b 207 -243 204 -232 207 -235 l 207 -432 b 230 -455 207 -452 212 -455 b 253 -432 249 -455 253 -451 l 253 -228 b 268 -204 253 -216 259 -207 l 320 -186 b 328 -183 323 -184 325 -183 b 337 -194 334 -183 337 -187 l 337 -387 b 360 -410 337 -408 341 -410 b 383 -387 379 -410 383 -406 l 383 -174 b 395 -157 383 -166 390 -158 l 445 -138 b 456 -127 452 -135 456 -132 l 456 -14 b 448 -3 456 -10 454 -3 b 397 -22 445 -3 408 -17 l 396 -23 b 383 -6 387 -23 383 -16 l 383 163 b 392 181 383 173 384 179 b 445 202 397 183 445 202 b 456 213 452 203 456 207 z m 337 -45 b 266 -78 333 -56 287 -78 b 258 -75 262 -78 259 -76 b 253 19 255 -71 253 -27 b 258 130 253 69 255 122 b 333 163 264 141 315 163 b 337 161 334 163 337 161 b 341 78 340 157 341 120 b 337 -45 341 24 340 -37 z m 118 -127 b 114 -48 114 -121 114 -86 b 118 78 114 6 115 68 b 200 114 122 91 180 114 b 207 111 204 114 206 112 b 212 22 210 107 212 66 b 207 -94 212 -29 210 -85 b 127 -130 203 -108 148 -130 b 118 -127 122 -130 120 -128 z',\n        },\n        accidentalBuyukMucennebFlat: {\n            x_min: 1,\n            x_max: 287,\n            y_min: -174,\n            y_max: 438,\n            ha: 612,\n            o: 'm 379 452 b 370 464 379 458 377 464 b 164 389 366 464 170 392 b 156 396 163 389 156 393 b 157 436 157 409 157 428 b 167 452 157 445 161 449 b 366 526 173 455 366 526 b 379 540 374 528 379 534 l 379 611 b 370 622 379 616 377 622 b 170 550 366 622 174 552 b 160 557 163 550 160 554 b 161 608 160 585 161 602 b 134 631 161 624 148 631 b 89 590 114 631 91 616 l 89 528 b 81 517 89 526 88 518 b 16 491 76 514 16 491 b 1 480 6 490 1 485 l 1 406 b 13 395 1 400 4 395 l 14 396 b 79 419 16 396 72 415 b 89 412 86 419 89 415 b 91 376 89 399 89 386 b 82 359 91 364 89 361 b 16 331 76 356 16 331 b 1 321 6 331 1 328 l 1 248 b 13 236 1 242 4 236 b 79 262 16 236 71 258 b 92 251 89 262 92 256 b 107 -242 95 23 101 -236 b 120 -251 111 -249 115 -251 b 128 -248 124 -251 128 -248 b 240 -160 171 -225 207 -184 b 413 84 367 -71 413 16 b 284 220 413 166 350 216 b 207 196 259 220 229 209 b 170 176 196 190 184 176 l 168 177 b 151 203 157 181 151 192 b 153 269 151 210 151 236 b 163 292 153 275 153 289 b 366 367 173 297 366 367 b 379 383 374 370 379 376 z m 186 -132 b 173 -137 180 -135 176 -137 b 157 -114 161 -137 157 -122 b 153 35 157 -114 153 -22 b 154 73 153 53 153 68 b 219 135 160 92 197 124 b 255 144 232 141 243 144 b 292 130 269 144 282 140 b 314 62 305 114 314 91 b 186 -132 314 -17 251 -94 z',\n        },\n        accidentalBakiyeFlat: {\n            x_min: -1,\n            x_max: 286,\n            y_min: -175,\n            y_max: 439,\n            ha: 614,\n            o: 'm 377 454 b 369 467 377 458 376 467 b 363 465 367 467 364 467 b 161 390 363 465 167 393 b 153 399 154 390 153 395 b 157 608 154 494 157 593 b 130 632 157 624 144 632 b 86 592 111 632 88 618 b 88 377 86 592 86 501 b 76 356 88 373 88 360 l 12 331 b -1 320 3 330 -1 327 l -1 248 b 9 236 -1 242 1 236 b 81 264 12 236 78 261 b 89 258 86 264 89 261 b 104 -245 92 30 96 -236 b 115 -252 108 -251 112 -252 b 124 -249 120 -252 124 -249 b 239 -161 167 -226 203 -186 b 412 84 367 -72 412 17 b 282 220 412 166 348 216 b 255 216 274 220 264 219 b 203 196 238 212 222 206 b 171 177 193 189 177 177 b 163 179 168 177 166 177 b 147 202 153 181 147 192 b 147 216 147 204 147 209 l 150 262 b 150 276 150 269 150 275 b 158 291 150 287 154 289 b 363 370 163 292 363 370 b 377 384 373 373 377 379 z m 181 -134 b 167 -138 176 -137 171 -138 b 153 -117 156 -138 153 -125 b 148 27 153 -117 148 -30 b 151 73 148 50 150 68 b 255 144 161 105 219 144 b 312 62 298 144 312 99 b 181 -134 312 -19 249 -96 z',\n        },\n        accidentalKomaSharp: {\n            x_min: 0,\n            x_max: 229,\n            y_min: -337,\n            y_max: 322,\n            ha: 659,\n            o: 'm 312 151 b 330 176 323 156 330 166 l 330 278 b 320 289 330 285 327 289 b 312 288 318 289 315 289 b 200 246 312 288 203 248 b 181 275 187 246 181 264 l 181 448 b 163 464 181 456 173 464 b 138 441 140 464 138 452 l 138 253 b 122 215 137 240 132 225 b 17 177 92 203 45 177 b 0 153 7 173 0 163 l 0 50 b 10 39 0 43 4 39 b 17 40 13 39 14 39 l 128 81 b 138 52 138 81 138 63 l 138 -91 b 124 -124 138 -107 132 -120 b 17 -167 115 -127 17 -167 b 0 -192 7 -171 0 -181 l 0 -294 b 10 -305 0 -301 4 -305 b 17 -304 13 -305 14 -305 b 128 -261 17 -304 117 -264 l 130 -259 b 138 -276 137 -259 138 -268 l 138 -469 b 157 -485 138 -478 147 -485 b 181 -462 179 -485 181 -475 l 181 -262 b 183 -252 181 -258 181 -255 b 197 -232 186 -243 190 -235 b 312 -187 207 -228 312 -187 b 330 -163 323 -183 330 -173 l 330 -60 b 320 -49 330 -53 327 -49 b 312 -50 318 -49 315 -49 l 200 -94 b 193 -95 197 -95 194 -95 b 181 -68 183 -95 181 -85 l 181 66 b 200 108 181 92 189 104 z',\n        },\n        accidentalKucukMucennebSharp: {\n            x_min: -1,\n            x_max: 339,\n            y_min: -338,\n            y_max: 321,\n            ha: 659,\n            o: 'm 264 92 b 271 102 264 98 265 99 l 395 150 b 412 174 405 154 412 164 l 412 276 b 402 288 412 284 409 288 b 395 287 400 288 397 288 b 282 245 395 287 285 246 b 264 274 269 245 264 262 l 264 446 b 245 462 264 455 255 462 b 220 439 222 462 220 451 l 220 252 b 204 213 219 239 215 223 b 99 176 174 202 127 176 b 82 151 89 171 82 161 l 82 49 b 92 37 82 42 86 37 b 99 39 95 37 96 37 l 210 79 b 216 81 212 81 215 81 b 220 78 219 81 220 79 l 220 56 b 216 46 220 52 220 48 b 16 -29 210 45 16 -29 b -1 -45 4 -32 -1 -36 l -1 -138 b 12 -154 -1 -145 3 -154 l 215 -79 b 220 -84 219 -79 220 -81 l 220 -105 b 210 -122 220 -115 219 -120 b 99 -168 202 -127 99 -168 b 82 -193 89 -173 82 -183 l 82 -295 b 92 -307 82 -302 86 -307 b 99 -305 95 -307 96 -307 b 210 -262 99 -305 199 -265 l 212 -261 b 220 -278 219 -261 220 -269 l 220 -471 b 239 -487 220 -480 229 -487 b 264 -464 261 -487 264 -477 l 264 -264 b 265 -253 264 -259 264 -256 b 279 -233 268 -245 272 -236 b 395 -189 289 -229 395 -189 b 412 -164 405 -184 412 -174 l 412 -62 b 402 -50 412 -55 409 -50 b 395 -52 400 -50 397 -50 l 278 -96 b 264 -86 268 -96 264 -94 l 264 -68 b 269 -59 264 -62 265 -60 b 471 17 274 -58 471 17 b 488 36 484 22 488 27 l 488 127 b 475 144 488 134 487 144 l 472 141 b 471 141 472 141 471 141 l 471 143 b 272 68 471 143 282 71 l 269 66 b 264 71 264 66 264 69 z',\n        },\n        accidentalKoron: {\n            x_min: 0,\n            x_max: 300,\n            y_min: -472,\n            y_max: 157,\n            ha: 629,\n            o: 'm 432 -4 b 415 10 432 1 418 9 l 4 226 b 0 223 1 226 0 225 l 0 -672 b 7 -680 0 -677 3 -680 l 45 -680 b 52 -672 49 -680 52 -677 l 52 -193 l 415 -22 b 432 -4 418 -20 432 -13 z m 52 -137 l 52 144 l 327 -7 z',\n        },\n        accidentalSori: {\n            x_min: 0,\n            x_max: 421,\n            y_min: -318,\n            y_max: 328,\n            ha: 646,\n            o: 'm 606 10 b 589 23 606 16 592 22 l 382 109 l 382 465 b 374 472 382 469 379 472 l 337 472 b 330 465 333 472 330 469 l 330 132 l 183 194 l 183 425 b 176 432 183 429 180 432 l 138 432 b 131 425 134 432 131 429 l 131 216 l 3 269 b 0 265 0 269 0 266 l 0 223 b 3 213 0 216 0 215 l 131 160 l 131 -150 l 3 -203 b 0 -212 0 -204 0 -206 l 0 -255 b 3 -259 0 -258 1 -259 l 131 -204 l 131 -451 b 138 -458 131 -455 134 -458 l 176 -458 b 183 -451 180 -458 183 -455 l 183 -183 l 330 -120 l 330 -410 b 337 -418 330 -415 333 -418 l 374 -418 b 382 -410 379 -418 382 -415 l 382 -98 l 589 -9 b 606 10 592 -9 606 0 z m 183 -128 l 183 138 l 330 76 l 330 -66 z m 382 -45 l 382 55 l 501 6 z',\n        },\n        articAccentAbove: {\n            x_min: 0,\n            x_max: 339,\n            y_min: 1,\n            y_max: 245,\n            ha: 244,\n            o: 'm 469 151 b 488 177 488 156 488 166 b 469 203 488 189 488 197 l 37 350 b 24 353 32 351 26 353 b 3 333 12 353 7 344 b 0 318 1 327 0 323 b 20 298 0 311 4 304 b 346 187 20 298 331 193 b 356 177 353 186 356 181 b 344 167 356 173 353 170 b 20 58 328 163 20 58 b 0 36 4 50 0 43 b 3 23 0 32 1 27 b 23 1 7 13 13 1 b 29 3 24 1 27 1 z',\n        },\n        articAccentBelow: {\n            x_min: 0,\n            x_max: 339,\n            y_min: -244,\n            y_max: 0,\n            ha: 244,\n            o: 'm 469 -202 b 488 -176 488 -197 488 -187 b 469 -150 488 -164 488 -156 l 37 -3 b 24 0 32 -1 26 0 b 3 -20 12 0 7 -9 b 0 -35 1 -26 0 -30 b 20 -55 0 -42 4 -49 b 346 -166 20 -55 331 -160 b 356 -176 353 -167 356 -171 b 344 -186 356 -180 353 -183 b 20 -295 328 -190 20 -295 b 0 -317 4 -302 0 -310 b 3 -330 0 -321 1 -325 b 23 -351 7 -340 13 -351 b 29 -350 24 -351 27 -351 z',\n        },\n        articTenutoAbove: {\n            x_min: -1,\n            x_max: 338,\n            y_min: 0,\n            y_max: 48,\n            ha: 48,\n            o: 'm 452 0 b 487 35 485 0 487 16 b 452 69 487 53 487 69 l 33 69 b -1 35 -1 69 -1 53 b 33 0 -1 16 -1 0 z',\n        },\n        articTenutoBelow: {\n            x_min: -1,\n            x_max: 338,\n            y_min: -48,\n            y_max: 0,\n            ha: 48,\n            o: 'm 452 -69 b 487 -35 485 -69 487 -53 b 452 0 487 -16 487 0 l 33 0 b -1 -35 -1 0 -1 -16 b 33 -69 -1 -53 -1 -69 z',\n        },\n        articStaccatoAbove: {\n            x_min: 0,\n            x_max: 84,\n            y_min: 0,\n            y_max: 84,\n            ha: 84,\n            o: 'm 121 60 b 60 121 121 94 94 121 b 0 60 27 121 0 94 b 60 0 0 27 27 0 b 121 60 94 0 121 27 z',\n        },\n        articStaccatoBelow: {\n            x_min: 0,\n            x_max: 84,\n            y_min: -84,\n            y_max: 0,\n            ha: 84,\n            o: 'm 121 -60 b 60 0 121 -27 94 0 b 0 -60 27 0 0 -27 b 60 -121 0 -94 27 -121 b 121 -60 94 -121 121 -94 z',\n        },\n        articStaccatissimoAbove: {\n            x_min: 1,\n            x_max: 100,\n            y_min: -2,\n            y_max: 293,\n            ha: 295,\n            o: 'm 72 422 b 1 390 35 422 3 409 b 72 -3 1 369 39 -3 b 144 389 108 -3 144 356 b 72 422 144 410 111 422 z',\n        },\n        articStaccatissimoBelow: {\n            x_min: 1,\n            x_max: 100,\n            y_min: -295,\n            y_max: 0,\n            ha: 295,\n            o: 'm 72 -425 b 144 -392 111 -425 144 -413 b 72 0 144 -359 108 0 b 1 -393 39 0 1 -372 b 72 -425 3 -412 35 -425 z',\n        },\n        articMarcatoAbove: {\n            x_min: -1,\n            x_max: 235,\n            y_min: -1,\n            y_max: 253,\n            ha: 254,\n            o: 'm 181 356 b 167 364 177 361 173 364 b 153 356 157 364 153 356 l 0 23 b -1 16 -1 20 -1 19 b 9 0 -1 9 1 1 b 16 -1 10 -1 14 -1 b 32 9 22 -1 29 1 b 112 186 32 9 109 180 b 118 190 114 189 115 190 b 127 186 121 190 124 189 b 209 9 128 180 209 9 b 225 0 213 3 219 0 l 323 0 b 338 16 333 1 338 7 b 337 23 338 19 338 22 z',\n        },\n        articMarcatoBelow: {\n            x_min: -1,\n            x_max: 235,\n            y_min: -254,\n            y_max: 0,\n            ha: 254,\n            o: 'm 156 -357 b 170 -366 160 -363 164 -366 b 184 -357 180 -366 184 -357 l 337 -24 b 338 -17 338 -22 338 -20 b 328 -1 338 -10 336 -3 b 321 0 327 0 323 0 b 305 -10 315 0 308 -3 b 225 -187 305 -10 228 -181 b 219 -192 223 -190 222 -192 b 210 -187 216 -192 213 -190 b 128 -10 209 -181 128 -10 b 112 -1 124 -4 118 -1 l 14 -1 b -1 -17 4 -3 -1 -9 b 0 -24 -1 -20 -1 -23 z',\n        },\n        fermataAbove: {\n            x_min: 3,\n            x_max: 605,\n            y_min: -3,\n            y_max: 329,\n            ha: 332,\n            o: 'm 435 318 b 818 36 742 318 804 91 b 821 26 819 32 819 27 b 851 -4 831 6 837 -4 b 871 16 864 -4 871 1 b 870 30 871 20 871 24 b 438 474 780 471 480 474 b 6 30 392 474 94 471 b 4 14 4 24 4 19 b 23 -4 4 0 12 -4 b 52 26 36 -4 43 6 b 56 39 53 27 55 33 b 435 318 73 98 138 318 z m 516 75 b 436 153 516 117 480 153 b 359 75 395 153 359 117 b 436 -4 359 32 395 -4 b 516 75 480 -4 516 32 z',\n        },\n        fermataBelow: {\n            x_min: 3,\n            x_max: 605,\n            y_min: -332,\n            y_max: 0,\n            ha: 332,\n            o: 'm 435 -323 b 56 -43 138 -323 73 -102 b 52 -30 55 -37 53 -32 b 23 0 43 -10 36 0 b 4 -19 12 0 4 -4 b 6 -35 4 -23 4 -29 b 438 -478 94 -475 392 -478 b 870 -35 480 -478 780 -475 b 871 -20 871 -29 871 -24 b 851 0 871 -6 864 0 b 821 -30 837 0 831 -10 b 818 -40 819 -32 819 -36 b 435 -323 804 -95 742 -323 z m 516 -79 b 436 0 516 -36 480 0 b 359 -79 395 0 359 -36 b 436 -157 359 -121 395 -157 b 516 -79 480 -157 516 -121 z',\n        },\n        fermataLongAbove: {\n            x_min: 0,\n            x_max: 603,\n            y_min: -1,\n            y_max: 333,\n            ha: 334,\n            o: 'm 72 480 b 0 441 32 480 0 462 l 0 19 b 35 0 0 9 16 0 b 71 19 55 0 71 9 l 71 289 b 433 315 71 307 252 315 b 798 289 615 315 798 307 l 798 19 b 832 0 798 9 814 0 b 868 19 852 0 868 9 l 868 441 b 796 480 868 462 837 480 z m 513 78 b 433 156 513 121 478 156 b 356 78 390 156 356 121 b 433 -1 356 35 390 -1 b 513 78 478 -1 513 35 z',\n        },\n        fermataLongBelow: {\n            x_min: 0,\n            x_max: 603,\n            y_min: -333,\n            y_max: 1,\n            ha: 334,\n            o: 'm 513 -78 b 433 1 513 -35 478 1 b 356 -78 390 1 356 -35 b 433 -156 356 -121 390 -156 b 513 -78 478 -156 513 -121 z m 796 -480 b 868 -441 837 -480 868 -462 l 868 -19 b 832 0 868 -9 852 0 b 798 -19 814 0 798 -9 l 798 -289 b 433 -315 798 -307 615 -315 b 71 -289 252 -315 71 -307 l 71 -19 b 35 0 71 -9 55 0 b 0 -19 16 0 0 -9 l 0 -441 b 72 -480 0 -462 32 -480 z',\n        },\n        fermataVeryLongAbove: {\n            x_min: 0,\n            x_max: 715,\n            y_min: 0,\n            y_max: 408,\n            ha: 408,\n            o: 'm 76 588 b 0 546 35 588 0 569 l 0 22 b 37 1 0 10 17 1 b 75 22 59 1 75 10 l 75 431 b 514 458 75 449 294 458 b 955 431 734 458 955 449 l 955 22 b 991 1 955 10 971 1 b 1030 22 1012 1 1030 10 l 1030 546 b 953 588 1030 569 995 588 z m 215 389 b 138 347 171 389 138 370 l 138 22 b 174 1 138 10 154 1 b 213 22 196 1 213 10 l 213 217 b 514 245 213 235 363 245 b 816 217 665 245 816 235 l 816 22 b 854 1 816 10 834 1 b 891 22 876 1 891 10 l 891 347 b 815 389 891 370 858 389 z m 606 84 b 521 167 606 130 569 167 b 439 84 475 167 439 130 b 521 0 439 39 475 0 b 606 84 569 0 606 39 z',\n        },\n        fermataVeryLongBelow: {\n            x_min: 0,\n            x_max: 715,\n            y_min: -408,\n            y_max: 0,\n            ha: 408,\n            o: 'm 606 -84 b 521 0 606 -39 569 0 b 439 -84 475 0 439 -39 b 521 -167 439 -130 475 -167 b 606 -84 569 -167 606 -130 z m 815 -389 b 891 -347 858 -389 891 -370 l 891 -22 b 854 -1 891 -10 876 -1 b 816 -22 834 -1 816 -10 l 816 -217 b 514 -245 816 -235 665 -245 b 213 -217 363 -245 213 -235 l 213 -22 b 174 -1 213 -10 196 -1 b 138 -22 154 -1 138 -10 l 138 -347 b 215 -389 138 -370 171 -389 z m 953 -588 b 1030 -546 995 -588 1030 -569 l 1030 -22 b 991 -1 1030 -10 1012 -1 b 955 -22 971 -1 955 -10 l 955 -431 b 514 -458 955 -449 734 -458 b 75 -431 294 -458 75 -449 l 75 -22 b 37 -1 75 -10 59 -1 b 0 -22 17 -1 0 -10 l 0 -546 b 76 -588 0 -569 35 -588 z',\n        },\n        fermataShortAbove: {\n            x_min: 0,\n            x_max: 604,\n            y_min: 0,\n            y_max: 341,\n            ha: 341,\n            o: 'm 78 0 b 88 6 81 0 82 3 b 435 328 134 45 412 328 b 783 3 458 328 742 39 b 793 0 786 1 793 0 l 865 0 b 870 4 865 0 870 1 b 867 10 870 6 868 9 b 435 491 805 69 474 491 b 3 10 397 491 69 75 b 0 4 1 9 0 6 b 4 0 0 1 4 0 z m 513 94 b 433 171 513 135 477 171 b 354 94 390 171 354 135 b 433 13 354 49 390 13 b 513 94 477 13 513 49 z',\n        },\n        fermataShortBelow: {\n            x_min: 0,\n            x_max: 604,\n            y_min: -341,\n            y_max: 0,\n            ha: 341,\n            o: 'm 4 0 b 0 -4 4 0 0 -1 b 3 -10 0 -6 1 -9 b 435 -491 69 -75 397 -491 b 867 -10 474 -491 805 -69 b 870 -4 868 -9 870 -6 b 865 0 870 -1 865 0 l 793 0 b 783 -3 793 0 786 -1 b 435 -328 742 -39 458 -328 b 88 -6 412 -328 134 -45 b 78 0 82 -3 81 0 z m 513 -94 b 433 -13 513 -49 477 -13 b 354 -94 390 -13 354 -49 b 433 -171 354 -135 390 -171 b 513 -94 477 -171 513 -135 z',\n        },\n        breathMarkComma: {\n            x_min: 1,\n            x_max: 152,\n            y_min: 2,\n            y_max: 251,\n            ha: 249,\n            o: 'm 104 361 b 1 271 42 361 1 321 b 82 190 1 222 35 190 b 122 160 118 190 122 160 b 125 144 124 154 125 150 b 102 88 125 124 115 105 b 37 32 78 56 40 35 b 26 17 32 29 26 26 l 27 16 b 37 3 29 6 33 3 b 181 102 85 3 158 66 b 219 239 210 147 219 197 l 219 249 b 104 361 219 317 170 361 z',\n        },\n        breathMarkUpbow: {\n            x_min: 1,\n            x_max: 249,\n            y_min: 1,\n            y_max: 495,\n            ha: 494,\n            o: 'm 181 1 b 206 22 193 1 203 10 l 359 683 l 359 688 b 338 713 359 700 351 710 l 333 713 b 308 694 321 713 311 706 l 180 140 l 53 694 b 27 713 49 706 39 713 l 22 713 b 1 690 10 710 1 700 b 3 683 1 687 1 685 l 154 22 b 181 1 157 10 167 1 z',\n        },\n        caesura: {\n            x_min: 0,\n            x_max: 384,\n            y_min: -1,\n            y_max: 532,\n            ha: 533,\n            o: 'm 40 -1 b 78 26 58 -1 72 9 l 321 713 b 323 726 323 717 323 721 b 282 766 323 747 304 766 b 245 739 265 766 251 756 l 3 52 b 0 37 1 48 0 42 b 27 1 0 22 10 7 b 40 -1 32 -1 36 -1 z m 308 26 l 552 713 b 553 726 553 717 553 721 b 513 766 553 747 534 766 b 475 739 495 766 481 756 l 232 52 b 230 39 230 48 230 43 b 258 1 230 23 240 7 b 271 -1 262 -1 266 -1 b 308 26 287 -1 302 9 z',\n        },\n        caesuraCurved: {\n            x_min: 0,\n            x_max: 373,\n            y_min: 0,\n            y_max: 530,\n            ha: 530,\n            o: 'm 491 763 b 445 719 468 763 446 744 b 252 98 432 507 340 295 l 226 39 b 223 27 225 35 223 32 b 252 0 223 13 233 0 b 276 16 262 0 272 6 b 537 716 386 230 537 478 b 491 763 537 742 518 763 z m 29 0 b 53 16 39 0 48 6 l 82 69 b 314 716 187 264 314 498 b 268 763 314 742 295 763 b 222 719 245 763 223 744 b 29 98 209 507 117 295 l 3 39 b 0 29 1 36 0 33 b 29 0 0 14 12 0 z',\n        },\n        restMaxima: {\n            x_min: 0,\n            x_max: 381,\n            y_min: -249,\n            y_max: 250,\n            ha: 499,\n            o: 'm 180 -330 l 180 331 b 156 360 180 356 170 360 l 23 360 b 0 331 10 360 0 356 l 0 -330 b 23 -359 0 -354 10 -359 l 156 -359 b 180 -330 170 -359 180 -354 z m 549 -330 l 549 331 b 524 360 549 356 539 360 l 392 360 b 369 331 379 360 369 356 l 369 -330 b 392 -359 369 -354 379 -359 l 524 -359 b 549 -330 539 -359 549 -354 z',\n        },\n        restDoubleWhole: {\n            x_min: 0,\n            x_max: 125,\n            y_min: 0,\n            y_max: 250,\n            ha: 250,\n            o: 'm 180 22 l 180 338 b 156 360 180 350 170 360 l 23 360 b 0 338 10 360 0 350 l 0 22 b 23 0 0 10 10 0 l 156 0 b 180 22 170 0 180 10 z',\n        },\n        restWhole: {\n            x_min: 0,\n            x_max: 282,\n            y_min: -135,\n            y_max: 9,\n            ha: 144,\n            o: 'm 406 -157 l 406 -24 b 369 13 406 -3 389 13 l 37 13 b 0 -24 16 13 0 -3 l 0 -157 b 37 -194 0 -177 16 -194 l 369 -194 b 406 -157 389 -194 406 -177 z',\n        },\n        restWholeLegerLine: {\n            x_min: -117,\n            x_max: 399,\n            y_min: -135,\n            y_max: 20,\n            ha: 155,\n            o: 'm -143 29 b -168 3 -157 29 -168 17 b -143 -23 -168 -12 -157 -23 l 0 -23 l 0 -157 b 37 -194 0 -177 16 -194 l 369 -194 b 406 -157 389 -194 406 -177 l 406 -24 b 549 -23 406 -23 406 -23 b 575 3 563 -23 575 -12 b 549 29 575 17 563 29 z',\n        },\n        restHalf: {\n            x_min: 0,\n            x_max: 282,\n            y_min: -2,\n            y_max: 142,\n            ha: 144,\n            o: 'm 406 35 l 406 167 b 369 204 406 189 389 204 l 37 204 b 0 167 16 204 0 189 l 0 35 b 37 -3 0 14 16 -3 l 369 -3 b 406 35 389 -3 406 14 z',\n        },\n        restHalfLegerLine: {\n            x_min: -117,\n            x_max: 399,\n            y_min: -13,\n            y_max: 142,\n            ha: 155,\n            o: 'm 549 -19 b 575 7 563 -19 575 -7 b 549 33 575 22 563 33 b 406 35 406 33 406 33 l 406 167 b 369 204 406 187 389 204 l 37 204 b 0 167 16 204 0 187 l 0 33 l -143 33 b -168 7 -157 33 -168 22 b -143 -19 -168 -7 -157 -19 z',\n        },\n        restQuarter: {\n            x_min: 1,\n            x_max: 270,\n            y_min: -375,\n            y_max: 373,\n            ha: 748,\n            o: 'm 112 -55 b 174 -141 135 -84 156 -111 b 183 -161 177 -147 183 -158 b 181 -167 183 -163 183 -166 b 166 -174 179 -173 173 -174 b 143 -170 160 -174 148 -171 b 137 -170 141 -170 138 -170 l 125 -166 b 1 -304 50 -166 1 -233 b 168 -527 1 -376 63 -446 b 206 -540 180 -536 194 -540 b 228 -531 216 -540 226 -537 b 230 -521 229 -527 230 -524 b 207 -487 230 -508 219 -497 b 170 -435 189 -487 173 -448 b 164 -397 166 -423 164 -410 b 255 -292 164 -338 194 -292 b 369 -317 297 -292 344 -308 l 370 -318 b 382 -320 376 -320 379 -320 b 389 -314 386 -320 389 -318 b 336 -232 389 -297 351 -249 b 236 -32 281 -166 236 -112 b 236 -27 236 -30 236 -29 l 238 -17 b 238 -13 238 -16 238 -14 b 333 199 243 71 295 140 b 338 220 337 206 338 213 b 333 248 338 235 333 248 b 95 526 333 248 120 501 b 69 537 88 533 78 537 b 40 507 55 537 40 527 b 46 484 40 500 42 492 b 134 291 52 468 134 395 b 48 108 134 238 112 176 b 27 66 33 94 27 78 b 42 32 27 46 42 32 z',\n        },\n        rest8th: {\n            x_min: 0,\n            x_max: 247,\n            y_min: -251,\n            y_max: 174,\n            ha: 425,\n            o: 'm 193 154 b 96 251 193 207 150 251 b 0 154 43 251 0 207 b 39 81 0 124 17 98 b 117 56 62 65 89 56 b 173 66 137 56 157 60 b 225 88 193 72 206 78 b 232 89 228 89 230 89 b 239 76 238 89 239 84 b 238 60 239 72 239 66 b 104 -343 233 39 130 -248 b 145 -361 104 -360 137 -361 b 196 -347 161 -361 181 -359 b 341 161 200 -344 341 161 b 356 217 347 187 354 210 b 338 240 356 232 341 239 b 323 235 336 240 331 240 b 193 140 312 226 240 140 z',\n        },\n        rest16th: {\n            x_min: 0,\n            x_max: 320,\n            y_min: -500,\n            y_max: 179,\n            ha: 679,\n            o: 'm 300 160 b 202 258 300 215 256 258 b 104 160 148 258 104 215 b 219 62 104 101 164 62 b 331 94 258 62 298 75 b 341 96 336 95 338 96 b 348 86 346 96 348 94 b 265 -173 348 63 275 -151 b 194 -217 253 -200 215 -217 b 196 -203 196 -212 196 -207 b 98 -105 196 -148 151 -105 b 0 -203 43 -105 0 -148 b 115 -301 0 -262 60 -301 b 223 -271 153 -301 190 -288 b 229 -279 226 -271 229 -274 l 228 -281 b 228 -282 228 -282 228 -282 l 91 -690 b 91 -691 91 -690 91 -691 l 89 -693 b 134 -720 89 -706 102 -720 b 189 -687 176 -720 183 -703 l 356 -138 b 420 81 393 -16 420 81 b 459 226 420 81 456 207 b 461 232 459 229 461 230 b 446 248 461 240 449 246 b 431 242 439 248 435 245 b 300 145 420 233 348 147 z',\n        },\n        rest32nd: {\n            x_min: 0,\n            x_max: 363,\n            y_min: -500,\n            y_max: 426,\n            ha: 926,\n            o: 'm 508 603 b 492 598 501 603 497 600 b 361 503 482 590 410 503 l 361 516 b 264 613 361 570 318 613 b 166 516 210 613 166 570 b 206 444 166 487 183 461 b 246 423 217 433 232 428 b 284 418 258 420 269 418 b 393 449 321 418 360 432 b 399 451 395 451 397 451 b 415 426 409 451 415 436 l 413 423 b 413 422 413 423 413 422 l 357 192 b 279 140 350 168 302 140 b 281 153 281 144 281 148 b 183 251 281 207 236 251 b 85 153 128 251 85 207 b 125 81 85 124 102 98 b 164 60 137 71 150 65 b 203 55 176 58 189 55 b 311 86 240 55 278 69 b 315 88 312 88 314 88 b 325 69 323 88 325 76 l 268 -167 b 194 -217 261 -197 216 -216 b 196 -203 196 -212 196 -207 b 98 -105 196 -148 153 -105 b 0 -203 45 -105 0 -148 b 115 -301 0 -262 60 -301 b 228 -269 154 -301 194 -288 b 232 -268 229 -268 230 -268 b 240 -276 236 -268 240 -272 b 138 -688 240 -282 141 -678 b 137 -697 137 -691 137 -694 b 176 -720 137 -708 145 -720 b 232 -690 222 -720 226 -706 b 484 436 236 -672 484 436 b 521 582 484 436 518 564 b 523 588 521 585 523 586 b 508 603 523 600 511 603 z',\n        },\n        rest64th: {\n            x_min: 0,\n            x_max: 423,\n            y_min: -753,\n            y_max: 430,\n            ha: 1183,\n            o: 'm 596 609 b 580 603 589 609 585 606 b 448 507 569 595 497 507 b 449 521 449 511 449 516 b 351 619 449 575 405 619 b 253 521 297 619 253 575 b 372 422 253 461 317 422 b 481 454 410 422 446 438 b 491 456 484 455 488 456 b 504 441 498 456 504 451 b 501 426 504 436 503 432 b 445 202 500 422 451 217 b 359 144 435 174 383 144 l 359 158 b 261 256 359 212 315 256 b 163 158 207 256 163 212 b 243 65 163 112 202 78 b 279 60 255 62 266 60 b 397 91 320 60 360 73 b 403 92 400 92 402 92 b 412 79 409 92 412 86 b 410 72 412 76 412 75 b 351 -161 408 59 356 -150 b 281 -212 340 -199 301 -212 l 281 -197 b 183 -99 281 -144 238 -99 b 85 -197 130 -99 85 -144 b 125 -271 85 -228 102 -253 b 166 -291 138 -279 151 -287 b 204 -297 177 -294 192 -297 b 262 -287 225 -297 245 -292 b 305 -265 282 -279 287 -274 b 310 -264 307 -264 308 -264 b 318 -284 317 -264 318 -275 b 317 -295 318 -288 317 -294 b 259 -524 315 -302 265 -508 b 194 -567 251 -554 213 -567 b 196 -554 196 -563 196 -559 b 98 -456 196 -500 153 -456 b 0 -554 45 -456 0 -500 b 40 -626 0 -583 17 -609 b 118 -652 60 -644 92 -652 b 210 -629 145 -652 186 -642 b 216 -628 213 -628 215 -628 b 228 -647 226 -628 228 -639 l 226 -651 b 226 -652 226 -651 226 -652 l 122 -1054 b 121 -1064 121 -1058 121 -1061 b 167 -1084 121 -1077 134 -1084 b 215 -1060 202 -1084 209 -1076 b 402 -278 217 -1047 229 -1021 b 436 -135 403 -278 431 -161 l 570 441 b 609 588 570 441 605 569 b 596 609 609 603 602 608 z',\n        },\n        rest128th: {\n            x_min: 0,\n            x_max: 485,\n            y_min: -750,\n            y_max: 689,\n            ha: 1439,\n            o: 'm 537 894 b 439 992 537 949 494 992 b 341 894 386 992 341 949 b 382 822 341 865 359 840 b 459 796 402 805 433 796 b 518 806 480 796 501 801 l 520 808 b 569 828 539 814 552 819 b 580 831 572 829 577 831 b 598 812 589 831 598 825 b 596 801 598 809 598 805 b 540 575 590 773 546 595 b 448 510 534 553 475 510 l 448 524 b 350 622 448 577 405 622 b 252 524 297 622 252 577 b 292 451 252 494 269 468 b 369 426 318 433 337 426 b 429 435 389 426 412 429 b 494 464 449 442 475 455 b 498 465 495 465 497 465 b 505 446 504 465 505 456 b 503 426 505 439 504 432 l 446 202 b 366 144 439 173 389 144 l 366 158 b 268 256 366 212 323 256 b 170 158 215 256 170 212 b 289 59 170 98 235 59 b 347 69 310 59 330 63 b 397 91 367 76 379 82 b 406 94 400 92 403 94 b 415 79 412 94 415 88 b 412 63 415 75 413 69 b 357 -157 408 42 364 -134 b 281 -212 346 -196 302 -212 b 282 -197 281 -207 282 -203 b 184 -99 282 -144 238 -99 b 86 -197 130 -99 86 -144 b 204 -297 86 -258 150 -297 b 262 -287 225 -297 245 -292 b 312 -265 282 -279 294 -274 b 318 -264 314 -264 317 -264 b 327 -275 324 -264 327 -269 b 266 -517 324 -287 278 -490 b 200 -569 248 -566 220 -567 l 196 -554 b 98 -456 196 -500 153 -456 b 0 -554 45 -456 0 -500 b 118 -652 0 -615 63 -652 b 177 -642 138 -652 160 -648 l 179 -641 b 229 -621 197 -635 210 -629 l 230 -619 b 239 -626 236 -619 239 -622 b 238 -632 239 -628 239 -631 b 131 -1057 235 -642 134 -1050 b 173 -1080 131 -1071 140 -1080 b 230 -1057 219 -1080 225 -1074 l 658 815 b 697 960 658 815 694 942 b 698 966 697 963 698 965 b 684 982 698 975 687 981 b 668 976 677 982 672 979 b 537 880 658 969 586 881 z',\n        },\n        dynamicPiano: {\n            x_min: -89,\n            x_max: 366,\n            y_min: -142,\n            y_max: 274,\n            ha: 416,\n            o: 'm 395 395 b 292 357 350 395 318 380 b 262 328 272 340 268 328 b 246 363 255 328 259 338 b 177 393 236 380 215 393 b 1 251 92 393 46 333 b -9 223 -6 238 -9 230 b 7 207 -9 213 -1 207 b 30 229 17 207 23 216 b 127 338 72 301 101 338 b 143 321 138 338 143 331 b 134 285 143 310 138 295 l -43 -154 b -65 -168 -48 -166 -50 -168 l -109 -168 b -128 -187 -122 -168 -128 -174 b -111 -204 -128 -199 -122 -204 l 167 -204 b 186 -186 180 -204 186 -199 b 168 -168 186 -174 180 -168 l 111 -168 b 98 -164 102 -168 98 -168 b 101 -154 98 -163 99 -158 l 166 7 b 179 24 168 14 171 24 b 213 -1 186 24 190 10 b 276 -14 233 -12 252 -14 b 527 266 415 -14 527 130 b 395 395 527 350 475 395 z m 356 341 b 389 288 380 341 389 320 b 243 35 389 217 312 35 b 207 81 219 35 207 50 b 235 180 207 111 219 140 l 264 251 b 356 341 284 300 321 341 z',\n        },\n        dynamicMezzo: {\n            x_min: -20,\n            x_max: 446,\n            y_min: -10,\n            y_max: 274,\n            ha: 284,\n            o: 'm 528 395 b 431 350 487 395 454 374 b 409 330 416 336 415 330 b 397 360 402 330 406 341 b 334 395 389 379 370 395 b 236 350 292 395 259 374 b 215 330 222 336 220 330 b 203 360 207 330 212 340 b 147 393 194 379 174 393 b -19 251 71 393 26 331 b -29 223 -26 238 -29 230 b -13 207 -29 213 -22 207 b 9 226 -3 207 1 215 b 107 338 52 300 81 338 b 122 321 118 338 122 331 b 114 285 122 310 118 295 l 9 24 b 4 9 6 17 4 13 b 20 0 4 3 9 0 l 91 0 b 114 17 104 0 108 3 l 207 251 b 287 323 225 292 255 323 b 308 302 304 323 308 314 b 294 249 308 285 302 269 b 203 24 294 248 292 248 b 199 9 200 17 199 13 b 215 0 199 3 203 0 l 285 0 b 308 17 298 0 302 3 l 402 251 b 481 323 419 292 449 323 b 503 302 498 323 503 314 b 413 43 503 252 413 104 b 478 -14 413 6 436 -14 b 629 102 533 -14 583 26 b 642 132 638 117 642 125 b 629 145 642 141 636 145 b 608 127 619 145 615 138 b 534 49 580 84 553 49 b 523 62 526 49 523 53 b 606 317 523 112 606 238 b 528 395 606 353 588 395 z',\n        },\n        dynamicForte: {\n            x_min: -141,\n            x_max: 364,\n            y_min: -152,\n            y_max: 444,\n            ha: 596,\n            o: 'm 23 380 b 0 357 7 380 0 373 b 22 336 0 343 7 336 l 105 336 b 117 330 114 336 117 336 b 114 315 117 327 115 323 l 23 0 b -101 -187 -17 -141 -43 -187 b -127 -174 -120 -187 -127 -181 b -92 -156 -127 -163 -114 -170 b -63 -102 -75 -144 -63 -125 b -128 -43 -63 -65 -89 -43 b -203 -122 -171 -43 -203 -78 b -95 -219 -203 -186 -156 -219 b 161 17 14 -219 82 -145 b 269 317 203 105 235 194 l 271 318 b 289 336 271 323 282 336 l 383 336 b 406 359 399 336 406 343 b 384 380 406 373 399 380 l 298 380 b 284 387 288 380 284 380 b 287 405 284 392 285 396 b 419 606 315 530 347 606 b 442 595 431 606 442 603 b 419 580 442 586 435 588 b 389 526 400 572 389 552 b 454 465 389 485 418 465 b 524 543 491 465 524 490 b 400 639 524 596 491 639 b 135 402 261 639 183 540 b 107 380 128 380 127 380 z',\n        },\n        dynamicRinforzando: {\n            x_min: -20,\n            x_max: 277,\n            y_min: 0,\n            y_max: 274,\n            ha: 274,\n            o: 'm 324 395 b 235 350 287 395 256 374 b 215 330 222 336 220 330 b 203 360 207 330 213 337 b 145 393 194 379 174 393 b -19 251 75 393 27 337 b -29 223 -26 238 -29 230 b -13 207 -29 213 -22 207 b 9 226 -3 207 3 215 b 107 338 52 301 81 338 b 122 321 118 338 122 331 b 114 285 122 310 118 295 l 9 24 b 4 9 6 17 4 13 b 20 0 4 3 9 0 l 91 0 b 114 17 104 0 108 3 l 207 251 b 304 351 226 298 272 351 b 318 343 312 351 318 348 b 287 285 318 330 287 325 b 338 239 287 256 308 239 b 399 318 373 239 399 268 b 324 395 399 360 377 395 z',\n        },\n        dynamicSforzando: {\n            x_min: 0,\n            x_max: 229,\n            y_min: -10,\n            y_max: 273,\n            ha: 283,\n            o: 'm 212 393 b 68 274 127 393 68 350 b 145 161 68 223 95 196 b 200 85 187 132 200 114 b 127 20 200 53 173 20 b 66 42 91 20 66 32 b 91 56 66 49 75 46 b 111 98 104 65 111 79 b 59 145 111 127 86 145 b 0 78 24 145 0 117 b 125 -14 0 30 49 -14 b 291 120 219 -14 291 36 b 220 232 291 160 276 190 b 151 314 168 271 151 287 b 213 361 151 337 168 361 b 258 346 238 361 258 356 b 240 333 258 340 251 340 b 226 298 232 325 226 314 b 276 252 226 269 248 252 b 330 307 311 252 330 279 b 212 393 330 360 285 393 z',\n        },\n        dynamicZ: {\n            x_min: -30,\n            x_max: 244,\n            y_min: -10,\n            y_max: 268,\n            ha: 278,\n            o: 'm 333 386 b 298 377 321 386 314 382 b 239 370 282 373 259 370 b 94 383 153 370 111 383 b 68 364 79 383 72 377 l 33 264 b 29 242 30 255 29 248 b 45 228 29 232 36 228 b 66 249 55 228 60 236 l 81 279 b 96 297 85 288 88 297 b 168 292 102 297 127 292 b 223 302 194 292 215 302 b 196 269 229 302 197 271 l -26 45 b -43 16 -37 33 -43 27 b -24 -1 -43 6 -36 -1 b 4 16 -12 -1 -3 10 b 39 30 16 24 27 30 b 179 -14 79 30 108 -14 b 297 102 259 -14 297 43 b 245 166 297 147 271 166 b 197 115 219 166 197 145 b 236 72 197 88 216 72 b 259 79 251 72 255 79 b 264 75 262 79 264 78 b 258 60 264 72 261 66 b 229 45 252 50 242 45 b 117 95 186 45 173 95 b 85 86 98 95 89 86 b 102 111 85 86 95 104 l 333 338 b 351 370 344 350 351 359 b 333 386 351 380 343 386 z',\n        },\n        ornamentTrill: {\n            x_min: 0,\n            x_max: 521,\n            y_min: -10,\n            y_max: 390,\n            ha: 400,\n            o: 'm 383 562 b 364 557 377 562 369 559 l 294 534 b 269 511 281 530 275 526 l 217 384 b 206 367 212 370 210 367 b 179 380 200 367 192 374 b 118 393 158 389 140 393 b 0 292 50 393 0 353 b 95 210 0 248 30 210 b 140 213 112 210 131 213 b 144 209 143 213 144 212 b 140 194 144 206 143 202 l 124 156 b 96 58 108 117 96 88 b 179 -14 96 17 124 -14 b 325 153 253 -14 325 46 b 307 251 325 187 320 219 b 302 265 304 258 302 261 b 334 294 302 274 311 281 l 343 298 b 455 348 393 328 428 348 b 474 327 468 348 474 344 b 465 285 474 312 469 295 l 360 24 b 356 9 357 17 356 13 b 372 0 356 3 360 0 l 442 0 b 465 17 455 0 459 3 l 559 251 b 655 351 577 298 624 351 b 670 343 664 351 670 348 b 638 285 670 330 638 325 b 690 239 638 256 660 239 b 750 318 724 239 750 268 b 675 395 750 360 729 395 b 586 350 638 395 608 374 b 566 330 573 336 572 330 b 553 361 559 330 564 340 b 490 393 543 380 521 393 b 347 348 432 393 377 364 b 312 333 328 338 320 333 b 308 337 310 333 308 334 b 315 359 308 343 312 351 l 387 537 b 392 553 390 544 392 549 b 383 562 392 559 389 562 z m 118 360 b 192 325 134 360 192 347 b 186 307 192 321 189 314 l 180 292 b 148 265 173 274 167 269 b 98 258 130 261 112 258 b 39 301 50 258 39 281 b 118 360 39 327 60 360 z m 272 240 b 292 151 285 240 292 164 b 212 30 292 88 253 30 b 196 48 200 30 196 37 b 207 92 196 59 202 78 b 264 230 207 94 209 94 b 272 240 266 238 268 240 z',\n        },\n        ornamentTurn: {\n            x_min: 0,\n            x_max: 460,\n            y_min: 0,\n            y_max: 218,\n            ha: 218,\n            o: 'm 534 314 b 454 251 490 314 454 294 b 505 199 454 219 475 199 b 579 232 547 199 549 232 b 626 164 603 232 626 202 b 533 72 626 102 583 72 b 377 180 487 72 439 111 b 150 312 307 258 243 312 b 0 148 55 312 0 240 b 128 0 0 45 66 0 b 209 63 173 0 209 20 b 157 115 209 95 187 115 b 84 82 115 115 114 82 b 36 150 59 82 36 112 b 130 242 36 212 79 242 b 285 134 176 242 223 203 b 513 1 356 56 419 1 b 662 166 608 1 662 73 b 534 314 662 269 596 314 z',\n        },\n        ornamentTurnSlash: {\n            x_min: 0,\n            x_max: 460,\n            y_min: -90,\n            y_max: 306,\n            ha: 396,\n            o: 'm 333 441 b 310 418 315 441 310 433 l 310 274 b 302 252 310 258 308 252 b 261 278 294 252 287 262 b 150 311 228 298 192 311 b 0 147 55 311 0 239 b 128 -1 0 43 66 -1 b 209 62 173 -1 209 19 b 157 114 209 94 187 114 b 84 81 115 114 114 81 b 36 148 59 81 36 111 b 130 240 36 210 79 240 b 285 128 176 240 222 197 b 307 79 304 108 307 105 l 307 -107 b 330 -130 307 -122 312 -130 b 353 -107 347 -130 353 -122 l 353 37 b 360 59 353 53 353 59 b 402 33 369 59 376 49 b 513 0 435 13 471 0 b 662 164 608 0 662 72 b 534 312 662 268 596 312 b 454 249 490 312 454 292 b 505 197 454 217 475 197 b 579 230 547 197 549 230 b 626 163 603 230 626 200 b 533 71 626 101 583 71 b 377 183 487 71 441 114 b 356 232 359 203 356 206 l 356 418 b 333 441 356 433 350 441 z',\n        },\n        ornamentMordent: {\n            x_min: 1,\n            x_max: 729,\n            y_min: -73,\n            y_max: 319,\n            ha: 392,\n            o: 'm 546 265 l 546 459 l 501 459 l 501 216 l 459 167 b 439 167 454 160 445 160 b 302 327 387 228 310 317 b 258 353 291 338 282 351 b 226 340 245 353 238 348 l 20 107 b 1 73 12 98 1 84 b 30 59 1 65 9 59 b 88 94 53 59 73 79 b 144 143 107 109 124 127 b 176 161 158 154 168 161 b 197 144 183 161 189 156 l 323 10 b 351 0 328 3 340 0 b 377 9 361 0 372 3 b 498 114 392 17 475 94 l 498 -105 l 544 -105 l 544 153 b 562 160 550 157 556 160 b 585 144 569 160 576 156 b 710 10 590 135 697 24 b 737 0 716 3 727 0 b 765 9 749 0 759 3 b 1030 295 776 17 1011 274 l 1032 300 b 1050 328 1041 308 1050 318 b 1012 353 1050 343 1024 353 b 986 343 1002 353 994 348 b 854 190 971 330 871 206 b 828 176 842 180 835 176 b 802 190 818 176 809 183 b 681 333 791 202 696 320 b 645 353 668 344 657 353 b 613 340 634 353 626 350 b 580 304 600 330 590 315 z',\n        },\n        ornamentShortTrill: {\n            x_min: 0,\n            x_max: 725,\n            y_min: 0,\n            y_max: 245,\n            ha: 245,\n            o: 'm 429 167 l 301 325 b 256 353 291 338 282 350 b 225 340 246 353 238 350 b 16 105 158 268 88 186 b 0 72 9 96 0 86 b 29 58 0 63 7 58 b 71 76 42 58 55 62 l 158 154 b 174 160 163 158 168 160 b 197 143 181 160 187 154 b 321 10 203 135 310 24 b 350 0 327 3 338 0 b 377 7 361 0 372 3 l 533 148 b 554 160 543 158 550 160 b 577 143 562 160 566 156 b 703 10 585 135 690 24 b 732 0 708 3 720 0 b 759 7 743 0 753 3 b 1024 294 769 16 1005 272 b 1044 327 1032 305 1044 321 b 1005 353 1044 341 1018 353 b 979 343 996 353 988 348 b 848 189 963 330 864 204 b 821 174 837 179 828 174 b 796 189 811 174 804 181 b 674 331 783 202 688 318 b 641 351 662 343 651 351 b 606 340 628 351 619 350 b 573 304 593 328 583 315 b 444 167 533 259 491 213 b 429 167 439 161 433 161 z',\n        },\n        ornamentTremblement: {\n            x_min: 1,\n            x_max: 985,\n            y_min: 0,\n            y_max: 244,\n            ha: 244,\n            o: 'm 678 325 b 634 351 667 338 657 350 b 602 338 621 351 613 348 l 448 167 b 439 167 446 164 441 164 l 302 325 b 258 351 291 338 281 350 b 228 338 245 351 238 348 b 193 304 215 328 204 315 l 19 107 b 1 72 13 96 1 76 b 30 58 1 63 9 58 b 89 92 52 58 73 78 l 144 141 b 148 144 145 143 147 143 b 176 160 160 153 170 160 b 199 143 183 160 189 154 b 324 10 204 134 311 23 b 351 0 330 3 340 0 b 379 7 363 0 373 3 l 530 148 b 552 160 536 154 546 160 b 575 143 559 160 564 154 b 698 10 580 134 687 23 b 727 0 704 3 716 0 b 755 7 739 0 749 3 l 907 147 b 930 160 922 158 923 160 b 952 143 937 160 943 154 l 1077 10 b 1107 0 1084 3 1096 0 b 1133 7 1117 0 1128 3 b 1398 294 1143 16 1380 272 b 1418 327 1407 305 1418 321 b 1381 351 1418 343 1394 351 b 1354 341 1371 351 1362 348 b 1223 189 1338 328 1238 204 b 1195 174 1211 179 1202 174 b 1171 189 1185 174 1178 181 b 1048 331 1158 200 1063 318 b 1012 351 1035 343 1024 351 b 981 338 1002 351 994 350 b 948 304 968 328 958 315 b 827 166 907 258 865 212 b 815 166 824 163 818 163 b 678 325 760 226 732 264 z',\n        },\n        ornamentPrecompAppoggTrill: {\n            x_min: 0,\n            x_max: 1119,\n            y_min: 0,\n            y_max: 481,\n            ha: 481,\n            o: 'm 1015 163 b 873 328 963 223 880 318 b 828 354 860 344 847 353 b 796 341 816 354 809 351 b 763 305 783 331 773 317 b 642 168 721 261 681 215 b 636 163 641 167 639 164 b 494 328 585 223 501 318 b 449 354 481 344 468 353 b 418 341 438 354 431 351 b 384 305 405 331 395 317 b 264 168 343 261 302 215 l 242 144 b 144 88 232 124 171 88 b 79 197 81 88 79 189 l 79 648 b 60 693 79 683 71 693 b 52 691 58 693 55 693 b 0 616 3 672 0 625 l 0 207 b 121 0 0 40 68 0 b 249 68 168 0 232 53 b 279 94 262 75 271 86 b 336 144 298 111 315 128 b 367 163 350 156 360 163 b 389 145 374 163 380 157 b 514 12 395 137 501 26 b 543 1 520 4 531 1 b 569 9 553 1 563 4 b 636 73 576 14 605 43 l 658 94 b 714 144 677 111 694 128 b 746 163 729 156 739 163 b 768 145 753 163 759 157 b 893 12 773 137 880 26 b 922 1 899 4 910 1 b 948 9 932 1 942 4 l 1012 71 b 1037 94 1022 78 1030 86 b 1092 144 1054 111 1073 128 b 1123 161 1106 156 1115 161 b 1146 145 1130 161 1136 157 b 1270 12 1152 137 1259 26 b 1299 1 1276 4 1287 1 b 1326 9 1310 1 1320 4 b 1591 297 1336 19 1572 275 b 1611 328 1600 307 1611 320 b 1574 354 1611 343 1585 354 b 1548 344 1565 354 1555 350 b 1416 192 1532 331 1431 206 b 1388 177 1404 181 1395 177 b 1365 190 1380 177 1371 184 b 1243 333 1352 203 1256 321 b 1205 354 1228 346 1217 354 b 1174 341 1195 354 1187 351 b 1140 305 1161 330 1152 317 z',\n        },\n        ornamentPrecompSlideTrillDAnglebert: {\n            x_min: 2,\n            x_max: 1150,\n            y_min: -367,\n            y_max: 245,\n            ha: 612,\n            o: 'm 1058 160 b 916 327 1007 220 923 317 b 871 353 903 343 890 351 b 840 340 860 353 852 350 b 806 304 827 330 816 315 b 685 167 765 259 724 213 l 680 160 l 615 235 b 419 344 582 275 523 344 b 3 -144 258 344 3 26 b 4 -168 3 -153 3 -160 b 246 -482 24 -315 99 -422 b 458 -528 340 -521 410 -528 b 514 -526 485 -528 504 -526 b 552 -508 531 -526 552 -517 b 514 -497 552 -503 541 -498 l 503 -497 b 194 -390 432 -494 298 -488 b 69 -151 194 -390 69 -279 b 184 96 69 -60 128 27 b 328 183 202 118 258 183 b 477 96 413 183 454 118 b 559 10 510 62 552 19 b 588 0 566 3 576 0 b 613 7 598 0 609 3 b 723 112 622 14 681 73 b 789 161 733 122 776 161 b 811 144 796 161 802 156 b 936 10 816 135 923 24 b 965 0 942 3 953 0 b 991 7 975 0 985 3 b 1051 66 996 12 1022 37 b 1081 92 1063 73 1073 84 b 1136 143 1099 109 1117 127 b 1168 160 1151 154 1159 160 b 1191 144 1175 160 1181 156 b 1315 10 1197 135 1303 24 b 1344 0 1320 3 1332 0 b 1371 7 1355 0 1365 3 b 1636 295 1381 17 1617 274 b 1656 327 1644 305 1656 318 b 1619 353 1656 341 1630 353 b 1593 343 1610 353 1600 348 b 1460 190 1577 330 1476 204 b 1433 176 1449 180 1440 176 b 1410 189 1424 176 1416 183 b 1287 331 1397 202 1300 320 b 1250 353 1273 344 1261 353 b 1218 340 1240 353 1231 350 b 1185 304 1205 328 1197 315 z',\n        },\n        ornamentPrecompSlideTrillBach: {\n            x_min: 0,\n            x_max: 1048,\n            y_min: -367,\n            y_max: 331,\n            ha: 698,\n            o: 'm 1038 477 l 979 477 l 979 238 l 912 160 b 769 327 858 220 775 317 b 724 353 756 343 743 351 b 693 340 713 353 706 350 b 660 304 680 330 670 315 b 539 167 618 259 577 213 b 533 161 536 166 534 163 b 390 327 480 220 396 317 b 346 353 377 343 364 351 l 340 353 b 308 340 330 353 321 350 b 275 304 295 330 285 315 b 117 122 220 243 168 186 b 0 -144 68 62 0 -48 b 1 -168 0 -153 0 -160 b 243 -482 22 -315 96 -422 b 455 -528 337 -521 408 -528 b 511 -526 482 -528 501 -526 b 549 -508 528 -526 549 -517 b 511 -497 549 -503 539 -498 l 500 -497 b 192 -390 429 -494 295 -488 b 68 -177 192 -390 84 -298 b 66 -151 66 -168 66 -160 b 189 105 66 -58 127 35 b 232 143 203 118 216 131 b 264 161 246 154 256 161 b 285 144 271 161 276 156 b 410 10 291 135 397 24 b 439 0 416 3 428 0 b 465 7 449 0 459 3 l 531 72 b 554 92 540 78 547 86 b 611 143 573 109 590 127 b 642 161 625 154 635 161 b 664 144 649 161 655 156 b 789 10 670 135 776 24 b 818 0 795 3 806 0 b 844 7 828 0 838 3 b 904 66 850 12 876 37 b 935 92 916 73 924 84 b 979 134 949 107 963 121 l 979 -88 l 1037 -88 l 1037 151 l 1044 144 b 1168 10 1050 135 1156 24 b 1197 0 1174 3 1185 0 b 1224 7 1208 0 1218 3 b 1489 295 1234 17 1470 274 b 1509 327 1498 305 1509 318 b 1472 353 1509 341 1483 353 b 1446 343 1463 353 1453 348 b 1313 190 1430 330 1329 204 b 1286 176 1302 180 1293 176 b 1263 189 1277 176 1269 183 b 1140 331 1250 202 1153 320 b 1103 353 1126 344 1115 353 b 1071 340 1093 353 1084 350 b 1038 304 1058 328 1050 315 z',\n        },\n        ornamentPrecompTrillSuffixDandrieu: {\n            x_min: 0,\n            x_max: 949,\n            y_min: 0,\n            y_max: 381,\n            ha: 381,\n            o: 'm 1367 314 b 1250 521 1367 419 1318 482 b 1107 549 1211 537 1145 549 b 1083 546 1096 549 1087 549 b 1066 528 1071 540 1066 534 b 1079 520 1066 524 1070 520 b 1323 351 1187 517 1323 487 b 1201 171 1323 269 1260 219 b 1194 166 1201 171 1198 168 b 1056 327 1142 226 1063 317 b 1011 353 1043 343 1030 351 b 979 340 999 353 992 350 b 946 304 966 330 956 315 b 825 167 904 259 864 213 l 821 161 b 678 327 768 222 685 317 b 634 353 665 343 652 351 b 602 340 622 353 615 350 b 569 304 589 330 579 315 b 448 167 527 259 487 213 l 444 161 b 301 327 390 222 308 317 b 256 353 288 343 275 351 b 225 340 245 353 238 350 b 192 304 212 330 202 315 b 71 167 150 259 109 213 b 17 105 52 147 36 127 b 0 73 10 98 0 84 b 29 58 0 65 7 58 b 86 92 56 59 72 79 b 143 143 105 109 122 127 b 174 161 157 154 167 161 b 196 144 181 161 187 156 b 321 10 202 135 308 24 b 350 0 327 3 338 0 b 376 7 360 0 370 3 b 485 112 384 14 444 73 b 552 161 495 122 539 161 b 573 144 559 161 564 156 b 698 10 579 135 685 24 b 727 0 704 3 716 0 b 753 7 737 0 747 3 b 863 112 762 14 821 73 b 929 161 873 122 916 161 b 950 144 936 161 942 156 b 1076 10 956 135 1063 24 b 1104 0 1081 3 1093 0 b 1130 7 1115 0 1125 3 b 1236 108 1139 14 1195 69 b 1367 314 1297 160 1367 233 z',\n        },\n        ornamentPrecompDoubleCadenceUpperPrefix: {\n            x_min: 0,\n            x_max: 1278,\n            y_min: 0,\n            y_max: 247,\n            ha: 247,\n            o: 'm 1801 356 b 1776 346 1793 356 1783 351 b 1642 192 1760 333 1659 206 b 1614 177 1630 181 1621 177 b 1591 190 1606 177 1597 184 b 1469 334 1578 203 1482 323 b 1430 356 1453 347 1441 356 b 1398 343 1420 356 1411 353 b 1365 307 1385 331 1377 318 l 1240 164 b 1097 330 1187 226 1104 320 b 1053 356 1084 346 1071 354 b 1021 343 1041 356 1034 353 b 988 307 1008 333 998 318 b 865 168 946 262 904 216 l 861 163 b 717 330 808 223 724 320 b 672 356 704 346 691 354 b 641 343 661 356 654 353 b 608 307 628 333 618 318 b 485 168 566 262 524 216 l 455 134 b 284 46 409 88 351 46 b 16 285 148 46 32 265 b 3 295 9 292 4 295 b 0 291 1 295 0 292 b 1 285 0 288 1 285 b 308 0 42 190 157 0 b 530 120 415 1 482 63 b 559 144 539 128 549 137 b 590 163 573 156 583 163 b 612 145 598 163 603 157 b 739 10 618 137 724 24 b 768 0 744 3 756 0 b 793 7 778 0 788 3 b 903 114 802 14 861 75 l 939 144 b 971 163 953 156 963 163 b 992 145 978 163 984 157 b 1119 10 998 137 1106 24 b 1148 0 1125 3 1136 0 b 1174 7 1158 0 1168 3 b 1284 114 1182 14 1241 75 b 1316 144 1282 115 1312 141 b 1348 161 1331 156 1339 161 b 1371 145 1355 161 1361 157 b 1496 10 1377 137 1485 24 b 1525 0 1502 3 1513 0 b 1552 7 1536 0 1547 3 b 1819 298 1562 17 1800 276 b 1840 330 1829 308 1840 320 b 1832 344 1840 334 1837 340 b 1801 356 1820 351 1810 356 z',\n        },\n        ornamentPrecompDoubleCadenceUpperPrefixTurn: {\n            x_min: 0,\n            x_max: 1277,\n            y_min: -62,\n            y_max: 333,\n            ha: 395,\n            o: 'm 1273 202 l 1273 480 l 1230 480 l 1230 174 l 1097 328 b 1053 354 1084 344 1071 353 b 1021 341 1041 354 1034 351 b 988 305 1008 331 998 317 b 865 167 945 261 904 215 l 861 161 b 717 328 808 222 724 318 b 672 354 704 344 691 353 b 641 341 661 354 654 351 b 608 305 628 331 618 317 b 485 167 564 261 524 215 b 455 132 474 156 465 144 b 284 45 410 88 350 45 b 14 284 148 45 30 264 b 3 294 9 291 4 294 b 0 289 1 294 0 291 b 1 284 0 287 1 284 b 308 -1 42 189 157 -1 b 530 118 415 0 481 62 b 557 143 539 127 547 135 b 590 161 572 154 582 161 b 612 144 598 161 603 156 b 737 9 618 135 724 24 b 768 -1 743 1 755 -1 b 793 6 778 -1 788 1 b 903 112 802 13 861 73 l 937 143 b 971 161 953 154 963 161 b 992 144 978 161 984 156 b 1117 9 998 135 1104 24 b 1148 -1 1123 1 1136 -1 b 1174 6 1158 -1 1168 1 l 1230 60 l 1230 -89 l 1273 -89 l 1273 102 l 1283 112 b 1348 160 1295 125 1332 160 b 1371 144 1355 160 1361 156 b 1496 9 1377 135 1483 24 b 1525 -1 1502 1 1513 -1 b 1552 6 1536 -1 1547 1 b 1819 297 1562 16 1800 275 b 1839 328 1827 307 1839 320 b 1801 354 1839 343 1813 354 b 1776 344 1793 354 1783 350 b 1642 190 1760 331 1657 206 b 1614 176 1630 180 1621 176 b 1591 189 1606 176 1597 183 b 1467 333 1578 203 1480 321 b 1430 354 1453 346 1441 354 b 1398 341 1420 354 1411 351 b 1365 305 1385 330 1377 317 z',\n        },\n        ornamentPrecompTrillLowerSuffix: {\n            x_min: 0,\n            x_max: 859,\n            y_min: -222,\n            y_max: 246,\n            ha: 468,\n            o: 'm 1164 217 b 1031 351 1138 259 1063 351 b 1011 337 1020 351 1024 347 b 828 167 952 291 886 217 l 824 164 b 683 328 772 225 690 318 b 638 354 670 344 657 353 b 606 341 626 354 619 351 b 573 305 593 331 583 317 b 451 167 530 261 490 215 l 446 161 b 302 328 393 222 310 318 b 258 354 289 344 276 353 b 226 341 246 354 239 351 b 193 305 213 331 203 317 b 71 167 150 261 109 215 b 17 105 52 147 36 127 b 0 73 10 98 0 84 b 29 58 0 65 7 58 b 86 92 56 59 72 79 b 143 143 105 109 122 127 b 176 161 157 154 168 161 b 197 144 183 161 189 156 b 323 9 203 135 310 23 b 353 -1 328 1 340 -1 b 379 6 363 -1 373 1 b 488 112 387 13 446 73 l 523 143 b 556 161 539 154 549 161 b 577 144 563 161 569 156 b 703 9 583 135 690 23 b 733 -1 708 1 721 -1 b 759 6 743 -1 753 1 b 868 112 768 13 827 73 b 955 183 878 122 943 183 b 1081 107 965 183 1031 153 b 1156 -89 1128 63 1156 6 l 1156 -102 b 948 -297 1156 -204 1048 -297 b 806 -271 904 -297 850 -282 l 792 -266 b 801 -288 792 -268 795 -282 b 948 -320 809 -297 880 -320 b 1237 -50 1092 -320 1237 -199 b 1164 217 1237 75 1218 122 z',\n        },\n        brassScoop: {\n            x_min: 1,\n            x_max: 320,\n            y_min: -373,\n            y_max: 13,\n            ha: 386,\n            o: 'm 35 -537 b 461 -12 194 -518 461 -289 b 438 19 461 13 451 19 b 410 -9 425 19 413 9 b 35 -425 357 -366 92 -403 b 1 -482 13 -433 1 -438 l 1 -505 b 26 -537 1 -526 3 -537 z',\n        },\n        brassDoitMedium: {\n            x_min: 0,\n            x_max: 489,\n            y_min: -40,\n            y_max: 346,\n            ha: 386,\n            o: 'm 33 -58 b 704 468 255 -58 683 186 b 681 498 704 494 693 498 b 654 471 668 498 658 488 b 33 55 550 118 91 76 b 0 -3 12 46 0 42 l 0 -26 b 24 -58 0 -46 1 -58 z',\n        },\n        brassFallLipShort: {\n            x_min: 1,\n            x_max: 293,\n            y_min: -345,\n            y_max: 42,\n            ha: 387,\n            o: 'm 22 60 b 1 35 4 60 1 52 l 1 6 b 26 -50 3 -40 10 -43 b 32 -52 27 -50 30 -50 b 376 -469 85 -73 327 -111 b 400 -497 379 -487 387 -497 b 422 -467 412 -497 422 -491 b 32 60 422 -187 177 40 z',\n        },\n        brassLiftMedium: {\n            x_min: 0,\n            x_max: 811,\n            y_min: 0,\n            y_max: 852,\n            ha: 852,\n            o: 'm 1138 1220 b 1135 1225 1135 1223 1135 1224 b 1129 1227 1133 1227 1130 1227 b 1117 1207 1122 1227 1117 1212 l 1117 1201 b 1109 1164 1117 1187 1117 1172 b 1100 1156 1107 1161 1104 1158 b 959 1104 1058 1128 995 1140 b 929 1032 936 1081 929 1056 b 932 1007 929 1024 930 1015 b 923 976 932 995 930 985 l 914 971 b 773 919 873 942 809 955 b 743 847 750 896 743 870 b 746 821 743 838 744 829 b 737 791 746 809 744 799 l 729 783 b 588 733 687 756 624 769 b 557 661 564 710 557 684 b 560 635 557 652 559 644 b 552 605 560 624 559 612 l 543 598 b 402 547 501 570 438 583 b 372 475 379 524 372 498 b 374 449 372 467 373 458 b 366 419 374 438 373 426 l 357 412 b 216 361 315 384 252 397 b 186 289 193 338 186 312 b 189 264 186 281 187 272 b 180 233 189 252 187 240 b 171 226 177 232 174 229 b 30 176 130 199 66 212 b 0 104 7 153 0 128 b 33 0 0 88 14 0 b 49 17 40 0 49 10 b 71 63 52 35 56 49 b 212 115 102 95 154 59 b 239 186 230 134 239 160 b 236 210 239 194 238 202 b 256 249 239 225 243 236 b 397 301 288 281 340 245 b 425 372 416 320 425 346 b 422 396 425 380 423 387 b 442 435 425 410 429 422 b 583 487 474 467 526 431 b 611 557 602 505 611 531 b 608 582 611 566 609 573 b 628 621 611 596 615 608 b 769 672 660 652 711 618 b 796 743 788 691 796 717 b 793 768 796 752 795 759 b 814 806 796 782 801 793 b 955 858 845 838 897 804 b 982 929 973 877 982 903 b 979 953 982 937 981 945 b 999 992 982 968 986 979 b 1140 1045 1031 1024 1083 989 b 1168 1116 1161 1066 1168 1090 b 1138 1220 1168 1162 1145 1207 z',\n        },\n        brassFallRoughMedium: {\n            x_min: 0,\n            x_max: 811,\n            y_min: 0,\n            y_max: 852,\n            ha: 852,\n            o: 'm 30 1220 b 0 1116 23 1207 0 1162 b 27 1045 0 1090 7 1066 b 168 992 85 989 137 1024 b 189 953 181 979 186 968 b 186 929 187 945 186 937 b 213 858 186 903 194 877 b 354 806 271 804 323 838 b 374 768 367 793 372 782 b 372 743 373 759 372 752 b 399 672 372 717 380 691 b 540 621 456 618 508 652 b 560 582 553 608 557 596 b 557 557 559 573 557 566 b 585 487 557 531 566 505 b 726 435 642 431 694 467 b 746 396 739 422 743 410 b 743 372 744 387 743 380 b 770 301 743 346 752 320 b 912 249 828 245 880 281 b 932 210 924 236 929 225 b 929 186 930 202 929 194 b 956 115 929 160 937 134 b 1097 63 1014 59 1066 95 b 1119 17 1112 49 1116 35 b 1135 0 1119 10 1128 0 b 1168 104 1153 0 1168 91 b 1138 176 1168 128 1161 153 b 996 226 1102 212 1038 199 b 988 233 994 229 991 232 b 979 264 981 240 979 252 b 982 289 981 272 982 281 b 952 361 982 312 975 338 b 811 412 916 397 852 384 l 802 419 b 793 449 795 426 793 438 b 796 475 795 458 796 467 b 766 547 796 498 789 524 b 625 598 730 583 667 570 l 616 605 b 608 635 609 612 608 624 b 611 661 609 644 611 652 b 580 733 611 684 603 710 b 439 783 544 769 481 756 l 431 791 b 422 821 423 799 422 809 b 425 847 423 829 425 838 b 395 919 425 870 418 896 b 253 971 359 955 295 942 l 245 976 b 236 1007 238 985 236 995 b 239 1032 238 1015 239 1024 b 209 1104 239 1056 232 1081 b 68 1156 173 1140 109 1128 b 59 1164 63 1158 60 1161 b 50 1201 50 1172 50 1187 l 50 1207 b 39 1227 50 1212 46 1227 b 33 1225 37 1227 35 1227 b 30 1220 33 1224 33 1223 z',\n        },\n        brassBend: {\n            x_min: 0,\n            x_max: 392,\n            y_min: 0,\n            y_max: 282,\n            ha: 282,\n            o: 'm 282 0 b 552 72 369 0 456 23 b 564 92 560 75 564 84 l 564 383 b 541 406 564 395 554 406 b 518 383 528 406 518 395 l 518 107 b 282 46 435 65 357 46 b 46 107 207 46 130 65 l 46 383 b 23 406 46 395 36 406 b 0 383 10 406 0 395 l 0 92 b 13 72 0 84 4 75 b 282 0 108 23 196 0 z',\n        },\n        brassMuteClosed: {\n            x_min: 0,\n            x_max: 272,\n            y_min: 0,\n            y_max: 272,\n            ha: 272,\n            o: 'm 392 219 l 219 219 l 219 392 l 173 392 l 173 219 l 0 219 l 0 173 l 173 173 l 173 0 l 219 0 l 219 173 l 392 173 z',\n        },\n        brassMuteOpen: {\n            x_min: 0,\n            x_max: 304,\n            y_min: 0,\n            y_max: 304,\n            ha: 304,\n            o: 'm 219 0 b 438 219 340 0 438 98 b 219 438 438 340 340 438 b 0 219 98 438 0 340 b 219 0 0 98 98 0 z m 219 392 b 392 219 314 392 392 314 b 219 46 392 124 314 46 b 46 219 124 46 46 124 b 219 392 46 314 124 392 z',\n        },\n        brassFlip: {\n            x_min: 0,\n            x_max: 379,\n            y_min: 0,\n            y_max: 282,\n            ha: 282,\n            o: 'm 523 0 b 541 9 530 0 536 3 b 546 22 544 13 546 17 b 536 42 546 29 541 36 l 36 402 b 23 406 33 405 27 406 b 0 383 12 406 0 395 l 0 23 b 23 0 0 10 10 0 b 46 23 36 0 46 10 l 46 337 l 508 4 b 523 0 513 1 517 0 z',\n        },\n        brassJazzTurn: {\n            x_min: 0,\n            x_max: 620,\n            y_min: 0,\n            y_max: 245,\n            ha: 245,\n            o: 'm 792 190 b 765 176 780 179 772 176 b 740 190 755 176 747 183 b 629 325 727 202 644 312 b 593 347 616 338 605 347 b 562 334 583 346 575 344 b 528 298 549 323 539 310 l 406 176 b 389 168 406 176 399 168 b 374 176 384 168 379 170 b 245 325 360 192 245 325 b 200 353 232 343 219 351 b 168 340 190 353 181 350 l 17 156 b 0 121 10 147 0 132 b 16 107 0 114 4 108 b 84 143 26 107 76 137 b 118 160 92 150 108 160 b 141 143 125 160 131 154 b 265 10 147 135 253 24 b 294 0 271 3 282 0 b 321 7 305 0 315 3 b 498 160 321 7 478 158 b 521 143 505 160 513 154 b 647 10 528 135 635 24 b 675 0 652 3 664 0 b 703 7 687 0 697 3 b 874 186 713 16 855 164 b 893 220 881 196 893 212 b 873 245 890 235 883 243 b 796 194 847 245 815 213 z',\n        },\n        brassSmear: {\n            x_min: 1,\n            x_max: 306,\n            y_min: 0,\n            y_max: 170,\n            ha: 170,\n            o: 'm 193 79 b 308 0 219 50 264 0 b 439 117 396 0 438 102 b 439 120 439 118 439 118 l 441 125 b 441 128 441 127 441 127 b 433 141 441 135 439 141 b 416 130 429 141 423 137 b 343 94 390 107 370 94 b 269 153 315 94 294 121 l 265 158 b 144 245 239 190 180 245 b 6 134 62 245 10 143 b 1 114 3 125 1 118 b 7 107 1 108 4 107 b 36 122 13 107 22 112 b 92 151 55 137 65 151 b 183 89 125 151 161 112 b 189 84 184 88 187 86 z',\n        },\n        stringsDownBow: {\n            x_min: 0,\n            x_max: 312,\n            y_min: 0,\n            y_max: 318,\n            ha: 318,\n            o: 'm 37 458 b 0 420 17 458 0 441 l 0 17 b 17 0 0 7 9 0 l 37 0 b 55 17 46 0 55 7 l 55 253 b 225 278 55 269 140 278 b 395 253 310 278 395 269 l 395 17 b 413 0 395 7 403 0 l 432 0 b 449 17 441 0 449 7 l 449 420 b 412 458 449 441 432 458 z',\n        },\n        stringsUpBow: {\n            x_min: 1,\n            x_max: 249,\n            y_min: 1,\n            y_max: 495,\n            ha: 494,\n            o: 'm 181 1 b 206 22 193 1 203 10 l 359 683 l 359 688 b 338 713 359 700 351 710 l 333 713 b 308 694 321 713 311 706 l 180 140 l 53 694 b 27 713 49 706 39 713 l 22 713 b 1 690 10 710 1 700 b 3 683 1 687 1 685 l 154 22 b 181 1 157 10 167 1 z',\n        },\n        stringsHarmonic: {\n            x_min: 0,\n            x_max: 200,\n            y_min: 0,\n            y_max: 200,\n            ha: 200,\n            o: 'm 288 144 b 144 288 288 225 223 288 b 0 144 65 288 0 225 b 144 0 0 65 65 0 b 288 144 223 0 288 65 z m 144 249 b 249 144 203 249 249 203 b 144 39 249 86 203 39 b 39 144 86 39 39 86 b 144 249 39 203 86 249 z',\n        },\n        pluckedSnapPizzicatoAbove: {\n            x_min: 0,\n            x_max: 200,\n            y_min: 0,\n            y_max: 300,\n            ha: 300,\n            o: 'm 0 144 b 144 0 0 63 65 0 b 288 144 223 0 288 63 b 167 285 288 215 235 275 l 167 432 l 121 432 l 121 285 b 0 144 52 275 0 215 z m 121 246 l 121 144 l 167 144 l 167 246 b 249 144 213 236 249 193 b 144 39 249 85 202 39 b 39 144 85 39 39 85 b 121 246 39 193 73 236 z',\n        },\n        pluckedSnapPizzicatoBelow: {\n            x_min: 0,\n            x_max: 200,\n            y_min: 0,\n            y_max: 300,\n            ha: 300,\n            o: 'm 288 288 b 144 432 288 369 223 432 b 0 288 65 432 0 369 b 121 145 0 216 52 157 l 121 0 l 167 0 l 167 145 b 288 288 235 157 288 216 z m 167 186 l 167 288 l 121 288 l 121 186 b 39 288 75 196 39 238 b 144 393 39 347 86 393 b 249 288 203 393 249 347 b 167 186 249 238 215 196 z',\n        },\n        pluckedLeftHandPizzicato: {\n            x_min: 0,\n            x_max: 272,\n            y_min: 0,\n            y_max: 272,\n            ha: 272,\n            o: 'm 392 219 l 219 219 l 219 392 l 173 392 l 173 219 l 0 219 l 0 173 l 173 173 l 173 0 l 219 0 l 219 173 l 392 173 z',\n        },\n        keyboardPedalPed: {\n            x_min: 0,\n            x_max: 1019,\n            y_min: -8,\n            y_max: 555,\n            ha: 563,\n            o: 'm 413 799 b 179 749 327 798 261 789 b 0 517 107 713 0 632 b 122 376 0 454 37 376 b 240 540 189 376 240 452 b 225 586 240 579 233 586 b 204 549 213 586 212 573 b 138 480 199 527 181 480 b 85 549 96 480 85 517 l 85 554 b 353 762 89 690 230 762 b 373 752 364 762 373 760 b 351 708 373 740 360 723 b 274 546 330 675 274 585 b 353 416 274 508 333 444 b 412 304 372 390 412 351 b 382 228 412 275 403 256 b 334 190 363 202 361 200 b 147 29 271 167 147 88 b 196 -12 147 4 171 -12 b 343 108 239 -12 279 33 l 363 132 b 387 150 370 141 376 150 b 543 -4 445 150 467 -4 b 631 42 567 -4 586 0 l 668 78 b 685 89 674 84 680 89 b 696 75 688 89 690 86 b 809 -9 717 29 753 -9 b 946 66 854 -9 894 13 b 988 107 971 92 981 107 b 1002 89 994 107 996 99 b 1152 -4 1030 36 1077 -4 b 1329 248 1238 -4 1329 82 b 792 717 1329 556 1047 665 b 766 720 785 719 775 720 b 747 703 752 720 747 711 b 780 680 747 693 756 685 b 1223 222 1028 621 1223 504 b 1152 39 1223 122 1205 39 b 1073 229 1104 39 1073 132 b 1132 423 1073 314 1086 377 b 1142 442 1140 432 1142 436 b 1126 458 1142 451 1136 458 b 1093 446 1119 458 1109 455 b 975 216 1022 408 975 337 l 975 190 b 943 121 975 160 972 150 b 852 69 899 76 877 69 b 776 148 816 69 786 117 b 773 163 775 154 773 158 b 786 177 773 167 776 170 l 801 187 b 937 366 867 235 937 284 b 844 454 937 422 900 454 b 665 217 711 454 665 331 b 671 153 665 197 667 176 l 671 147 b 662 134 671 143 670 140 b 605 111 639 118 625 111 b 521 160 572 111 546 135 b 451 203 497 184 474 197 b 426 212 435 207 426 206 b 436 230 426 216 429 220 b 510 389 464 269 510 340 b 429 521 510 435 480 462 b 369 629 387 570 369 599 b 402 720 369 648 384 691 b 462 763 425 759 446 763 b 611 624 540 763 611 704 b 564 575 611 592 590 575 b 501 602 540 575 520 582 b 474 622 492 611 487 622 b 459 603 465 622 459 615 b 603 471 459 570 510 471 b 711 588 670 471 711 524 b 422 799 711 742 554 799 z m 815 403 b 848 343 838 403 848 383 b 780 226 848 295 824 261 b 765 217 773 220 768 217 b 759 228 762 217 759 220 b 756 282 757 245 756 262 b 815 403 756 346 772 403 z m 1405 124 b 1344 62 1369 124 1344 98 b 1405 0 1344 26 1369 0 b 1467 62 1441 0 1467 26 b 1405 124 1467 98 1441 124 z',\n        },\n        keyboardPedalUp: {\n            x_min: 0,\n            x_max: 450,\n            y_min: 0,\n            y_max: 450,\n            ha: 450,\n            o: 'm 582 396 b 516 367 554 396 533 384 b 465 340 495 347 487 340 l 458 340 b 412 377 432 340 412 348 b 432 409 412 387 419 396 l 438 415 b 490 429 451 428 464 429 b 575 501 534 429 575 452 b 501 575 575 541 541 575 b 429 490 452 575 429 534 b 415 438 429 464 428 451 l 409 432 b 377 412 396 419 387 412 b 340 458 348 412 340 432 l 340 465 b 367 516 340 487 347 495 b 396 582 384 533 396 554 b 324 648 396 625 363 648 b 252 582 285 648 252 625 b 281 516 252 554 264 533 b 308 465 301 495 308 487 l 308 458 b 271 412 308 432 300 412 b 239 432 261 412 252 419 l 233 438 b 219 490 220 451 219 464 b 147 575 219 534 196 575 b 73 501 107 575 73 541 b 158 429 73 452 114 429 b 210 415 184 429 197 428 l 216 409 b 236 377 229 396 236 387 b 190 340 236 348 216 340 l 183 340 b 132 367 161 340 153 347 b 66 396 115 384 94 396 b 0 324 23 396 0 363 b 66 252 0 285 23 252 b 132 281 94 252 115 264 b 183 308 153 301 161 308 l 190 308 b 236 271 216 308 236 300 b 216 239 236 261 229 252 l 210 233 b 158 219 197 220 184 219 b 73 147 114 219 73 196 b 147 73 73 107 107 73 b 219 158 196 73 219 114 b 233 210 219 184 220 197 l 239 216 b 271 236 252 229 261 236 b 308 190 300 236 308 216 l 308 183 b 281 132 308 161 301 153 b 252 66 264 115 252 94 b 324 0 252 23 285 0 b 396 66 363 0 396 23 b 367 132 396 94 384 115 b 340 183 347 153 340 161 l 340 190 b 377 236 340 216 348 236 b 409 216 387 236 396 229 l 415 210 b 429 158 428 197 429 184 b 501 73 429 114 452 73 b 575 147 541 73 575 107 b 490 219 575 196 534 219 b 438 233 464 219 451 220 l 432 239 b 412 271 419 252 412 261 b 458 308 412 300 432 308 l 465 308 b 516 281 487 308 495 301 b 582 252 533 264 554 252 b 648 324 625 252 648 285 b 582 396 648 363 625 396 z m 324 271 b 271 324 291 271 271 291 b 324 377 271 357 291 377 b 377 324 357 377 377 357 b 324 271 377 291 357 271 z',\n        },\n        pictChokeCymbal: {\n            x_min: 1,\n            x_max: 152,\n            y_min: 2,\n            y_max: 251,\n            ha: 249,\n            o: 'm 104 361 b 1 271 42 361 1 321 b 82 190 1 222 35 190 b 122 160 118 190 122 160 b 125 144 124 154 125 150 b 102 88 125 124 115 105 b 37 32 78 56 40 35 b 26 17 32 29 26 26 l 27 16 b 37 3 29 6 33 3 b 181 102 85 3 158 66 b 219 239 210 147 219 197 l 219 249 b 104 361 219 317 170 361 z',\n        },\n        wiggleArpeggiatoUp: {\n            x_min: -33,\n            x_max: 292,\n            y_min: 0,\n            y_max: 119,\n            ha: 119,\n            o: 'm 130 171 b -39 68 16 171 -14 91 b -48 53 -45 62 -48 58 b -29 42 -48 46 -39 42 b -10 46 -23 42 -16 43 b 56 63 12 56 29 63 b 248 0 121 63 135 0 b 419 127 361 0 410 104 b 420 132 420 130 420 131 b 412 140 420 137 416 140 b 386 130 403 140 392 134 b 334 107 367 117 353 107 b 318 108 330 107 324 107 b 240 138 289 112 265 128 b 130 171 209 153 168 171 z',\n        },\n        arrowheadBlackUp: {\n            x_min: 0,\n            x_max: 228,\n            y_min: 0,\n            y_max: 299,\n            ha: 299,\n            o: 'm 166 431 b 0 20 111 274 0 30 b 16 0 0 12 6 0 l 17 1 b 166 50 43 16 160 50 b 310 1 171 50 289 13 l 311 0 b 328 20 321 0 328 12 b 166 431 328 30 220 274 z',\n        },\n        arrowheadBlackDown: {\n            x_min: 0,\n            x_max: 228,\n            y_min: 0,\n            y_max: 299,\n            ha: 299,\n            o: 'm 166 0 b 328 410 220 157 328 400 b 311 431 328 419 321 431 l 310 429 b 166 380 289 418 171 380 b 17 429 160 380 43 415 l 16 431 b 0 410 6 431 0 419 b 166 0 0 400 111 157 z',\n        },\n        arpeggiatoUp: {\n            x_min: 1,\n            x_max: 229,\n            y_min: 7,\n            y_max: 1511,\n            ha: 1504,\n            o: 'm 219 1848 l 330 1848 l 164 2176 l 1 1848 l 121 1848 b 92 1778 115 1822 101 1800 l 89 1773 b 59 1668 75 1741 59 1702 b 96 1555 59 1614 76 1580 b 99 1551 98 1554 99 1551 l 102 1547 b 124 1496 115 1531 124 1515 b 122 1482 124 1492 124 1488 b 92 1404 118 1453 102 1428 b 59 1293 78 1372 59 1332 b 105 1172 59 1234 81 1198 b 124 1120 118 1155 124 1143 l 122 1113 b 122 1110 122 1113 122 1112 b 92 1032 118 1081 102 1057 b 59 922 78 1001 59 960 b 115 792 59 855 86 816 b 124 760 121 782 124 773 b 122 744 124 756 124 750 b 92 667 118 716 102 693 b 59 556 78 635 59 595 b 108 433 59 495 82 458 b 124 389 117 420 124 408 b 122 374 124 384 124 379 b 92 298 118 346 102 323 l 89 292 b 59 186 75 261 59 222 b 163 19 59 73 140 42 b 177 10 168 13 173 10 b 189 29 184 10 189 19 b 184 48 189 35 187 42 b 167 114 174 69 167 85 b 230 305 167 179 229 193 b 181 423 230 357 209 396 b 167 484 173 442 167 458 b 230 675 167 547 229 563 b 179 796 230 729 206 769 b 167 850 171 812 167 827 b 230 1040 167 913 229 929 b 183 1158 230 1092 209 1130 b 167 1220 173 1178 167 1194 b 230 1411 167 1284 229 1300 b 186 1526 230 1462 210 1499 b 167 1594 176 1529 167 1584 b 230 1786 167 1659 229 1673 b 219 1848 230 1809 226 1829 z',\n        },\n        arpeggiatoDown: {\n            x_min: 1,\n            x_max: 229,\n            y_min: -4,\n            y_max: 1500,\n            ha: 1504,\n            o: 'm 219 323 b 230 384 226 341 230 361 b 167 576 229 497 167 511 b 186 644 167 586 176 641 b 230 759 210 671 230 708 b 167 950 229 870 167 886 b 183 1012 167 976 173 992 b 230 1130 209 1040 230 1079 b 167 1320 229 1241 167 1257 b 179 1374 167 1344 171 1358 b 230 1495 206 1401 230 1441 b 167 1686 229 1607 167 1623 b 181 1747 167 1712 173 1728 b 230 1865 209 1774 230 1813 b 167 2056 229 1977 167 1992 b 184 2123 167 2085 174 2101 b 189 2141 187 2128 189 2136 b 177 2160 189 2151 184 2160 b 163 2151 173 2160 168 2157 b 59 1984 140 2128 59 2097 b 89 1878 59 1948 75 1909 l 92 1872 b 122 1796 102 1848 118 1824 b 124 1781 124 1791 124 1786 b 108 1737 124 1763 117 1750 b 59 1614 82 1712 59 1675 b 92 1503 59 1575 78 1535 b 122 1426 102 1477 118 1454 b 124 1410 124 1420 124 1414 b 115 1378 124 1397 121 1388 b 59 1248 86 1354 59 1315 b 92 1138 59 1210 78 1169 b 122 1060 102 1113 118 1089 b 122 1057 122 1058 122 1058 l 124 1050 b 105 998 124 1027 118 1015 b 59 877 81 972 59 936 b 92 766 59 838 78 798 b 122 688 102 742 118 717 b 124 674 124 683 124 678 b 102 624 124 655 115 639 l 99 619 b 96 615 99 619 98 616 b 59 503 76 590 59 556 b 89 397 59 468 75 429 l 92 392 b 121 323 101 370 115 348 l 1 323 l 164 -6 l 330 323 z',\n        },\n        repeat1Bar: {\n            x_min: 0,\n            x_max: 532,\n            y_min: -250,\n            y_max: 279,\n            ha: 529,\n            o: 'm 759 380 b 766 395 763 386 766 390 b 757 402 766 399 763 402 l 605 402 b 579 380 596 402 589 393 l 4 -340 b 0 -350 1 -343 0 -347 b 12 -360 0 -356 4 -360 l 154 -360 b 184 -340 167 -360 177 -348 z m 89 288 b 0 197 40 288 0 248 b 89 108 0 148 40 108 b 180 197 140 108 180 148 b 89 288 180 248 140 288 z m 675 -71 b 586 -161 626 -71 586 -111 b 675 -251 586 -210 626 -251 b 766 -161 726 -251 766 -210 b 675 -71 766 -111 726 -71 z',\n        },\n        repeat2Bars: {\n            x_min: 0,\n            x_max: 762,\n            y_min: -250,\n            y_max: 279,\n            ha: 529,\n            o: 'm 1090 380 b 1097 395 1094 386 1097 390 b 1089 402 1097 399 1094 402 l 936 402 b 910 380 927 402 920 393 l 336 -340 b 331 -350 333 -343 331 -347 b 343 -360 331 -356 336 -360 l 485 -360 b 516 -340 498 -360 508 -348 z m 759 380 b 766 395 763 386 766 390 b 757 402 766 399 763 402 l 605 402 b 579 380 596 402 589 393 l 4 -340 b 0 -350 1 -343 0 -347 b 12 -360 0 -356 4 -360 l 154 -360 b 184 -340 167 -360 177 -348 z m 89 288 b 0 197 40 288 0 248 b 89 108 0 148 40 108 b 180 197 140 108 180 148 b 89 288 180 248 140 288 z m 1007 -71 b 917 -161 958 -71 917 -111 b 1007 -251 917 -210 958 -251 b 1097 -161 1057 -251 1097 -210 b 1007 -71 1097 -111 1057 -71 z',\n        },\n        repeat4Bars: {\n            x_min: 0,\n            x_max: 1232,\n            y_min: -250,\n            y_max: 279,\n            ha: 529,\n            o: 'm 1767 380 b 1774 395 1771 386 1774 390 b 1765 402 1774 399 1771 402 l 1613 402 b 1587 380 1604 402 1597 393 l 1012 -340 b 1008 -350 1009 -343 1008 -347 b 1020 -360 1008 -356 1012 -360 l 1162 -360 b 1192 -340 1175 -360 1185 -348 z m 1436 380 b 1443 395 1440 386 1443 390 b 1434 402 1443 399 1440 402 l 1282 402 b 1256 380 1273 402 1266 393 l 681 -340 b 677 -350 678 -343 677 -347 b 688 -360 677 -356 681 -360 l 831 -360 b 861 -340 844 -360 854 -348 z m 1090 380 b 1097 395 1094 386 1097 390 b 1089 402 1097 399 1094 402 l 936 402 b 910 380 927 402 920 393 l 336 -340 b 331 -350 333 -343 331 -347 b 343 -360 331 -356 336 -360 l 485 -360 b 516 -340 498 -360 508 -348 z m 759 380 b 766 395 763 386 766 390 b 757 402 766 399 763 402 l 605 402 b 579 380 596 402 589 393 l 4 -340 b 0 -350 1 -343 0 -347 b 12 -360 0 -356 4 -360 l 154 -360 b 184 -340 167 -360 177 -348 z m 89 288 b 0 197 40 288 0 248 b 89 108 0 148 40 108 b 180 197 140 108 180 148 b 89 288 180 248 140 288 z m 1683 -71 b 1594 -161 1634 -71 1594 -111 b 1683 -251 1594 -210 1634 -251 b 1774 -161 1734 -251 1774 -210 b 1683 -71 1774 -111 1734 -71 z',\n        },\n        repeatBarSlash: {\n            x_min: 0,\n            x_max: 532,\n            y_min: -250,\n            y_max: 279,\n            ha: 529,\n            o: 'm 759 380 b 766 395 763 386 766 390 b 757 402 766 399 763 402 l 605 402 b 579 380 596 402 589 393 l 4 -340 b 0 -350 1 -343 0 -347 b 12 -360 0 -356 4 -360 l 154 -360 b 184 -340 167 -360 177 -348 z',\n        },\n        csymDiminished: {\n            x_min: 0,\n            x_max: 473,\n            y_min: 0,\n            y_max: 473,\n            ha: 473,\n            o: 'm 341 681 b 0 341 153 681 0 530 b 341 0 0 153 153 0 b 681 341 530 0 681 153 b 341 681 681 530 530 681 z m 341 618 b 618 341 495 618 618 495 b 341 63 618 189 494 63 b 63 341 187 63 63 187 b 341 618 63 494 189 618 z',\n        },\n        csymHalfDiminished: {\n            x_min: -16,\n            x_max: 488,\n            y_min: -15,\n            y_max: 489,\n            ha: 504,\n            o: 'm 703 660 l 658 704 l 557 603 b 340 681 498 652 422 681 b -1 341 151 681 -1 530 b 78 124 -1 259 29 183 l -23 23 l 22 -22 l 122 79 b 340 0 181 30 258 0 b 680 341 528 0 680 153 b 602 559 680 423 651 500 z m 62 341 b 340 618 62 494 187 618 b 513 559 403 618 464 598 l 122 168 b 62 341 84 217 62 278 z m 616 341 b 340 63 616 189 492 63 b 167 124 276 63 216 85 l 557 514 b 616 341 596 465 616 405 z',\n        },\n        csymAugmented: {\n            x_min: 0,\n            x_max: 395,\n            y_min: 1,\n            y_max: 396,\n            ha: 395,\n            o: 'm 569 318 l 317 318 l 317 570 l 253 570 l 253 318 l 0 318 l 0 255 l 253 255 l 253 1 l 317 1 l 317 255 l 569 255 z',\n        },\n        csymMajorSeventh: {\n            x_min: 0,\n            x_max: 558,\n            y_min: 1,\n            y_max: 477,\n            ha: 476,\n            o: 'm 402 687 l 0 1 l 804 1 z m 402 562 l 693 65 l 111 65 z',\n        },\n        csymMinor: {\n            x_min: 0,\n            x_max: 325,\n            y_min: 216,\n            y_max: 260,\n            ha: 44,\n            o: 'm 468 374 l 0 374 l 0 311 l 468 311 z',\n        },\n        csymParensLeftTall: {\n            x_min: 1,\n            x_max: 185,\n            y_min: 0,\n            y_max: 997,\n            ha: 997,\n            o: 'm 266 48 b 261 65 266 55 264 62 b 92 719 157 212 92 400 b 262 1371 92 1037 154 1228 b 266 1394 266 1378 266 1394 l 266 1424 b 264 1436 266 1431 266 1436 b 259 1434 262 1436 259 1434 b 1 719 84 1261 1 1011 b 259 1 1 429 79 177 b 264 0 261 0 262 0 b 266 9 265 0 266 6 z',\n        },\n        csymParensRightTall: {\n            x_min: -20,\n            x_max: 164,\n            y_min: 0,\n            y_max: 997,\n            ha: 997,\n            o: 'm -29 9 b -26 0 -29 6 -27 0 b -22 1 -24 0 -23 0 b 236 719 158 177 236 429 b -22 1434 236 1011 154 1261 b -26 1436 -22 1434 -24 1436 b -29 1424 -29 1436 -29 1431 l -29 1394 b -24 1371 -29 1394 -29 1378 b 145 719 84 1228 145 1037 b -23 65 145 400 81 212 b -29 48 -26 62 -29 55 z',\n        },\n        csymBracketLeftTall: {\n            x_min: 0,\n            x_max: 155,\n            y_min: 0,\n            y_max: 1000,\n            ha: 1000,\n            o: 'm 217 0 b 223 9 220 0 223 4 l 223 37 b 217 46 223 42 220 46 l 92 46 l 92 1394 l 217 1394 b 223 1403 220 1394 223 1398 l 223 1431 b 217 1440 223 1436 220 1440 l 6 1440 b 0 1436 3 1440 0 1439 l 0 4 b 6 0 0 1 3 0 z',\n        },\n        csymBracketRightTall: {\n            x_min: 1,\n            x_max: 156,\n            y_min: 0,\n            y_max: 1000,\n            ha: 1000,\n            o: 'm 219 0 b 225 4 222 0 225 1 l 225 1436 b 219 1440 225 1439 222 1440 l 7 1440 b 1 1431 4 1440 1 1436 l 1 1403 b 7 1394 1 1398 4 1394 l 132 1394 l 132 46 l 7 46 b 1 37 4 46 1 42 l 1 9 b 7 0 1 4 4 0 z',\n        },\n        csymParensLeftVeryTall: {\n            x_min: 0,\n            x_max: 122,\n            y_min: 0,\n            y_max: 993,\n            ha: 993,\n            o: 'm 176 32 b 171 49 176 39 174 46 b 60 716 104 194 60 399 b 173 1382 60 1032 101 1241 b 176 1405 176 1390 176 1405 l 176 1427 b 173 1430 176 1428 174 1430 b 0 716 40 1297 0 978 b 170 3 0 428 50 179 b 171 0 170 1 170 0 b 176 6 173 0 176 4 z',\n        },\n        csymParensRightVeryTall: {\n            x_min: -15,\n            x_max: 107,\n            y_min: 0,\n            y_max: 993,\n            ha: 993,\n            o: 'm -22 6 b -17 0 -22 4 -19 0 b -16 3 -16 0 -16 1 b 154 716 104 179 154 428 b -19 1430 154 978 114 1297 b -22 1427 -20 1430 -22 1428 l -22 1405 b -19 1382 -22 1405 -22 1390 b 94 716 53 1241 94 1032 b -17 49 94 399 50 194 b -22 32 -20 46 -22 39 z',\n        },\n        csymDiagonalArrangementSlash: {\n            x_min: 0,\n            x_max: 999,\n            y_min: 0,\n            y_max: 1000,\n            ha: 1000,\n            o: 'm 1439 1380 l 1377 1440 l 0 60 l 62 0 z',\n        },\n        accSagittal5v7KleismaUp: {\n            x_min: 0,\n            x_max: 156,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -517 l 45 -517 l 45 -35 b 135 -112 68 -86 99 -112 b 225 68 194 -112 225 -53 l 180 68 b 144 -4 180 20 168 -4 b 122 0 138 -4 131 -3 b 23 248 86 14 52 96 l 0 248 z',\n        },\n        accSagittal5v7KleismaDown: {\n            x_min: 0,\n            x_max: 156,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -248 l 23 -248 b 122 0 52 -96 86 -14 b 144 4 131 3 138 4 b 180 -68 168 4 180 -20 l 225 -68 b 135 112 225 53 194 112 b 45 35 99 112 68 86 l 45 517 l 0 517 z',\n        },\n        accSagittal5CommaUp: {\n            x_min: 0,\n            x_max: 156,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 225 -517 l 225 248 l 203 248 l 0 -112 l 0 -284 l 180 33 l 180 -517 z',\n        },\n        accSagittal5CommaDown: {\n            x_min: 0,\n            x_max: 156,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 180 517 l 180 -33 l 0 284 l 0 112 l 203 -248 l 225 -248 l 225 517 z',\n        },\n        accSagittal7CommaUp: {\n            x_min: 0,\n            x_max: 156,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 248 l 0 -517 l 45 -517 l 45 112 l 89 112 b 180 -68 150 112 180 53 l 180 -248 l 225 -248 l 225 68 b 135 248 225 187 194 248 z',\n        },\n        accSagittal7CommaDown: {\n            x_min: 0,\n            x_max: 156,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 135 -248 b 225 -68 194 -248 225 -187 l 225 248 l 180 248 l 180 68 b 89 -112 180 -53 150 -112 l 45 -112 l 45 517 l 0 517 l 0 -248 z',\n        },\n        accSagittal25SmallDiesisUp: {\n            x_min: 0,\n            x_max: 250,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -157 l 0 -259 l 315 -89 l 315 -517 l 360 -517 l 360 248 l 337 248 l 0 68 l 0 -33 l 315 135 l 315 10 z',\n        },\n        accSagittal25SmallDiesisDown: {\n            x_min: 0,\n            x_max: 250,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 315 -10 l 315 -135 l 0 33 l 0 -68 l 337 -248 l 360 -248 l 360 517 l 315 517 l 315 89 l 0 259 l 0 157 z',\n        },\n        accSagittal35MediumDiesisUp: {\n            x_min: 0,\n            x_max: 281,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -284 l 180 33 l 180 -517 l 225 -517 l 225 112 l 271 112 b 360 -68 330 112 360 53 l 360 -248 l 405 -248 l 405 68 b 315 248 405 187 374 248 l 203 248 l 0 -112 z',\n        },\n        accSagittal35MediumDiesisDown: {\n            x_min: 0,\n            x_max: 281,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 112 l 203 -248 l 315 -248 b 405 -68 374 -248 405 -187 l 405 248 l 360 248 l 360 68 b 271 -112 360 -53 330 -112 l 225 -112 l 225 517 l 180 517 l 180 -33 l 0 284 z',\n        },\n        accSagittal11MediumDiesisUp: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 225 53 l 225 -517 l 271 -517 l 271 53 l 495 -248 l 495 -89 l 248 248 l 0 -89 l 0 -248 z',\n        },\n        accSagittal11MediumDiesisDown: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 248 l 0 89 l 248 -248 l 495 89 l 495 248 l 271 -53 l 271 517 l 225 517 l 225 -53 z',\n        },\n        accSagittal11LargeDiesisUp: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 68 l 0 -248 l 45 -248 l 45 -68 b 180 112 45 53 89 112 l 225 112 l 225 -517 l 271 -517 l 271 112 l 315 112 b 449 -68 405 112 449 53 l 449 -248 l 495 -248 l 495 68 b 360 248 495 187 449 248 l 135 248 b 0 68 45 248 0 187 z',\n        },\n        accSagittal11LargeDiesisDown: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -68 b 135 -248 0 -187 45 -248 l 360 -248 b 495 -68 449 -248 495 -187 l 495 248 l 449 248 l 449 68 b 315 -112 449 -53 405 -112 l 271 -112 l 271 517 l 225 517 l 225 -112 l 180 -112 b 45 68 89 -112 45 -53 l 45 248 l 0 248 z',\n        },\n        accSagittal35LargeDiesisUp: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -68 b 135 -248 0 -187 45 -248 l 248 -248 l 540 112 l 540 274 l 271 -58 l 271 517 l 225 517 l 225 -112 l 180 -112 b 45 68 89 -112 45 -53 l 45 248 l 0 248 z',\n        },\n        accSagittal35LargeDiesisDown: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -68 b 135 -248 0 -187 45 -248 l 248 -248 l 540 112 l 540 274 l 269 -58 l 269 517 l 225 517 l 225 -112 l 180 -112 b 45 68 89 -112 45 -53 l 45 248 l 0 248 z',\n        },\n        accSagittalSharp25SDown: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 68 b 112 -112 0 -53 36 -112 l 135 -112 l 135 -517 l 180 -517 l 180 -89 b 248 26 206 -65 229 -27 b 315 -89 264 -27 287 -65 l 315 -517 l 360 -517 l 360 -112 l 383 -112 b 495 68 458 -112 495 -53 l 449 68 b 399 -4 449 20 433 -4 b 248 248 297 -4 261 171 b 122 0 216 96 176 14 b 94 -4 112 -3 102 -4 b 45 68 60 -4 45 20 z',\n        },\n        accSagittalFlat25SUp: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 45 -68 b 94 4 45 -20 60 4 b 122 0 102 4 112 3 b 248 -248 176 -14 216 -96 b 399 4 261 -171 297 4 b 449 -68 433 4 449 -20 l 495 -68 b 383 112 495 53 458 112 l 360 112 l 360 517 l 315 517 l 315 89 b 248 -26 287 65 264 27 b 180 89 229 27 206 65 l 180 517 l 135 517 l 135 112 l 112 112 b 0 -68 36 112 0 53 z',\n        },\n        accSagittalSharp7CDown: {\n            x_min: 0,\n            x_max: 250,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -517 l 45 -517 l 45 112 l 89 112 b 180 104 124 112 154 109 l 180 -517 l 225 -517 l 225 89 b 315 -68 285 60 315 9 l 315 -248 l 360 -248 l 360 68 b 135 248 360 187 285 248 l 0 248 z',\n        },\n        accSagittalFlat7CUp: {\n            x_min: 0,\n            x_max: 250,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -248 l 135 -248 b 360 -68 285 -248 360 -187 l 360 248 l 315 248 l 315 68 b 225 -89 315 -9 285 -60 l 225 517 l 180 517 l 180 -104 b 89 -112 154 -109 124 -112 l 45 -112 l 45 517 l 0 517 z',\n        },\n        accSagittalSharp5CDown: {\n            x_min: 0,\n            x_max: 281,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 45 -517 l 45 71 l 180 -56 l 180 -517 l 225 -517 l 225 -98 l 405 -268 l 405 -112 l 23 248 l 0 248 l 0 -517 z',\n        },\n        accSagittalFlat5CUp: {\n            x_min: 0,\n            x_max: 281,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 517 l 0 -248 l 23 -248 l 405 112 l 405 268 l 225 98 l 225 517 l 180 517 l 180 56 l 45 -71 l 45 517 z',\n        },\n        accSagittalSharp5v7kDown: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -112 l 0 -276 l 135 -82 l 135 -517 l 180 -517 l 180 -17 l 271 112 l 315 112 l 315 -517 l 360 -517 l 360 107 b 449 -68 420 89 449 30 l 449 -248 l 495 -248 l 495 68 b 360 248 495 189 449 248 l 248 248 z',\n        },\n        accSagittalFlat5v7kUp: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 248 -248 l 360 -248 b 495 -68 449 -248 495 -189 l 495 248 l 449 248 l 449 68 b 360 -107 449 -30 420 -89 l 360 517 l 315 517 l 315 -112 l 271 -112 l 180 17 l 180 517 l 135 517 l 135 82 l 0 276 l 0 112 z',\n        },\n        accSagittalSharp: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 180 -53 l 180 -517 l 225 -517 l 225 0 l 292 85 l 360 0 l 360 -517 l 405 -517 l 405 -53 l 585 -274 l 585 -112 l 292 248 l 0 -112 l 0 -274 z',\n        },\n        accSagittalFlat: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 274 l 0 112 l 292 -248 l 585 112 l 585 274 l 405 53 l 405 517 l 360 517 l 360 0 l 292 -85 l 225 0 l 225 517 l 180 517 l 180 53 z',\n        },\n        accSagittalSharp5v7kUp: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -361,\n            y_max: 172,\n            ha: 533,\n            o: 'm 45 -517 l 45 -10 b 135 -92 68 -48 98 -75 l 135 -520 l 180 -520 l 180 -108 b 248 -115 203 -112 225 -115 b 271 -112 256 -115 264 -115 l 271 -517 l 315 -517 l 315 -107 b 449 68 405 -89 449 -30 l 405 68 b 297 -4 405 19 369 -4 b 23 248 131 -4 56 85 l 0 248 l 0 -517 z',\n        },\n        accSagittalFlat5v7kDown: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -172,\n            y_max: 361,\n            ha: 533,\n            o: 'm 0 517 l 0 -248 l 23 -248 b 297 4 56 -85 131 4 b 405 -68 369 4 405 -19 l 449 -68 b 315 107 449 30 405 89 l 315 517 l 271 517 l 271 112 b 248 115 264 115 256 115 b 180 108 225 115 203 112 l 180 520 l 135 520 l 135 92 b 45 10 98 75 68 48 l 45 517 z',\n        },\n        accSagittalSharp5CUp: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -266 l 135 -153 l 135 -517 l 180 -517 l 180 -115 l 271 -39 l 271 -517 l 315 -517 l 315 0 l 405 75 l 405 -517 l 449 -517 l 449 248 l 428 248 l 0 -112 z',\n        },\n        accSagittalFlat5CDown: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 112 l 428 -248 l 449 -248 l 449 517 l 405 517 l 405 -75 l 315 0 l 315 517 l 271 517 l 271 39 l 180 115 l 180 517 l 135 517 l 135 153 l 0 266 z',\n        },\n        accSagittalSharp7CUp: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -517 l 45 -517 l 45 112 l 135 112 l 135 -517 l 180 -517 l 180 108 b 271 89 213 105 243 99 l 271 -517 l 315 -517 l 315 73 b 405 -68 374 45 405 -3 l 405 -248 l 449 -248 l 449 68 b 135 248 449 187 346 248 l 0 248 z',\n        },\n        accSagittalFlat7CDown: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -248 l 135 -248 b 449 -68 346 -248 449 -187 l 449 248 l 405 248 l 405 68 b 315 -73 405 3 374 -45 l 315 517 l 271 517 l 271 -89 b 180 -108 243 -99 213 -105 l 180 517 l 135 517 l 135 -112 l 45 -112 l 45 517 l 0 517 z',\n        },\n        accSagittalSharp25SUp: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -30 l 495 143 l 495 14 l 0 -157 l 0 -255 l 225 -177 l 225 -517 l 271 -517 l 271 -161 l 360 -130 l 360 -517 l 405 -517 l 405 -115 l 495 -84 l 495 -517 l 540 -517 l 540 248 l 517 248 l 0 68 z',\n        },\n        accSagittalFlat25SDown: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -68 l 517 -248 l 540 -248 l 540 517 l 495 517 l 495 84 l 405 115 l 405 517 l 360 517 l 360 130 l 271 161 l 271 517 l 225 517 l 225 177 l 0 255 l 0 157 l 495 -14 l 495 -143 l 0 30 z',\n        },\n        accSagittalSharp35MUp: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -112 l 0 -274 l 135 -108 l 135 -517 l 180 -517 l 180 -53 l 271 58 l 271 -517 l 315 -517 l 315 112 l 360 112 b 405 109 376 112 390 112 l 405 -517 l 449 -517 l 449 96 b 540 -68 510 72 540 17 l 540 -248 l 585 -248 l 585 68 b 405 248 585 187 526 248 l 292 248 z',\n        },\n        accSagittalFlat35MDown: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 292 -248 l 405 -248 b 585 -68 526 -248 585 -187 l 585 248 l 540 248 l 540 68 b 449 -96 540 -17 510 -72 l 449 517 l 405 517 l 405 -109 b 360 -112 390 -112 376 -112 l 315 -112 l 315 517 l 271 517 l 271 -58 l 180 53 l 180 517 l 135 517 l 135 108 l 0 274 l 0 112 z',\n        },\n        accSagittalSharp11MUp: {\n            x_min: 0,\n            x_max: 469,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -112 l 0 -271 l 180 -79 l 180 -517 l 225 -517 l 225 -30 l 315 65 l 315 -517 l 360 -517 l 360 65 l 449 -30 l 449 -517 l 495 -517 l 495 -79 l 675 -271 l 675 -112 l 337 248 z',\n        },\n        accSagittalFlat11MDown: {\n            x_min: 0,\n            x_max: 469,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 337 -248 l 675 112 l 675 271 l 495 79 l 495 517 l 449 517 l 449 30 l 360 -65 l 360 517 l 315 517 l 315 -65 l 225 30 l 225 517 l 180 517 l 180 79 l 0 271 l 0 112 z',\n        },\n        accSagittalSharp11LUp: {\n            x_min: 0,\n            x_max: 469,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 68 l 0 -248 l 45 -248 l 45 -68 b 180 104 45 26 89 82 l 180 -517 l 225 -517 l 225 112 l 315 112 l 315 -517 l 360 -517 l 360 112 l 449 112 l 449 -517 l 495 -517 l 495 104 b 631 -68 585 82 631 26 l 631 -248 l 675 -248 l 675 68 b 449 248 675 187 600 248 l 225 248 b 0 68 75 248 0 187 z',\n        },\n        accSagittalFlat11LDown: {\n            x_min: 0,\n            x_max: 469,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -68 b 225 -248 0 -187 75 -248 l 449 -248 b 675 -68 600 -248 675 -187 l 675 248 l 631 248 l 631 68 b 495 -104 631 -26 585 -82 l 495 517 l 449 517 l 449 -112 l 360 -112 l 360 517 l 315 517 l 315 -112 l 225 -112 l 225 517 l 180 517 l 180 -104 b 45 68 89 -82 45 -26 l 45 248 l 0 248 z',\n        },\n        accSagittalSharp35LUp: {\n            x_min: 0,\n            x_max: 500,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -248 l 45 -248 l 45 -68 b 180 104 45 26 89 82 l 180 -517 l 225 -517 l 225 112 l 315 112 l 315 -517 l 360 -517 l 360 71 l 452 -17 l 452 -517 l 495 -517 l 495 -56 l 720 -268 l 720 -112 l 337 248 l 225 248 b 0 68 75 248 0 187 z',\n        },\n        accSagittalFlat35LDown: {\n            x_min: 0,\n            x_max: 500,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -68 b 225 -248 0 -187 75 -248 l 337 -248 l 720 112 l 720 268 l 495 56 l 495 517 l 452 517 l 452 17 l 360 -71 l 360 517 l 315 517 l 315 -112 l 225 -112 l 225 517 l 180 517 l 180 -104 b 45 68 89 -82 45 -26 l 45 248 l 0 248 z',\n        },\n        accSagittalDoubleSharp25SDown: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 68 b 135 -112 0 -53 45 -112 b 243 -62 180 -112 215 -95 l 89 -503 l 143 -517 l 292 -82 l 445 -517 l 495 -503 l 343 -62 b 449 -112 372 -95 408 -112 b 585 68 540 -112 585 -53 l 540 68 b 475 -4 540 20 517 -4 b 292 248 350 -4 315 148 b 112 -4 274 148 236 -4 b 45 68 68 -4 45 20 z',\n        },\n        accSagittalDoubleFlat25SUp: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 45 -68 b 112 4 45 -20 68 4 b 292 -248 236 4 274 -148 b 475 4 315 -148 350 4 b 540 -68 517 4 540 -20 l 585 -68 b 449 112 585 53 540 112 b 343 62 408 112 372 95 l 495 503 l 445 517 l 292 82 l 143 517 l 89 503 l 243 62 b 135 112 215 95 180 112 b 0 -68 45 112 0 53 z',\n        },\n        accSagittalDoubleSharp7CDown: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -503 l 52 -517 l 203 -82 l 354 -517 l 405 -503 l 230 0 l 271 108 b 495 -68 420 92 495 35 l 495 -248 l 540 -248 l 540 68 b 225 248 540 187 435 248 l 89 248 l 89 112 l 135 112 l 174 0 z m 213 112 l 203 82 l 192 112 z',\n        },\n        accSagittalDoubleFlat7CUp: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 174 0 l 135 -112 l 89 -112 l 89 -248 l 225 -248 b 540 -68 435 -248 540 -187 l 540 248 l 495 248 l 495 68 b 271 -108 495 -35 420 -92 l 230 0 l 405 503 l 354 517 l 203 82 l 52 517 l 0 503 z m 192 -112 l 203 -82 l 213 -112 z',\n        },\n        accSagittalDoubleSharp5CDown: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 405 -503 l 230 0 l 232 4 l 585 -264 l 585 -112 l 112 248 l 89 248 l 89 112 l 151 68 l 174 0 l 0 -503 l 52 -517 l 203 -82 l 354 -517 z',\n        },\n        accSagittalDoubleFlat5CUp: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 354 517 l 203 82 l 52 517 l 0 503 l 174 0 l 151 -68 l 89 -112 l 89 -248 l 112 -248 l 585 112 l 585 264 l 232 -4 l 230 0 l 405 503 z',\n        },\n        accSagittalDoubleSharp5v7kDown: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -274 l 252 35 l 265 0 l 89 -503 l 141 -517 l 292 -82 l 444 -517 l 495 -503 l 321 0 l 360 112 b 540 -68 480 112 540 53 l 540 -248 l 585 -248 l 585 68 b 405 248 585 187 526 248 l 292 248 l 0 -112 z',\n        },\n        accSagittalDoubleFlat5v7kUp: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 112 l 292 -248 l 405 -248 b 585 -68 526 -248 585 -187 l 585 248 l 540 248 l 540 68 b 360 -112 540 -53 480 -112 l 321 0 l 495 503 l 444 517 l 292 82 l 141 517 l 89 503 l 265 0 l 252 -35 l 0 274 z',\n        },\n        accSagittalDoubleSharp: {\n            x_min: 0,\n            x_max: 469,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 540 -503 l 366 0 l 380 45 l 675 -271 l 675 -112 l 337 248 l 0 -112 l 0 -271 l 295 45 l 310 0 l 135 -503 l 186 -517 l 337 -82 l 488 -517 z',\n        },\n        accSagittalDoubleFlat: {\n            x_min: 0,\n            x_max: 469,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 488 517 l 337 82 l 186 517 l 135 503 l 310 0 l 295 -45 l 0 271 l 0 112 l 337 -248 l 675 112 l 675 271 l 380 -45 l 366 0 l 540 503 z',\n        },\n        accSagittal7v11KleismaUp: {\n            x_min: 0,\n            x_max: 219,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 68 -112 b 135 -45 89 -112 112 -89 l 135 -517 l 180 -517 l 180 -45 b 248 -112 200 -89 225 -112 b 315 68 292 -112 315 -53 l 271 68 b 248 -4 271 20 264 -4 b 236 0 245 -4 240 -3 b 157 248 213 14 187 96 b 78 0 127 96 101 14 b 65 -4 73 -3 68 -4 b 45 68 50 -4 45 20 l 0 68 b 68 -112 0 -53 23 -112 z',\n        },\n        accSagittal7v11KleismaDown: {\n            x_min: 0,\n            x_max: 219,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 68 112 b 0 -68 23 112 0 53 l 45 -68 b 65 4 45 -20 50 4 b 78 0 68 4 73 3 b 157 -248 101 -14 127 -96 b 236 0 187 -96 213 -14 b 248 4 240 3 245 4 b 271 -68 264 4 271 -20 l 315 -68 b 248 112 315 53 292 112 b 180 45 225 112 200 89 l 180 517 l 135 517 l 135 45 b 68 112 112 89 89 112 z',\n        },\n        accSagittal17CommaUp: {\n            x_min: 0,\n            x_max: 281,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 45 -203 b 89 -23 45 -82 60 -23 l 157 -23 b 180 -4 164 -23 173 -17 l 180 -517 l 225 -517 l 225 -40 b 315 -118 248 -92 279 -118 b 405 62 374 -118 405 -59 l 360 62 b 324 -10 360 14 348 -10 b 302 -6 318 -10 311 -9 b 206 217 268 9 235 84 l 203 248 b 135 68 177 127 154 68 l 68 68 b 0 -203 23 68 0 -23 z',\n        },\n        accSagittal17CommaDown: {\n            x_min: 0,\n            x_max: 281,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 203 b 68 -68 0 23 23 -68 l 135 -68 b 203 -248 154 -68 177 -127 l 206 -217 b 302 6 235 -84 268 -9 b 324 10 311 9 318 10 b 360 -62 348 10 360 -14 l 405 -62 b 315 118 405 59 374 118 b 225 40 279 118 248 92 l 225 517 l 180 517 l 180 4 b 157 23 173 17 164 23 l 89 23 b 45 203 60 23 45 82 z',\n        },\n        accSagittal55CommaUp: {\n            x_min: 0,\n            x_max: 219,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 248 l 0 -517 l 45 -517 l 45 58 l 315 -274 l 315 -112 l 23 248 z',\n        },\n        accSagittal55CommaDown: {\n            x_min: 0,\n            x_max: 219,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 23 -248 l 315 112 l 315 274 l 45 -58 l 45 517 l 0 517 l 0 -248 z',\n        },\n        accSagittal7v11CommaUp: {\n            x_min: 0,\n            x_max: 188,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -248 l 45 -248 l 45 -68 b 180 112 45 53 89 112 l 225 112 l 225 -517 l 271 -517 l 271 248 l 135 248 b 0 68 45 248 0 187 z',\n        },\n        accSagittal7v11CommaDown: {\n            x_min: 0,\n            x_max: 188,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -68 b 135 -248 0 -187 45 -248 l 271 -248 l 271 517 l 225 517 l 225 -112 l 180 -112 b 45 68 89 -112 45 -53 l 45 248 l 0 248 z',\n        },\n        accSagittal5v11SmallDiesisUp: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 73 l 0 -248 l 45 -248 l 45 -68 b 180 112 45 53 89 112 l 225 112 l 225 -517 l 271 -517 l 271 -40 b 360 -118 295 -92 325 -118 b 449 62 420 -118 449 -59 l 405 62 b 369 -10 405 14 393 -10 b 348 -6 363 -10 356 -9 b 251 217 312 9 279 84 l 248 248 l 135 248 b 0 73 45 248 0 189 z',\n        },\n        accSagittal5v11SmallDiesisDown: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -73 b 135 -248 0 -189 45 -248 l 248 -248 l 251 -217 b 348 6 279 -84 312 -9 b 369 10 356 9 363 10 b 405 -62 393 10 405 -14 l 449 -62 b 360 118 449 59 420 118 b 271 40 325 118 295 92 l 271 517 l 225 517 l 225 -112 l 180 -112 b 45 68 89 -112 45 -53 l 45 248 l 0 248 z',\n        },\n        accSagittalSharp5v11SDown: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 45 -203 b 112 -23 45 -84 68 -23 l 135 -23 l 135 -517 l 180 -517 l 180 -23 b 242 37 203 -23 225 -3 b 315 -89 262 -23 285 -63 l 315 -517 l 360 -517 l 360 -112 l 383 -112 b 495 68 458 -112 495 -53 l 449 68 b 399 -4 449 20 433 -4 b 248 248 297 -4 261 171 b 157 68 222 127 192 68 l 89 68 b 0 -203 30 68 0 -23 z',\n        },\n        accSagittalFlat5v11SUp: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 203 b 89 -68 0 23 30 -68 l 157 -68 b 248 -248 192 -68 222 -127 b 399 4 261 -171 297 4 b 449 -68 433 4 449 -20 l 495 -68 b 383 112 495 53 458 112 l 360 112 l 360 517 l 315 517 l 315 89 b 242 -37 285 63 262 23 b 180 23 225 3 203 23 l 180 517 l 135 517 l 135 23 l 112 23 b 45 203 68 23 45 84 z',\n        },\n        accSagittalSharp7v11CDown: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 89 -112 l 89 -517 l 135 -517 l 135 -95 b 206 37 163 -73 187 -30 b 271 -23 225 -3 248 -23 l 271 -517 l 315 -517 l 315 -23 l 383 -23 b 449 -203 428 -23 449 -84 l 495 -203 b 405 68 495 -23 465 68 l 292 68 b 203 248 258 68 228 127 b 101 0 173 98 138 16 b 81 -3 94 0 86 -3 b 45 68 56 -3 45 20 l 0 68 b 89 -112 0 -52 30 -112 z',\n        },\n        accSagittalFlat7v11CUp: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 89 112 b 0 -68 30 112 0 52 l 45 -68 b 81 3 45 -20 56 3 b 101 0 86 3 94 0 b 203 -248 138 -16 173 -98 b 292 -68 228 -127 258 -68 l 405 -68 b 495 203 465 -68 495 23 l 449 203 b 383 23 449 84 428 23 l 315 23 l 315 517 l 271 517 l 271 23 b 206 -37 248 23 225 3 b 135 95 187 30 163 73 l 135 517 l 89 517 z',\n        },\n        accSagittalSharp55CDown: {\n            x_min: 0,\n            x_max: 250,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -271 l 135 -125 l 135 -517 l 180 -517 l 180 -78 l 315 65 l 315 -517 l 360 -517 l 360 248 l 337 248 l 0 -112 z',\n        },\n        accSagittalFlat55CUp: {\n            x_min: 0,\n            x_max: 250,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 112 l 337 -248 l 360 -248 l 360 517 l 315 517 l 315 -65 l 180 78 l 180 517 l 135 517 l 135 125 l 0 271 z',\n        },\n        accSagittalSharp17CDown: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 45 -248 l 45 -68 b 180 109 45 36 89 95 l 180 -517 l 225 -517 l 225 112 l 271 112 b 360 -89 292 13 321 -55 l 360 -517 l 405 -517 l 405 -112 l 428 -112 b 540 68 504 -112 540 -53 l 495 68 b 445 -4 495 20 480 -4 b 292 248 343 -4 307 171 l 180 248 b 0 68 60 248 0 187 l 0 -248 z',\n        },\n        accSagittalFlat17CUp: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 248 l 0 -68 b 180 -248 0 -187 60 -248 l 292 -248 b 445 4 307 -171 343 4 b 495 -68 480 4 495 -20 l 540 -68 b 428 112 540 53 504 112 l 405 112 l 405 517 l 360 517 l 360 89 b 271 -112 321 55 292 -13 l 225 -112 l 225 517 l 180 517 l 180 -109 b 45 68 89 -95 45 -36 l 45 248 z',\n        },\n        accSagittalSharp7v11kDown: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -32 l 405 138 l 405 13 l 0 -157 l 0 -256 l 225 -161 l 225 -517 l 271 -517 l 271 -144 l 405 -86 l 405 -517 l 449 -517 l 449 248 l 428 248 l 0 68 z',\n        },\n        accSagittalFlat7v11kUp: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -68 l 428 -248 l 449 -248 l 449 517 l 405 517 l 405 86 l 271 144 l 271 517 l 225 517 l 225 161 l 0 256 l 0 157 l 405 -13 l 405 -138 l 0 32 z',\n        },\n        accSagittalSharp7v11kUp: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 135 -112 l 135 -517 l 180 -517 l 180 -105 b 271 -23 217 -94 248 -65 l 271 -517 l 315 -517 l 315 -23 b 405 -105 337 -65 369 -94 l 405 -517 l 449 -517 l 449 -112 b 585 68 540 -112 585 -53 l 540 68 b 475 -4 540 20 517 -4 b 292 248 350 -4 315 148 b 112 -4 274 148 236 -4 b 45 68 68 -4 45 20 l 0 68 b 135 -112 0 -53 45 -112 z',\n        },\n        accSagittalFlat7v11kDown: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 135 112 b 0 -68 45 112 0 53 l 45 -68 b 112 4 45 -20 68 4 b 292 -248 236 4 274 -148 b 475 4 315 -148 350 4 b 540 -68 517 4 540 -20 l 585 -68 b 449 112 585 53 540 112 l 449 517 l 405 517 l 405 105 b 315 23 369 94 337 65 l 315 517 l 271 517 l 271 23 b 180 105 248 65 217 94 l 180 517 l 135 517 z',\n        },\n        accSagittalSharp17CUp: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 45 -203 b 135 -23 45 -84 75 -23 l 135 -517 l 180 -517 l 180 -23 l 203 -23 b 271 14 229 -23 251 -10 l 271 -517 l 315 -517 l 315 -23 b 405 -105 337 -65 369 -94 l 405 -517 l 449 -517 l 449 -112 b 585 68 540 -112 585 -53 l 540 68 b 475 -4 540 20 517 -4 b 292 248 350 -4 312 150 b 180 68 268 127 230 68 l 112 68 b 0 -203 37 68 0 -23 z',\n        },\n        accSagittalFlat17CDown: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 203 b 112 -68 0 23 37 -68 l 180 -68 b 292 -248 230 -68 268 -127 b 475 4 312 -150 350 4 b 540 -68 517 4 540 -20 l 585 -68 b 449 112 585 53 540 112 l 449 517 l 405 517 l 405 105 b 315 23 369 94 337 65 l 315 517 l 271 517 l 271 -14 b 203 23 251 10 229 23 l 180 23 l 180 517 l 135 517 l 135 23 b 45 203 75 23 45 84 z',\n        },\n        accSagittalSharp55CUp: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 45 -517 l 45 78 l 135 10 l 135 -517 l 180 -517 l 180 -23 l 271 -92 l 271 -517 l 315 -517 l 315 -127 l 495 -264 l 495 -112 l 23 248 l 0 248 l 0 -517 z',\n        },\n        accSagittalFlat55CDown: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 517 l 0 -248 l 23 -248 l 495 112 l 495 264 l 315 127 l 315 517 l 271 517 l 271 92 l 180 23 l 180 517 l 135 517 l 135 -10 l 45 -78 l 45 517 z',\n        },\n        accSagittalSharp7v11CUp: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 68 l 0 -248 l 45 -248 l 45 -68 b 180 86 45 6 89 58 l 180 -517 l 225 -517 l 225 98 b 315 109 252 104 282 108 l 315 -517 l 360 -517 l 360 112 l 449 112 l 449 -517 l 495 -517 l 495 248 l 360 248 b 0 68 121 248 0 189 z',\n        },\n        accSagittalFlat7v11CDown: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -68 b 360 -248 0 -189 121 -248 l 495 -248 l 495 517 l 449 517 l 449 -112 l 360 -112 l 360 517 l 315 517 l 315 -109 b 225 -98 282 -108 252 -104 l 225 517 l 180 517 l 180 -86 b 45 68 89 -58 45 -6 l 45 248 l 0 248 z',\n        },\n        accSagittalSharp5v11SUp: {\n            x_min: 0,\n            x_max: 438,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -248 l 45 -248 l 45 -68 b 180 104 45 26 89 82 l 180 -517 l 225 -517 l 225 112 l 315 112 l 315 -517 l 360 -517 l 360 -23 b 449 -105 383 -65 415 -94 l 449 -517 l 495 -517 l 495 -112 b 631 68 585 -112 631 -53 l 585 68 b 520 -4 585 20 563 -4 b 337 248 396 -4 360 150 l 225 248 b 0 68 76 248 0 187 z',\n        },\n        accSagittalFlat5v11SDown: {\n            x_min: 0,\n            x_max: 438,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -68 b 225 -248 0 -187 76 -248 l 337 -248 b 520 4 360 -150 396 4 b 585 -68 563 4 585 -20 l 631 -68 b 495 112 631 53 585 112 l 495 517 l 449 517 l 449 105 b 360 23 415 94 383 65 l 360 517 l 315 517 l 315 -112 l 225 -112 l 225 517 l 180 517 l 180 -104 b 45 68 89 -82 45 -26 l 45 248 l 0 248 z',\n        },\n        accSagittalDoubleSharp5v11SDown: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 45 -203 b 135 -23 45 -84 75 -23 l 203 -23 b 262 4 225 -23 245 -13 l 265 0 l 89 -503 l 141 -517 l 292 -82 l 444 -517 l 495 -503 l 341 -60 b 449 -112 370 -95 405 -112 b 585 68 540 -112 585 -53 l 540 68 b 475 -4 540 20 517 -4 b 292 248 350 -4 312 150 b 180 68 268 127 230 68 l 112 68 b 0 -203 37 68 0 -23 z',\n        },\n        accSagittalDoubleFlat5v11SUp: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 203 b 112 -68 0 23 37 -68 l 180 -68 b 292 -248 230 -68 268 -127 b 475 4 312 -150 350 4 b 540 -68 517 4 540 -20 l 585 -68 b 449 112 585 53 540 112 b 341 60 405 112 370 95 l 495 503 l 444 517 l 292 82 l 141 517 l 89 503 l 265 0 l 262 -4 b 203 23 245 13 225 23 l 135 23 b 45 203 75 23 45 84 z',\n        },\n        accSagittalDoubleSharp7v11CDown: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 112 -112 b 193 -73 143 -112 170 -99 l 45 -501 l 95 -517 l 248 -81 l 397 -517 l 449 -503 l 275 0 l 278 4 b 337 -23 295 -13 315 -23 l 405 -23 b 495 -203 465 -23 495 -84 l 540 -203 b 428 68 540 -23 503 68 l 360 68 b 248 248 310 68 271 127 b 122 0 217 98 176 16 b 95 -3 112 0 104 -3 b 45 68 60 -3 45 20 l 0 68 b 112 -112 0 -52 36 -112 z',\n        },\n        accSagittalDoubleFlat7v11CUp: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 112 112 b 0 -68 36 112 0 52 l 45 -68 b 95 3 45 -20 60 3 b 122 0 104 3 112 0 b 248 -248 176 -16 217 -98 b 360 -68 271 -127 310 -68 l 428 -68 b 540 203 503 -68 540 23 l 495 203 b 405 23 495 84 465 23 l 337 23 b 278 -4 315 23 295 13 l 275 0 l 449 503 l 397 517 l 248 81 l 95 517 l 45 501 l 193 73 b 112 112 170 99 143 112 z',\n        },\n        accSagittalDoubleSharp55CDown: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 428 248 l 0 -112 l 0 -266 l 307 -7 l 135 -503 l 186 -517 l 337 -82 l 488 -517 l 540 -503 l 366 0 l 386 59 l 449 112 l 449 248 z',\n        },\n        accSagittalDoubleFlat55CUp: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 449 -248 l 449 -112 l 386 -59 l 366 0 l 540 503 l 488 517 l 337 82 l 186 517 l 135 503 l 307 7 l 0 266 l 0 112 l 428 -248 z',\n        },\n        accSagittalDoubleSharp17CDown: {\n            x_min: 0,\n            x_max: 438,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 45 -248 l 45 -68 b 271 112 45 53 120 112 l 310 0 l 135 -503 l 186 -517 l 337 -82 l 488 -517 l 540 -503 l 387 -62 b 495 -112 416 -95 452 -112 b 631 68 585 -112 631 -53 l 585 68 b 520 -4 585 20 563 -4 b 337 248 396 -4 360 150 l 225 248 b 0 68 76 248 0 187 l 0 -248 z',\n        },\n        accSagittalDoubleFlat17CUp: {\n            x_min: 0,\n            x_max: 438,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 248 l 0 -68 b 225 -248 0 -187 76 -248 l 337 -248 b 520 4 360 -150 396 4 b 585 -68 563 4 585 -20 l 631 -68 b 495 112 631 53 585 112 b 387 62 452 112 416 95 l 540 503 l 488 517 l 337 82 l 186 517 l 135 503 l 310 0 l 271 -112 b 45 68 120 -112 45 -53 l 45 248 z',\n        },\n        accSagittalDoubleSharp7v11kDown: {\n            x_min: 0,\n            x_max: 438,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 68 l 0 -30 l 366 96 l 399 0 l 392 -23 l 0 -157 l 0 -255 l 353 -135 l 225 -503 l 276 -517 l 428 -82 l 579 -517 l 631 -503 l 455 0 l 507 145 l 540 157 l 540 248 l 517 248 z m 416 115 l 442 124 l 428 82 z',\n        },\n        accSagittalDoubleFlat7v11kUp: {\n            x_min: 0,\n            x_max: 438,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 517 -248 l 540 -248 l 540 -157 l 507 -145 l 455 0 l 631 503 l 579 517 l 428 82 l 276 517 l 225 503 l 353 135 l 0 255 l 0 157 l 392 23 l 399 0 l 366 -96 l 0 30 l 0 -68 z m 428 -82 l 442 -124 l 416 -115 z',\n        },\n        accSagittal23CommaUp: {\n            x_min: 0,\n            x_max: 188,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -517 l 45 -517 l 45 -4 b 68 -23 53 -17 60 -23 l 180 -23 b 225 -203 210 -23 225 -82 l 271 -203 b 206 68 271 -23 248 68 l 89 68 b 23 248 71 68 48 127 l 0 248 z',\n        },\n        accSagittal23CommaDown: {\n            x_min: 0,\n            x_max: 188,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -248 l 23 -248 b 89 -68 48 -127 71 -68 l 206 -68 b 271 203 248 -68 271 23 l 225 203 b 180 23 225 82 210 23 l 68 23 b 45 4 60 23 53 17 l 45 517 l 0 517 z',\n        },\n        accSagittal5v19CommaUp: {\n            x_min: 0,\n            x_max: 156,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -284 l 180 33 l 180 -517 l 225 -517 l 225 248 l 203 248 b 86 112 151 157 112 112 b 45 157 59 112 45 127 l 0 157 b 76 23 0 72 26 27 l 0 -112 z',\n        },\n        accSagittal5v19CommaDown: {\n            x_min: 0,\n            x_max: 156,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 112 l 76 -23 b 0 -157 26 -27 0 -72 l 45 -157 b 86 -112 45 -127 59 -112 b 203 -248 112 -112 151 -157 l 225 -248 l 225 517 l 180 517 l 180 -33 l 0 284 z',\n        },\n        accSagittal5v23SmallDiesisUp: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -284 l 180 33 l 180 -517 l 225 -517 l 225 -4 b 248 -23 233 -17 240 -23 l 360 -23 b 405 -203 390 -23 405 -82 l 449 -203 b 386 68 449 -23 428 68 l 271 68 b 203 248 251 68 228 127 l 0 -112 z',\n        },\n        accSagittal5v23SmallDiesisDown: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 112 l 203 -248 b 271 -68 228 -127 251 -68 l 386 -68 b 449 203 428 -68 449 23 l 405 203 b 360 23 405 82 390 23 l 248 23 b 225 4 240 23 233 17 l 225 517 l 180 517 l 180 -33 l 0 284 z',\n        },\n        accSagittalSharp5v23SDown: {\n            x_min: 0,\n            x_max: 281,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -517 l 45 -517 l 45 6 b 89 -23 59 -13 73 -23 l 180 -23 l 180 -517 l 225 -517 l 225 -23 l 292 -23 b 360 -203 337 -23 360 -84 l 405 -203 b 315 68 405 -23 374 68 l 112 68 b 23 248 78 68 48 127 l 0 248 z',\n        },\n        accSagittalFlat5v23SUp: {\n            x_min: 0,\n            x_max: 281,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -248 l 23 -248 b 112 -68 48 -127 78 -68 l 315 -68 b 405 203 374 -68 405 23 l 360 203 b 292 23 360 84 337 23 l 225 23 l 225 517 l 180 517 l 180 23 l 89 23 b 45 -6 73 23 59 13 l 45 517 l 0 517 z',\n        },\n        accSagittalSharp5v19CDown: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 68 b 89 -112 0 -52 30 -112 l 89 -517 l 135 -517 l 135 -95 b 225 112 173 -65 203 4 l 271 112 l 271 -517 l 315 -517 l 315 107 b 405 -68 374 89 405 30 l 405 -248 l 449 -248 l 449 68 b 315 248 449 189 405 248 l 203 248 b 101 0 173 98 138 16 b 81 -3 94 0 86 -3 b 45 68 56 -3 45 23 z',\n        },\n        accSagittalFlat5v19CUp: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 45 -68 b 81 3 45 -23 56 3 b 101 0 86 3 94 0 b 203 -248 138 -16 173 -98 l 315 -248 b 449 -68 405 -248 449 -189 l 449 248 l 405 248 l 405 68 b 315 -107 405 -30 374 -89 l 315 517 l 271 517 l 271 -112 l 225 -112 b 135 95 203 -4 173 65 l 135 517 l 89 517 l 89 112 b 0 -68 30 112 0 52 z',\n        },\n        accSagittalSharp23CDown: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 135 -82 l 135 -517 l 180 -517 l 180 -17 l 239 68 b 315 -23 261 7 287 -23 l 315 -517 l 360 -517 l 360 -23 l 428 -23 b 495 -203 472 -23 495 -84 l 540 -203 b 449 68 540 -23 510 68 l 337 68 b 248 248 302 68 271 127 l 0 -112 l 0 -276 z',\n        },\n        accSagittalFlat23CUp: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 276 l 0 112 l 248 -248 b 337 -68 271 -127 302 -68 l 449 -68 b 540 203 510 -68 540 23 l 495 203 b 428 23 495 84 472 23 l 360 23 l 360 517 l 315 517 l 315 23 b 239 -68 287 23 261 -7 l 180 17 l 180 517 l 135 517 l 135 82 z',\n        },\n        accSagittalSharp23CUp: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -517 l 45 -517 l 45 14 b 112 -23 63 -10 86 -23 l 135 -23 l 135 -517 l 180 -517 l 180 -23 l 271 -23 l 271 -517 l 315 -517 l 315 -23 l 360 -23 b 449 -203 420 -23 449 -84 l 495 -203 b 383 68 495 -23 458 68 l 135 68 b 23 248 85 68 48 127 l 0 248 z',\n        },\n        accSagittalFlat23CDown: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -248 l 23 -248 b 135 -68 48 -127 85 -68 l 383 -68 b 495 203 458 -68 495 23 l 449 203 b 360 23 449 84 420 23 l 315 23 l 315 517 l 271 517 l 271 23 l 180 23 l 180 517 l 135 517 l 135 23 l 112 23 b 45 -14 86 23 63 10 l 45 517 l 0 517 z',\n        },\n        accSagittalSharp5v19CUp: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -112 l 0 -266 l 135 -153 l 135 -517 l 180 -517 l 180 -115 l 271 -39 l 271 -517 l 315 -517 l 315 0 l 405 75 l 405 -517 l 449 -517 l 449 248 l 428 248 b 130 68 285 127 186 68 b 45 157 73 68 45 98 l 0 157 b 112 -20 0 53 37 -6 z',\n        },\n        accSagittalFlat5v19CDown: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 112 20 b 0 -157 37 6 0 -53 l 45 -157 b 130 -68 45 -98 73 -68 b 428 -248 186 -68 285 -127 l 449 -248 l 449 517 l 405 517 l 405 -75 l 315 0 l 315 517 l 271 517 l 271 39 l 180 115 l 180 517 l 135 517 l 135 153 l 0 266 l 0 112 z',\n        },\n        accSagittalSharp5v23SUp: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 135 -108 l 135 -517 l 180 -517 l 180 -53 l 271 58 l 271 -517 l 315 -517 l 315 14 b 383 -23 334 -10 357 -23 l 405 -23 l 405 -517 l 449 -517 l 449 -23 b 540 -203 510 -23 540 -84 l 585 -203 b 472 68 585 -23 547 68 l 405 68 b 292 248 356 68 318 127 l 0 -112 l 0 -274 z',\n        },\n        accSagittalFlat5v23SDown: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 274 l 0 112 l 292 -248 b 405 -68 318 -127 356 -68 l 472 -68 b 585 203 547 -68 585 23 l 540 203 b 449 23 540 84 510 23 l 449 517 l 405 517 l 405 23 l 383 23 b 315 -14 357 23 334 10 l 315 517 l 271 517 l 271 -58 l 180 53 l 180 517 l 135 517 l 135 108 z',\n        },\n        accSagittalDoubleSharp5v23SDown: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 52 -517 l 203 -81 l 354 -517 l 405 -503 l 239 -23 l 449 -23 b 540 -203 510 -23 540 -84 l 585 -203 b 472 68 585 -23 547 68 l 225 68 b 112 248 176 68 138 127 l 89 248 l 89 112 b 170 -14 109 45 135 0 l 0 -501 z',\n        },\n        accSagittalDoubleFlat5v23SUp: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 501 l 170 14 b 89 -112 135 0 109 -45 l 89 -248 l 112 -248 b 225 -68 138 -127 176 -68 l 472 -68 b 585 203 547 -68 585 23 l 540 203 b 449 23 540 84 510 23 l 239 23 l 405 503 l 354 517 l 203 81 l 52 517 z',\n        },\n        accSagittalDoubleSharp5v19CDown: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 68 b 112 -112 0 -52 36 -112 b 193 -73 143 -112 170 -99 l 45 -501 l 95 -517 l 248 -81 l 397 -517 l 449 -501 l 275 0 l 315 112 b 495 -68 435 112 495 53 l 495 -248 l 540 -248 l 540 68 b 360 248 540 189 480 248 l 248 248 b 122 0 217 98 176 16 b 95 -3 112 0 104 -3 b 45 68 60 -3 45 20 z',\n        },\n        accSagittalDoubleFlat5v19CUp: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 45 -68 b 95 3 45 -20 60 3 b 122 0 104 3 112 0 b 248 -248 176 -16 217 -98 l 360 -248 b 540 -68 480 -248 540 -189 l 540 248 l 495 248 l 495 68 b 315 -112 495 -53 435 -112 l 275 0 l 449 501 l 397 517 l 248 81 l 95 517 l 45 501 l 193 73 b 112 112 170 99 143 112 b 0 -68 36 112 0 52 z',\n        },\n        accSagittalDoubleSharp23CDown: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 252 35 l 265 0 l 89 -503 l 141 -517 l 292 -82 l 444 -517 l 495 -503 l 321 0 l 323 4 b 383 -23 340 -13 360 -23 l 449 -23 b 540 -203 510 -23 540 -84 l 585 -203 b 472 68 585 -23 547 68 l 405 68 b 292 248 356 68 318 127 l 0 -112 l 0 -274 z',\n        },\n        accSagittalDoubleFlat23CUp: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 274 l 0 112 l 292 -248 b 405 -68 318 -127 356 -68 l 472 -68 b 585 203 547 -68 585 23 l 540 203 b 449 23 540 84 510 23 l 383 23 b 323 -4 360 23 340 13 l 321 0 l 495 503 l 444 517 l 292 82 l 141 517 l 89 503 l 265 0 l 252 -35 z',\n        },\n        accSagittal19SchismaUp: {\n            x_min: 0,\n            x_max: 125,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 68 -112 b 135 -45 89 -112 112 -89 l 135 -517 l 180 -517 l 180 248 l 157 248 b 79 0 127 98 101 16 b 68 -3 73 0 68 -3 b 45 68 52 -3 45 20 l 0 68 b 68 -112 0 -52 23 -112 z',\n        },\n        accSagittal19SchismaDown: {\n            x_min: 0,\n            x_max: 125,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 68 112 b 0 -68 23 112 0 52 l 45 -68 b 68 3 45 -20 52 3 b 79 0 68 3 73 0 b 157 -248 101 -16 127 -98 l 180 -248 l 180 517 l 135 517 l 135 45 b 68 112 112 89 89 112 z',\n        },\n        accSagittal17KleismaUp: {\n            x_min: 0,\n            x_max: 156,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 45 -203 b 89 -23 45 -82 60 -23 l 157 -23 b 180 -4 164 -23 173 -17 l 180 -517 l 225 -517 l 225 248 l 203 248 b 135 68 177 127 154 68 l 68 68 b 0 -203 23 68 0 -23 z',\n        },\n        accSagittal17KleismaDown: {\n            x_min: 0,\n            x_max: 156,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 203 b 68 -68 0 23 23 -68 l 135 -68 b 203 -248 154 -68 177 -127 l 225 -248 l 225 517 l 180 517 l 180 4 b 157 23 173 17 164 23 l 89 23 b 45 203 60 23 45 82 z',\n        },\n        accSagittal143CommaUp: {\n            x_min: 0,\n            x_max: 156,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -203 l 45 -203 b 89 -23 45 -82 60 -23 l 157 -23 b 180 -4 164 -23 173 -17 l 180 -517 l 225 -517 l 225 248 l 203 248 b 135 68 177 127 154 68 l 105 68 b 45 157 65 68 45 98 l 0 157 b 23 20 0 95 7 50 b 0 -203 7 -23 0 -98 z',\n        },\n        accSagittal143CommaDown: {\n            x_min: 0,\n            x_max: 156,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 203 b 23 -20 0 98 7 23 b 0 -157 7 -50 0 -95 l 45 -157 b 105 -68 45 -98 65 -68 l 135 -68 b 203 -248 154 -68 177 -127 l 225 -248 l 225 517 l 180 517 l 180 4 b 157 23 173 17 164 23 l 89 23 b 45 203 60 23 45 82 z',\n        },\n        accSagittal11v49CommaUp: {\n            x_min: 0,\n            x_max: 188,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 45 -292 b 89 -157 45 -203 60 -157 l 203 -157 b 225 -143 210 -157 217 -153 l 225 -517 l 271 -517 l 271 248 l 248 248 b 180 157 233 187 210 157 l 68 157 b 0 -68 23 157 0 82 l 45 -68 b 89 68 45 23 60 68 l 203 68 b 225 84 209 68 216 72 l 225 -36 b 180 -68 213 -58 199 -68 l 68 -68 b 0 -292 23 -68 0 -143 z',\n        },\n        accSagittal11v49CommaDown: {\n            x_min: 0,\n            x_max: 188,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 292 b 68 68 0 143 23 68 l 180 68 b 225 36 199 68 213 58 l 225 -84 b 203 -68 216 -72 209 -68 l 89 -68 b 45 68 60 -68 45 -23 l 0 68 b 68 -157 0 -82 23 -157 l 180 -157 b 248 -248 210 -157 233 -187 l 271 -248 l 271 517 l 225 517 l 225 143 b 203 157 217 153 210 157 l 89 157 b 45 292 60 157 45 203 z',\n        },\n        accSagittal19CommaUp: {\n            x_min: 0,\n            x_max: 281,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 68 b 68 -112 0 -52 23 -112 b 135 -45 89 -112 112 -89 l 135 -517 l 180 -517 l 180 -4 b 203 -23 187 -17 196 -23 l 315 -23 b 360 -203 346 -23 360 -82 l 405 -203 b 341 68 405 -23 383 68 l 225 68 b 157 248 206 68 183 127 b 79 0 127 98 101 16 b 68 -3 73 0 68 -3 b 45 68 52 -3 45 20 z',\n        },\n        accSagittal19CommaDown: {\n            x_min: 0,\n            x_max: 281,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 45 -68 b 68 3 45 -20 52 3 b 79 0 68 3 73 0 b 157 -248 101 -16 127 -98 b 225 -68 183 -127 206 -68 l 341 -68 b 405 203 383 -68 405 23 l 360 203 b 315 23 360 82 346 23 l 203 23 b 180 4 196 23 187 17 l 180 517 l 135 517 l 135 45 b 68 112 112 89 89 112 b 0 -68 23 112 0 52 z',\n        },\n        accSagittal7v19CommaUp: {\n            x_min: 0,\n            x_max: 250,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 68 b 68 -112 0 -52 23 -112 b 135 -45 89 -112 112 -89 l 135 -517 l 180 -517 l 180 112 l 225 112 b 315 -68 285 112 315 53 l 315 -248 l 360 -248 l 360 68 b 271 248 360 187 330 248 l 157 248 b 79 0 127 98 101 16 b 68 -3 73 0 68 -3 b 45 68 52 -3 45 20 z',\n        },\n        accSagittal7v19CommaDown: {\n            x_min: 0,\n            x_max: 250,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 45 -68 b 68 3 45 -20 52 3 b 79 0 68 3 73 0 b 157 -248 101 -16 127 -98 l 271 -248 b 360 -68 330 -248 360 -187 l 360 248 l 315 248 l 315 68 b 225 -112 315 -53 285 -112 l 180 -112 l 180 517 l 135 517 l 135 45 b 68 112 112 89 89 112 b 0 -68 23 112 0 52 z',\n        },\n        accSagittal49SmallDiesisUp: {\n            x_min: 0,\n            x_max: 281,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -203 l 45 -203 b 89 -23 45 -82 60 -23 l 157 -23 b 180 -4 164 -23 173 -17 l 180 -517 l 225 -517 l 225 112 l 271 112 b 360 -68 330 112 360 53 l 360 -248 l 405 -248 l 405 68 b 315 248 405 187 374 248 l 203 248 b 135 68 177 127 154 68 l 68 68 b 0 -203 23 68 0 -23 z',\n        },\n        accSagittal49SmallDiesisDown: {\n            x_min: 0,\n            x_max: 281,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 203 b 68 -68 0 23 23 -68 l 135 -68 b 203 -248 154 -68 177 -127 l 315 -248 b 405 -68 374 -248 405 -187 l 405 248 l 360 248 l 360 68 b 271 -112 360 -53 330 -112 l 225 -112 l 225 517 l 180 517 l 180 4 b 157 23 173 17 164 23 l 89 23 b 45 203 60 23 45 82 z',\n        },\n        accSagittal23SmallDiesisUp: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 45 -203 b 89 -23 45 -82 60 -23 l 157 -23 b 180 -4 164 -23 173 -17 l 180 -517 l 225 -517 l 225 58 l 495 -274 l 495 -112 l 203 248 b 135 68 177 127 154 68 l 68 68 b 0 -203 23 68 0 -23 z',\n        },\n        accSagittal23SmallDiesisDown: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 203 b 68 -68 0 23 23 -68 l 135 -68 b 203 -248 154 -68 177 -127 l 495 112 l 495 274 l 225 -58 l 225 517 l 180 517 l 180 4 b 157 23 173 17 164 23 l 89 23 b 45 203 60 23 45 82 z',\n        },\n        accSagittal5v13MediumDiesisUp: {\n            x_min: 0,\n            x_max: 250,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -259 l 315 -89 l 315 -517 l 360 -517 l 360 248 l 337 248 b 128 180 253 203 184 180 b 45 248 73 180 45 203 l 0 248 b 52 95 0 170 17 120 l 0 68 l 0 -33 l 315 135 l 315 10 l 0 -157 z',\n        },\n        accSagittal5v13MediumDiesisDown: {\n            x_min: 0,\n            x_max: 250,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 157 l 315 -10 l 315 -135 l 0 33 l 0 -68 l 52 -95 b 0 -248 17 -120 0 -170 l 45 -248 b 128 -180 45 -203 73 -180 b 337 -248 184 -180 253 -203 l 360 -248 l 360 517 l 315 517 l 315 89 l 0 259 z',\n        },\n        accSagittal11v19MediumDiesisUp: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 45 -248 l 45 -68 b 180 112 45 53 89 112 l 225 112 l 225 -517 l 271 -517 l 271 -4 b 292 -23 278 -17 285 -23 l 405 -23 b 449 -203 435 -23 449 -82 l 495 -203 b 431 68 495 -23 472 68 l 315 68 b 248 248 295 68 271 127 l 135 248 b 0 68 45 248 0 187 l 0 -248 z',\n        },\n        accSagittal11v19MediumDiesisDown: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 248 l 0 -68 b 135 -248 0 -187 45 -248 l 248 -248 b 315 -68 271 -127 295 -68 l 431 -68 b 495 203 472 -68 495 23 l 449 203 b 405 23 449 82 435 23 l 292 23 b 271 4 285 23 278 17 l 271 517 l 225 517 l 225 -112 l 180 -112 b 45 68 89 -112 45 -53 l 45 248 z',\n        },\n        accSagittal49MediumDiesisUp: {\n            x_min: 0,\n            x_max: 250,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -68 l 0 -248 l 45 -248 l 315 -94 l 315 -517 l 360 -517 l 360 248 l 225 248 b 0 -68 75 248 0 143 z m 45 -68 b 225 112 45 53 105 112 l 315 112 l 315 10 l 45 -145 z',\n        },\n        accSagittal49MediumDiesisDown: {\n            x_min: 0,\n            x_max: 250,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 68 b 225 -248 0 -143 75 -248 l 360 -248 l 360 517 l 315 517 l 315 94 l 45 248 l 0 248 z m 45 145 l 315 -10 l 315 -112 l 225 -112 b 45 68 105 -112 45 -53 z',\n        },\n        accSagittal5v49MediumDiesisUp: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -89 l 0 -248 l 225 53 l 225 -517 l 271 -517 l 271 53 l 495 -248 l 495 -89 l 248 248 b 89 89 170 143 118 89 b 45 157 60 89 45 112 l 0 157 b 68 3 0 68 23 16 z',\n        },\n        accSagittal5v49MediumDiesisDown: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 68 -3 b 0 -157 23 -16 0 -68 l 45 -157 b 89 -89 45 -112 60 -89 b 248 -248 118 -89 170 -143 l 495 89 l 495 248 l 271 -53 l 271 517 l 225 517 l 225 -53 l 0 248 l 0 89 z',\n        },\n        accSagittal49LargeDiesisUp: {\n            x_min: 0,\n            x_max: 281,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -517 l 45 -517 l 45 -89 l 360 -248 l 405 -248 l 405 -68 b 180 248 405 143 330 248 l 0 248 z m 45 12 l 45 112 l 180 112 b 360 -68 300 112 360 53 l 360 -147 z',\n        },\n        accSagittal49LargeDiesisDown: {\n            x_min: 0,\n            x_max: 281,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -248 l 180 -248 b 405 68 330 -248 405 -143 l 405 248 l 360 248 l 45 89 l 45 517 l 0 517 z m 360 147 l 360 68 b 180 -112 360 -53 300 -112 l 45 -112 l 45 -12 z',\n        },\n        accSagittal11v19LargeDiesisUp: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -517 l 45 -517 l 45 -86 l 449 -256 l 449 -157 l 45 13 l 45 138 l 449 -30 l 449 68 l 23 248 l 0 248 z',\n        },\n        accSagittal11v19LargeDiesisDown: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -248 l 23 -248 l 449 -68 l 449 30 l 45 -138 l 45 -13 l 449 157 l 449 256 l 45 86 l 45 517 l 0 517 z',\n        },\n        accSagittal5v13LargeDiesisUp: {\n            x_min: 0,\n            x_max: 438,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 68 b 89 -112 0 -52 30 -112 b 180 -35 125 -112 157 -86 l 180 -517 l 225 -517 l 225 -86 l 631 -256 l 631 -157 l 225 13 l 225 138 l 631 -30 l 631 68 l 203 248 b 101 0 173 98 138 16 b 81 -3 94 0 86 -3 b 45 68 56 -3 45 20 z',\n        },\n        accSagittal5v13LargeDiesisDown: {\n            x_min: 0,\n            x_max: 438,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 45 -68 b 81 3 45 -20 56 3 b 101 0 86 3 94 0 b 203 -248 138 -16 173 -98 l 631 -68 l 631 30 l 225 -138 l 225 -13 l 631 157 l 631 256 l 225 86 l 225 517 l 180 517 l 180 35 b 89 112 157 86 125 112 b 0 -68 30 112 0 52 z',\n        },\n        accSagittalSharp23SDown: {\n            x_min: 0,\n            x_max: 250,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -203 l 45 -203 b 112 -23 45 -84 68 -23 l 135 -23 l 135 -517 l 180 -517 l 180 -23 l 271 -23 b 315 6 287 -23 301 -13 l 315 -517 l 360 -517 l 360 248 l 337 248 b 248 68 312 127 282 68 l 194 68 b 89 157 125 68 89 98 l 45 157 b 60 59 45 118 50 85 b 0 -203 20 30 0 -56 z',\n        },\n        accSagittalFlat23SUp: {\n            x_min: 0,\n            x_max: 250,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 203 b 60 -59 0 56 20 -30 b 45 -157 50 -85 45 -118 l 89 -157 b 194 -68 89 -98 125 -68 l 248 -68 b 337 -248 282 -68 312 -127 l 360 -248 l 360 517 l 315 517 l 315 -6 b 271 23 301 13 287 23 l 180 23 l 180 517 l 135 517 l 135 23 l 112 23 b 45 203 68 23 45 84 z',\n        },\n        accSagittalSharp49SDown: {\n            x_min: 0,\n            x_max: 250,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -292 l 45 -292 b 112 -157 45 -203 68 -157 l 135 -157 l 135 -517 l 180 -517 l 180 -157 l 271 -157 b 315 -135 285 -157 300 -150 l 315 -517 l 360 -517 l 360 248 l 337 248 b 248 157 323 187 292 157 l 89 157 b 0 -68 30 157 0 82 l 45 -68 b 112 68 45 23 68 68 l 271 68 b 315 89 284 68 300 75 l 315 -32 b 248 -68 298 -56 275 -68 l 89 -68 b 0 -292 29 -68 0 -143 z',\n        },\n        accSagittalFlat49SUp: {\n            x_min: 0,\n            x_max: 250,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 292 b 89 68 0 143 29 68 l 248 68 b 315 32 275 68 298 56 l 315 -89 b 271 -68 300 -75 284 -68 l 112 -68 b 45 68 68 -68 45 -23 l 0 68 b 89 -157 0 -82 30 -157 l 248 -157 b 337 -248 292 -157 323 -187 l 360 -248 l 360 517 l 315 517 l 315 135 b 271 157 300 150 285 157 l 180 157 l 180 517 l 135 517 l 135 157 l 112 157 b 45 292 68 157 45 203 z',\n        },\n        accSagittalSharp7v19CDown: {\n            x_min: 0,\n            x_max: 250,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -112 l 0 -271 l 135 -125 l 135 -517 l 180 -517 l 180 -78 l 315 65 l 315 -517 l 360 -517 l 360 248 l 337 248 b 118 89 239 143 166 89 b 45 157 68 89 45 112 l 0 157 b 89 -20 0 53 29 -6 z',\n        },\n        accSagittalFlat7v19CUp: {\n            x_min: 0,\n            x_max: 250,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 89 20 b 0 -157 29 6 0 -53 l 45 -157 b 118 -89 45 -112 68 -89 b 337 -248 166 -89 239 -143 l 360 -248 l 360 517 l 315 517 l 315 -65 l 180 78 l 180 517 l 135 517 l 135 125 l 0 271 l 0 112 z',\n        },\n        accSagittalSharp19CDown: {\n            x_min: 0,\n            x_max: 281,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -248 l 45 -248 l 45 -68 b 180 96 45 17 89 72 l 180 -517 l 225 -517 l 225 107 b 315 112 252 112 282 112 l 360 112 l 360 -517 l 405 -517 l 405 248 l 271 248 b 0 68 89 248 0 187 z',\n        },\n        accSagittalFlat19CUp: {\n            x_min: 0,\n            x_max: 281,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -68 b 271 -248 0 -187 89 -248 l 405 -248 l 405 517 l 360 517 l 360 -112 l 315 -112 b 225 -107 282 -112 252 -112 l 225 517 l 180 517 l 180 -96 b 45 68 89 -72 45 -17 l 45 248 l 0 248 z',\n        },\n        accSagittalSharp11v49CDown: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 45 -203 b 112 -23 45 -82 68 -23 l 135 -23 l 135 -517 l 180 -517 l 180 -23 b 271 112 215 -23 245 23 l 315 112 l 315 -517 l 360 -517 l 360 107 b 449 -68 420 89 449 30 l 449 -248 l 495 -248 l 495 68 b 360 248 495 189 449 248 l 248 248 b 157 68 222 128 192 68 l 89 68 b 0 -203 30 68 0 -23 z',\n        },\n        accSagittalFlat11v49CUp: {\n            x_min: 0,\n            x_max: 344,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 203 b 89 -68 0 23 30 -68 l 157 -68 b 248 -248 192 -68 222 -128 l 360 -248 b 495 -68 449 -248 495 -189 l 495 248 l 449 248 l 449 68 b 360 -107 449 -30 420 -89 l 360 517 l 315 517 l 315 -112 l 271 -112 b 180 23 245 -23 215 23 l 180 517 l 135 517 l 135 23 l 112 23 b 45 203 68 23 45 82 z',\n        },\n        accSagittalSharp143CDown: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 45 -203 b 112 -23 45 -84 68 -23 l 135 -23 l 135 -517 l 180 -517 l 180 -23 b 259 76 210 -23 236 10 l 315 17 l 315 -517 l 360 -517 l 360 -30 l 585 -271 l 585 -112 l 248 248 b 157 68 222 127 192 68 l 89 68 b 0 -203 30 68 0 -23 z',\n        },\n        accSagittalFlat143CUp: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 203 b 89 -68 0 23 30 -68 l 157 -68 b 248 -248 192 -68 222 -127 l 585 112 l 585 271 l 360 30 l 360 517 l 315 517 l 315 -17 l 259 -76 b 180 23 236 -10 210 23 l 180 517 l 135 517 l 135 23 l 112 23 b 45 203 68 23 45 84 z',\n        },\n        accSagittalSharp17kDown: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -157 l 0 -256 l 225 -161 l 225 -517 l 271 -517 l 271 -144 l 405 -86 l 405 -517 l 449 -517 l 449 248 l 428 248 b 145 171 305 196 210 171 b 45 248 78 171 45 196 l 0 248 b 79 101 0 170 26 121 l 0 68 l 0 -32 l 405 138 l 405 13 z',\n        },\n        accSagittalFlat17kUp: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 405 -13 l 405 -138 l 0 32 l 0 -68 l 79 -101 b 0 -248 26 -121 0 -170 l 45 -248 b 145 -171 45 -196 78 -171 b 428 -248 210 -171 305 -196 l 449 -248 l 449 517 l 405 517 l 405 86 l 271 144 l 271 517 l 225 517 l 225 161 l 0 256 l 0 157 z',\n        },\n        accSagittalSharp19sDown: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -248 l 45 -248 l 45 -68 b 180 109 45 36 89 95 l 180 -517 l 225 -517 l 225 112 l 271 112 b 360 -23 295 23 325 -23 l 360 -517 l 405 -517 l 405 -23 l 472 -23 b 540 -203 517 -23 540 -84 l 585 -203 b 495 68 585 -23 554 68 l 383 68 b 292 248 348 68 318 127 l 180 248 b 0 68 60 248 0 187 z',\n        },\n        accSagittalFlat19sUp: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -68 b 180 -248 0 -187 60 -248 l 292 -248 b 383 -68 318 -127 348 -68 l 495 -68 b 585 203 554 -68 585 23 l 540 203 b 472 23 540 84 517 23 l 405 23 l 405 517 l 360 517 l 360 23 b 271 -112 325 23 295 -23 l 225 -112 l 225 517 l 180 517 l 180 -109 b 45 68 89 -95 45 -36 l 45 248 l 0 248 z',\n        },\n        accSagittalSharp19sUp: {\n            x_min: 0,\n            x_max: 281,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 89 -96 l 89 -517 l 135 -517 l 135 -108 b 180 -112 148 -112 163 -112 b 225 -108 196 -112 210 -112 l 225 -517 l 271 -517 l 271 -94 b 360 -12 305 -78 337 -50 l 360 -517 l 405 -517 l 405 248 l 383 248 b 190 0 353 98 288 16 b 138 -3 171 0 153 -3 b 45 68 75 -3 45 20 l 0 68 b 89 -96 0 -17 30 -72 z',\n        },\n        accSagittalFlat19sDown: {\n            x_min: 0,\n            x_max: 281,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 89 96 b 0 -68 30 72 0 17 l 45 -68 b 138 3 45 -20 75 3 b 190 0 153 3 171 0 b 383 -248 288 -16 353 -98 l 405 -248 l 405 517 l 360 517 l 360 12 b 271 94 337 50 305 78 l 271 517 l 225 517 l 225 108 b 180 112 210 112 196 112 b 135 108 163 112 148 112 l 135 517 l 89 517 z',\n        },\n        accSagittalSharp17kUp: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 45 -203 b 135 -23 45 -84 75 -23 l 135 -517 l 180 -517 l 180 -23 l 271 -23 l 271 -517 l 315 -517 l 315 -23 l 337 -23 b 405 14 363 -23 386 -10 l 405 -517 l 449 -517 l 449 248 l 428 248 b 315 68 402 127 364 68 l 112 68 b 0 -203 37 68 0 -23 z',\n        },\n        accSagittalFlat17kDown: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 203 b 112 -68 0 23 37 -68 l 315 -68 b 428 -248 364 -68 402 -127 l 449 -248 l 449 517 l 405 517 l 405 -14 b 337 23 386 10 363 23 l 315 23 l 315 517 l 271 517 l 271 23 l 180 23 l 180 517 l 135 517 l 135 23 b 45 203 75 23 45 84 z',\n        },\n        accSagittalSharp143CUp: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 45 -203 b 135 -23 45 -84 75 -23 l 135 -517 l 180 -517 l 180 -23 l 271 -23 l 271 -517 l 315 -517 l 315 -23 l 337 -23 b 405 14 363 -23 386 -10 l 405 -517 l 449 -517 l 449 248 l 428 248 b 315 68 402 127 364 68 l 240 68 b 89 157 140 68 89 98 l 45 157 b 68 53 45 115 52 81 b 0 -203 23 23 0 -63 z',\n        },\n        accSagittalFlat143CDown: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 203 b 68 -53 0 63 23 -23 b 45 -157 52 -81 45 -115 l 89 -157 b 240 -68 89 -98 140 -68 l 315 -68 b 428 -248 364 -68 402 -127 l 449 -248 l 449 517 l 405 517 l 405 -14 b 337 23 386 10 363 23 l 315 23 l 315 517 l 271 517 l 271 23 l 180 23 l 180 517 l 135 517 l 135 23 b 45 203 75 23 45 84 z',\n        },\n        accSagittalSharp11v49CUp: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 45 -68 b 135 68 45 23 76 68 l 337 68 b 405 95 363 68 386 76 l 405 -27 b 315 -68 386 -55 356 -68 l 112 -68 b 0 -292 37 -68 0 -143 l 45 -292 b 135 -157 45 -203 75 -157 l 135 -517 l 180 -517 l 180 -157 l 271 -157 l 271 -517 l 315 -517 l 315 -157 l 337 -157 b 405 -130 360 -157 383 -148 l 405 -517 l 449 -517 l 449 248 l 428 248 b 315 157 413 187 376 157 l 112 157 b 0 -68 37 157 0 82 z',\n        },\n        accSagittalFlat11v49CDown: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 68 b 112 -157 0 -82 37 -157 l 315 -157 b 428 -248 376 -157 413 -187 l 449 -248 l 449 517 l 405 517 l 405 130 b 337 157 383 148 360 157 l 315 157 l 315 517 l 271 517 l 271 157 l 180 157 l 180 517 l 135 517 l 135 157 b 45 292 75 157 45 203 l 0 292 b 112 68 0 143 37 68 l 315 68 b 405 27 356 68 386 55 l 405 -95 b 337 -68 386 -76 363 -68 l 135 -68 b 45 68 76 -68 45 -23 z',\n        },\n        accSagittalSharp19CUp: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 89 -109 l 89 -517 l 135 -517 l 135 -109 b 225 -27 170 -102 200 -75 l 225 -517 l 271 -517 l 271 14 b 337 -23 289 -10 311 -23 l 360 -23 l 360 -517 l 405 -517 l 405 -23 b 495 -203 465 -23 495 -82 l 540 -203 b 428 68 540 -23 503 68 l 360 68 b 248 248 310 68 271 128 b 122 0 217 98 176 16 b 95 -3 112 0 104 -3 b 45 68 60 -3 45 20 l 0 68 b 89 -109 0 -39 30 -98 z',\n        },\n        accSagittalFlat19CDown: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 89 109 b 0 -68 30 98 0 39 l 45 -68 b 95 3 45 -20 60 3 b 122 0 104 3 112 0 b 248 -248 176 -16 217 -98 b 360 -68 271 -128 310 -68 l 428 -68 b 540 203 503 -68 540 23 l 495 203 b 405 23 495 82 465 23 l 405 517 l 360 517 l 360 23 l 337 23 b 271 -14 311 23 289 10 l 271 517 l 225 517 l 225 27 b 135 109 200 75 170 102 l 135 517 l 89 517 z',\n        },\n        accSagittalSharp7v19CUp: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 89 -109 l 89 -517 l 135 -517 l 135 -109 b 225 -27 170 -102 200 -75 l 225 -517 l 271 -517 l 271 112 l 315 112 b 360 109 331 112 346 112 l 360 -517 l 405 -517 l 405 98 b 495 -68 465 73 495 19 l 495 -248 l 540 -248 l 540 68 b 360 248 540 189 480 248 l 248 248 b 122 0 217 98 176 16 b 95 -3 112 0 104 -3 b 45 68 60 -3 45 20 l 0 68 b 89 -109 0 -39 30 -98 z',\n        },\n        accSagittalFlat7v19CDown: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 89 109 b 0 -68 30 98 0 39 l 45 -68 b 95 3 45 -20 60 3 b 122 0 104 3 112 0 b 248 -248 176 -16 217 -98 l 360 -248 b 540 -68 480 -248 540 -189 l 540 248 l 495 248 l 495 68 b 405 -98 495 -19 465 -73 l 405 517 l 360 517 l 360 -109 b 315 -112 346 -112 331 -112 l 271 -112 l 271 517 l 225 517 l 225 27 b 135 109 200 75 170 102 l 135 517 l 89 517 z',\n        },\n        accSagittalSharp49SUp: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 45 -203 b 135 -23 45 -84 75 -23 l 135 -517 l 180 -517 l 180 -23 l 203 -23 b 271 14 229 -23 251 -10 l 271 -517 l 315 -517 l 315 112 l 360 112 b 405 109 376 112 390 112 l 405 -517 l 449 -517 l 449 96 b 540 -68 510 72 540 17 l 540 -248 l 585 -248 l 585 68 b 405 248 585 187 526 248 l 292 248 b 180 68 268 127 230 68 l 112 68 b 0 -203 37 68 0 -23 z',\n        },\n        accSagittalFlat49SDown: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 203 b 112 -68 0 23 37 -68 l 180 -68 b 292 -248 230 -68 268 -127 l 405 -248 b 585 -68 526 -248 585 -187 l 585 248 l 540 248 l 540 68 b 449 -96 540 -17 510 -72 l 449 517 l 405 517 l 405 -109 b 360 -112 390 -112 376 -112 l 315 -112 l 315 517 l 271 517 l 271 -14 b 203 23 251 10 229 23 l 180 23 l 180 517 l 135 517 l 135 23 b 45 203 75 23 45 84 z',\n        },\n        accSagittalSharp23SUp: {\n            x_min: 0,\n            x_max: 469,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 45 -203 b 135 -23 45 -84 75 -23 l 135 -517 l 180 -517 l 180 -23 l 203 -23 b 271 14 229 -23 251 -10 l 271 -517 l 315 -517 l 315 71 l 405 -14 l 405 -517 l 449 -517 l 449 -56 l 675 -268 l 675 -112 l 292 248 b 180 68 268 127 230 68 l 112 68 b 0 -203 37 68 0 -23 z',\n        },\n        accSagittalFlat23SDown: {\n            x_min: 0,\n            x_max: 469,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 203 b 112 -68 0 23 37 -68 l 180 -68 b 292 -248 230 -68 268 -127 l 675 112 l 675 268 l 449 56 l 449 517 l 405 517 l 405 14 l 315 -71 l 315 517 l 271 517 l 271 -14 b 203 23 251 10 229 23 l 180 23 l 180 517 l 135 517 l 135 23 b 45 203 75 23 45 84 z',\n        },\n        accSagittalSharp5v13MUp: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 495 141 l 495 14 l 0 -157 l 0 -256 l 225 -180 l 225 -517 l 271 -517 l 271 -161 l 360 -130 l 360 -517 l 405 -517 l 405 -115 l 495 -84 l 495 -517 l 540 -517 l 540 248 l 517 248 b 167 168 366 194 248 168 b 45 248 85 168 45 194 l 0 248 b 95 99 0 170 30 120 l 0 68 l 0 -30 z',\n        },\n        accSagittalFlat5v13MDown: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 30 l 0 -68 l 95 -99 b 0 -248 30 -120 0 -170 l 45 -248 b 167 -168 45 -194 85 -168 b 517 -248 248 -168 366 -194 l 540 -248 l 540 517 l 495 517 l 495 84 l 405 115 l 405 517 l 360 517 l 360 130 l 271 161 l 271 517 l 225 517 l 225 180 l 0 256 l 0 157 l 495 -14 l 495 -141 z',\n        },\n        accSagittalSharp11v19MUp: {\n            x_min: 0,\n            x_max: 438,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 68 l 0 -248 l 45 -248 l 45 -68 b 180 104 45 26 89 82 l 180 -517 l 225 -517 l 225 112 l 315 112 l 315 -517 l 360 -517 l 360 14 b 428 -23 379 -10 402 -23 l 449 -23 l 449 -517 l 495 -517 l 495 -23 b 585 -203 554 -23 585 -84 l 631 -203 b 517 68 631 -23 593 68 l 449 68 b 337 248 400 68 363 127 l 225 248 b 0 68 75 248 0 187 z',\n        },\n        accSagittalFlat11v19MDown: {\n            x_min: 0,\n            x_max: 438,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -68 b 225 -248 0 -187 75 -248 l 337 -248 b 449 -68 363 -127 400 -68 l 517 -68 b 631 203 593 -68 631 23 l 585 203 b 495 23 585 84 554 23 l 495 517 l 449 517 l 449 23 l 428 23 b 360 -14 402 23 379 10 l 360 517 l 315 517 l 315 -112 l 225 -112 l 225 517 l 180 517 l 180 -104 b 45 68 89 -82 45 -26 l 45 248 l 0 248 z',\n        },\n        accSagittalSharp49MUp: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -248 l 45 -248 l 225 -180 l 225 -517 l 271 -517 l 271 -166 l 360 -132 l 360 -517 l 405 -517 l 405 -117 l 495 -84 l 495 -517 l 540 -517 l 540 248 l 360 248 b 0 -68 120 248 0 143 z m 45 -145 l 45 -68 b 360 112 45 53 150 112 l 495 112 l 495 14 z',\n        },\n        accSagittalFlat49MDown: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 68 b 360 -248 0 -143 120 -248 l 540 -248 l 540 517 l 495 517 l 495 84 l 405 117 l 405 517 l 360 517 l 360 132 l 271 166 l 271 517 l 225 517 l 225 180 l 45 248 l 0 248 z m 495 -14 l 495 -112 l 360 -112 b 45 68 150 -112 45 -53 l 45 145 z',\n        },\n        accSagittalSharp5v49MUp: {\n            x_min: 0,\n            x_max: 469,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -271 l 180 -79 l 180 -517 l 225 -517 l 225 -30 l 315 65 l 315 -517 l 360 -517 l 360 65 l 449 -30 l 449 -517 l 495 -517 l 495 -79 l 675 -271 l 675 -112 l 337 248 b 118 89 239 143 166 89 b 45 157 68 89 45 112 l 0 157 b 107 0 0 62 36 10 l 0 -112 z',\n        },\n        accSagittalFlat5v49MDown: {\n            x_min: 0,\n            x_max: 469,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 112 l 107 0 b 0 -157 36 -10 0 -62 l 45 -157 b 118 -89 45 -112 68 -89 b 337 -248 166 -89 239 -143 l 675 112 l 675 271 l 495 79 l 495 517 l 449 517 l 449 30 l 360 -65 l 360 517 l 315 517 l 315 -65 l 225 30 l 225 517 l 180 517 l 180 79 l 0 271 z',\n        },\n        accSagittalSharp49LUp: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -517 l 45 -517 l 45 -82 l 135 -112 l 135 -517 l 180 -517 l 180 -127 l 271 -157 l 271 -517 l 315 -517 l 315 -173 l 540 -248 l 585 -248 l 585 -68 b 180 248 585 143 449 248 l 0 248 z m 45 112 l 180 112 b 540 -68 420 112 540 53 l 540 -145 l 45 16 z',\n        },\n        accSagittalFlat49LDown: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -248 l 180 -248 b 585 68 449 -248 585 -143 l 585 248 l 540 248 l 315 173 l 315 517 l 271 517 l 271 157 l 180 127 l 180 517 l 135 517 l 135 112 l 45 82 l 45 517 l 0 517 z m 45 -16 l 540 145 l 540 68 b 180 -112 540 -53 420 -112 l 45 -112 z',\n        },\n        accSagittalSharp11v19LUp: {\n            x_min: 0,\n            x_max: 438,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -517 l 45 -517 l 45 -81 l 135 -108 l 135 -517 l 180 -517 l 180 -121 l 271 -148 l 271 -517 l 315 -517 l 315 -161 l 631 -255 l 631 -157 l 45 16 l 45 144 l 631 -30 l 631 68 l 23 248 l 0 248 z',\n        },\n        accSagittalFlat11v19LDown: {\n            x_min: 0,\n            x_max: 438,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -248 l 23 -248 l 631 -68 l 631 30 l 45 -144 l 45 -16 l 631 157 l 631 255 l 315 161 l 315 517 l 271 517 l 271 148 l 180 121 l 180 517 l 135 517 l 135 108 l 45 81 l 45 517 l 0 517 z',\n        },\n        accSagittalSharp5v13LUp: {\n            x_min: 0,\n            x_max: 500,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 89 -109 l 89 -517 l 135 -517 l 135 -109 b 225 -27 170 -102 200 -75 l 225 -517 l 271 -517 l 271 -85 l 360 -120 l 360 -517 l 405 -517 l 405 -135 l 720 -256 l 720 -157 l 271 14 l 271 141 l 720 -30 l 720 68 l 248 248 b 122 0 217 98 176 16 b 95 -3 112 0 104 -3 b 45 68 60 -3 45 20 l 0 68 b 89 -109 0 -39 30 -98 z',\n        },\n        accSagittalFlat5v13LDown: {\n            x_min: 0,\n            x_max: 500,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 89 109 b 0 -68 30 98 0 39 l 45 -68 b 95 3 45 -20 60 3 b 122 0 104 3 112 0 b 248 -248 176 -16 217 -98 l 720 -68 l 720 30 l 271 -141 l 271 -14 l 720 157 l 720 256 l 405 135 l 405 517 l 360 517 l 360 120 l 271 85 l 271 517 l 225 517 l 225 27 b 135 109 200 75 170 102 l 135 517 l 89 517 z',\n        },\n        accSagittalDoubleSharp23SDown: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -203 l 45 -203 b 135 -23 45 -82 76 -23 l 301 -23 l 135 -503 l 186 -517 l 337 -82 l 488 -517 l 540 -503 l 370 -14 b 449 112 423 10 449 53 l 449 248 l 428 248 b 315 68 402 127 364 68 l 240 68 b 89 157 140 68 89 98 l 45 157 b 68 53 45 115 52 81 b 0 -203 23 23 0 -63 z',\n        },\n        accSagittalDoubleFlat23SUp: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 203 b 68 -53 0 63 23 -23 b 45 -157 52 -81 45 -115 l 89 -157 b 240 -68 89 -98 140 -68 l 315 -68 b 428 -248 364 -68 402 -127 l 449 -248 l 449 -112 b 370 14 449 -53 423 -10 l 540 503 l 488 517 l 337 82 l 186 517 l 135 503 l 301 23 l 135 23 b 45 203 76 23 45 82 z',\n        },\n        accSagittalDoubleSharp49SDown: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -292 l 45 -292 b 112 -157 45 -203 68 -157 l 256 -157 l 135 -503 l 187 -517 l 337 -82 l 490 -517 l 540 -503 l 366 0 l 396 89 b 449 157 416 102 435 125 l 449 248 l 428 248 b 315 157 413 187 376 157 l 112 157 b 0 -68 39 157 0 82 l 45 -68 b 135 68 45 23 76 68 l 287 68 l 311 0 l 288 -68 l 89 -68 b 0 -292 32 -68 0 -144 z',\n        },\n        accSagittalDoubleFlat49SUp: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 292 b 89 68 0 144 32 68 l 288 68 l 311 0 l 287 -68 l 135 -68 b 45 68 76 -68 45 -23 l 0 68 b 112 -157 0 -82 39 -157 l 315 -157 b 428 -248 376 -157 413 -187 l 449 -248 l 449 -157 b 396 -89 435 -125 416 -102 l 366 0 l 540 503 l 490 517 l 337 82 l 187 517 l 135 503 l 256 157 l 112 157 b 45 292 68 157 45 203 z',\n        },\n        accSagittalDoubleSharp7v19CDown: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -112 l 0 -266 l 307 -7 l 135 -503 l 186 -517 l 337 -82 l 488 -517 l 540 -503 l 366 0 l 386 59 l 449 112 l 449 248 l 428 248 b 130 68 285 127 186 68 b 45 157 73 68 45 98 l 0 157 b 112 -20 0 53 37 -6 z',\n        },\n        accSagittalDoubleFlat7v19CUp: {\n            x_min: 0,\n            x_max: 375,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 112 20 b 0 -157 37 6 0 -53 l 45 -157 b 130 -68 45 -98 73 -68 b 428 -248 186 -68 285 -127 l 449 -248 l 449 -112 l 386 -59 l 366 0 l 540 503 l 488 517 l 337 82 l 186 517 l 135 503 l 307 7 l 0 266 l 0 112 z',\n        },\n        accSagittalDoubleSharp19CDown: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 68 l 0 -248 l 45 -248 l 45 -68 b 315 109 45 36 135 95 l 354 0 l 180 -503 l 232 -517 l 383 -82 l 534 -517 l 585 -503 l 410 0 l 449 112 l 495 112 l 495 248 l 360 248 b 0 68 120 248 0 187 z m 372 112 l 393 112 l 383 82 z',\n        },\n        accSagittalDoubleFlat19CUp: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -68 b 360 -248 0 -187 120 -248 l 495 -248 l 495 -112 l 449 -112 l 410 0 l 585 503 l 534 517 l 383 82 l 232 517 l 180 503 l 354 0 l 315 -109 b 45 68 135 -95 45 -36 l 45 248 l 0 248 z m 383 -82 l 393 -112 l 372 -112 z',\n        },\n        accSagittalDoubleSharp11v49CDown: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 45 -203 b 135 -23 45 -84 75 -23 l 203 -23 b 262 4 225 -23 245 -13 l 265 0 l 89 -503 l 141 -517 l 292 -82 l 444 -517 l 495 -503 l 321 0 l 360 112 b 540 -68 480 112 540 53 l 540 -248 l 585 -248 l 585 68 b 405 248 585 187 526 248 l 292 248 b 180 68 268 127 230 68 l 112 68 b 0 -203 37 68 0 -23 z',\n        },\n        accSagittalDoubleFlat11v49CUp: {\n            x_min: 0,\n            x_max: 406,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 203 b 112 -68 0 23 37 -68 l 180 -68 b 292 -248 230 -68 268 -127 l 405 -248 b 585 -68 526 -248 585 -187 l 585 248 l 540 248 l 540 68 b 360 -112 540 -53 480 -112 l 321 0 l 495 503 l 444 517 l 292 82 l 141 517 l 89 503 l 265 0 l 262 -4 b 203 23 245 13 225 23 l 135 23 b 45 203 75 23 45 84 z',\n        },\n        accSagittalDoubleSharp143CDown: {\n            x_min: 0,\n            x_max: 469,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 45 -203 b 135 -23 45 -84 75 -23 l 203 -23 b 262 4 225 -23 245 -13 l 265 0 l 89 -503 l 141 -517 l 292 -82 l 444 -517 l 495 -503 l 321 0 l 337 49 l 675 -268 l 675 -112 l 292 248 b 180 68 268 127 230 68 l 112 68 b 0 -203 37 68 0 -23 z',\n        },\n        accSagittalDoubleFlat143CUp: {\n            x_min: 0,\n            x_max: 469,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 203 b 112 -68 0 23 37 -68 l 180 -68 b 292 -248 230 -68 268 -127 l 675 112 l 675 268 l 337 -49 l 321 0 l 495 503 l 444 517 l 292 82 l 141 517 l 89 503 l 265 0 l 262 -4 b 203 23 245 13 225 23 l 135 23 b 45 203 75 23 45 84 z',\n        },\n        accSagittalDoubleSharp17kDown: {\n            x_min: 0,\n            x_max: 438,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 248 b 95 101 0 170 30 121 l 0 68 l 0 -30 l 364 96 l 399 0 l 390 -23 l 0 -157 l 0 -255 l 353 -135 l 225 -503 l 275 -517 l 428 -82 l 577 -517 l 631 -503 l 455 0 l 507 145 l 540 157 l 540 248 l 517 248 b 167 168 366 194 248 168 b 45 248 85 168 45 194 z m 416 115 l 442 124 l 428 82 z',\n        },\n        accSagittalDoubleFlat17kUp: {\n            x_min: 0,\n            x_max: 438,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 45 -248 b 167 -168 45 -194 85 -168 b 517 -248 248 -168 366 -194 l 540 -248 l 540 -157 l 507 -145 l 455 0 l 631 503 l 577 517 l 428 82 l 275 517 l 225 503 l 353 135 l 0 255 l 0 157 l 390 23 l 399 0 l 364 -96 l 0 30 l 0 -68 l 95 -101 b 0 -248 30 -121 0 -170 z m 428 -82 l 442 -124 l 416 -115 z',\n        },\n        accSagittalDoubleSharp19sDown: {\n            x_min: 0,\n            x_max: 438,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 -248 l 45 -248 l 45 -68 b 271 112 45 53 120 112 l 310 0 l 135 -503 l 186 -517 l 337 -82 l 488 -517 l 540 -503 l 366 0 l 367 4 b 428 -23 386 -13 405 -23 l 495 -23 b 585 -203 554 -23 585 -84 l 631 -203 b 517 68 631 -23 593 68 l 449 68 b 337 248 400 68 363 127 l 225 248 b 0 68 75 248 0 187 z',\n        },\n        accSagittalDoubleFlat19sUp: {\n            x_min: 0,\n            x_max: 438,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 0 -68 b 225 -248 0 -187 75 -248 l 337 -248 b 449 -68 363 -127 400 -68 l 517 -68 b 631 203 593 -68 631 23 l 585 203 b 495 23 585 84 554 23 l 428 23 b 367 -4 405 23 386 13 l 366 0 l 540 503 l 488 517 l 337 82 l 186 517 l 135 503 l 310 0 l 271 -112 b 45 68 120 -112 45 -53 l 45 248 l 0 248 z',\n        },\n        accSagittalShaftUp: {\n            x_min: 0,\n            x_max: 31,\n            y_min: -359,\n            y_max: 172,\n            ha: 531,\n            o: 'm 0 112 l 0 -517 l 45 -517 l 45 112 l 23 248 z',\n        },\n        accSagittalShaftDown: {\n            x_min: 0,\n            x_max: 31,\n            y_min: -172,\n            y_max: 359,\n            ha: 531,\n            o: 'm 23 -248 l 45 -112 l 45 517 l 0 517 l 0 -112 z',\n        },\n        accSagittalAcute: {\n            x_min: 0,\n            x_max: 125,\n            y_min: -62,\n            y_max: 125,\n            ha: 187,\n            o: 'm 0 0 l 0 -89 l 180 89 l 180 180 z',\n        },\n        accSagittalGrave: {\n            x_min: 0,\n            x_max: 125,\n            y_min: -125,\n            y_max: 62,\n            ha: 187,\n            o: 'm 180 -180 l 180 -89 l 0 89 l 0 0 z',\n        },\n        accSagittal1MinaUp: {\n            x_min: -7,\n            x_max: 124,\n            y_min: 16,\n            y_max: 106.31676725154982,\n            ha: 90.31676725154982,\n            o: 'm -10 23 l 43 23 b 72 65 43 23 65 55 b 117 107 88 86 105 107 b 135 23 128 107 137 86 l 179 23 b 134 150 179 112 163 135 b 68 130 117 158 85 150 b -10 23 43 101 13 58 z',\n        },\n        accSagittal1MinaDown: {\n            x_min: -7,\n            x_max: 124,\n            y_min: -106.31676725154983,\n            y_max: -16,\n            ha: 90.31676725154983,\n            o: 'm -10 -23 b 68 -130 13 -58 43 -101 b 134 -150 85 -150 117 -158 b 179 -23 163 -135 179 -112 l 135 -23 b 117 -107 137 -86 128 -107 b 72 -65 105 -107 88 -86 b 43 -23 65 -55 43 -23 z',\n        },\n        accSagittal2MinasUp: {\n            x_min: -7,\n            x_max: 218,\n            y_min: 16,\n            y_max: 106.31676725154982,\n            ha: 90.31676725154982,\n            o: 'm -10 23 l 43 23 b 72 65 43 23 65 55 b 117 107 88 86 105 107 b 135 23 128 107 137 86 l 179 23 b 207 65 179 23 200 55 b 252 107 223 86 240 107 b 271 23 264 107 272 86 l 314 23 b 269 150 314 112 298 135 b 203 130 252 158 220 150 b 173 92 190 115 181 104 b 134 150 167 127 154 140 b 68 130 117 158 85 150 b -10 23 43 101 13 58 z',\n        },\n        accSagittal2MinasDown: {\n            x_min: -7,\n            x_max: 218,\n            y_min: -106.31676725154983,\n            y_max: -16,\n            ha: 90.31676725154983,\n            o: 'm -10 -23 b 68 -130 13 -58 43 -101 b 134 -150 85 -150 117 -158 b 173 -92 154 -140 167 -127 b 203 -130 181 -104 190 -115 b 269 -150 220 -150 252 -158 b 314 -23 298 -135 314 -112 l 271 -23 b 252 -107 272 -86 264 -107 b 207 -65 240 -107 223 -86 b 179 -23 200 -55 179 -23 l 135 -23 b 117 -107 137 -86 128 -107 b 72 -65 105 -107 88 -86 b 43 -23 65 -55 43 -23 z',\n        },\n        accSagittal1TinaUp: {\n            x_min: 0,\n            x_max: 93,\n            y_min: 16,\n            y_max: 107,\n            ha: 91,\n            o: 'm 134 154 l 91 154 b 81 76 91 101 91 86 b 0 68 73 69 48 68 l 0 23 b 134 154 122 23 134 36 z',\n        },\n        accSagittal1TinaDown: {\n            x_min: 0,\n            x_max: 93,\n            y_min: -107,\n            y_max: -16,\n            ha: 91,\n            o: 'm 134 -154 b 0 -23 134 -36 122 -23 l 0 -68 b 81 -76 48 -68 73 -69 b 91 -154 91 -86 91 -101 z',\n        },\n        accSagittal2TinasUp: {\n            x_min: 0,\n            x_max: 94,\n            y_min: 16,\n            y_max: 107,\n            ha: 91,\n            o: 'm 135 68 b 89 154 94 68 89 124 l 46 154 b 36 92 45 131 42 105 b 0 68 32 82 23 68 l 0 23 b 68 63 29 23 53 40 b 135 23 84 39 104 23 z',\n        },\n        accSagittal2TinasDown: {\n            x_min: 0,\n            x_max: 94,\n            y_min: -107,\n            y_max: -16,\n            ha: 91,\n            o: 'm 135 -23 b 68 -63 104 -23 84 -39 b 0 -23 53 -40 29 -23 l 0 -68 b 36 -92 23 -68 32 -82 b 46 -154 42 -105 45 -131 l 89 -154 b 135 -68 89 -124 94 -68 z',\n        },\n        accSagittal3TinasUp: {\n            x_min: -7,\n            x_max: 124,\n            y_min: 16,\n            y_max: 106.31676725154982,\n            ha: 90.31676725154982,\n            o: 'm -10 23 l 43 23 b 72 65 43 23 65 55 b 117 107 88 86 105 107 b 135 23 128 107 137 86 l 179 23 b 134 150 179 112 163 135 b 68 130 117 158 85 150 b -10 23 43 101 13 58 z',\n        },\n        accSagittal3TinasDown: {\n            x_min: -7,\n            x_max: 124,\n            y_min: -106.31676725154983,\n            y_max: -16,\n            ha: 90.31676725154983,\n            o: 'm -10 -23 b 68 -130 13 -58 43 -101 b 134 -150 85 -150 117 -158 b 179 -23 163 -135 179 -112 l 135 -23 b 117 -107 137 -86 128 -107 b 72 -65 105 -107 88 -86 b 43 -23 65 -55 43 -23 z',\n        },\n        accSagittal4TinasUp: {\n            x_min: 0,\n            x_max: 187,\n            y_min: 16,\n            y_max: 106.69999999999997,\n            ha: 90.69999999999997,\n            o: 'm 0 68 l 0 23 b 143 45 105 23 124 26 b 203 107 153 55 183 107 b 226 23 216 107 226 86 l 269 23 b 225 150 269 112 253 135 b 160 132 207 158 181 153 b 115 81 138 112 124 88 b 0 68 104 71 94 68 z',\n        },\n        accSagittal4TinasDown: {\n            x_min: 0,\n            x_max: 187,\n            y_min: -106.69999999999999,\n            y_max: -16,\n            ha: 90.69999999999999,\n            o: 'm 0 -68 b 115 -81 94 -68 104 -71 b 160 -132 124 -88 138 -112 b 225 -150 181 -153 207 -158 b 269 -23 253 -135 269 -112 l 226 -23 b 203 -107 226 -86 216 -107 b 143 -45 183 -107 153 -55 b 0 -23 124 -26 105 -23 z',\n        },\n        accSagittal5TinasUp: {\n            x_min: 0,\n            x_max: 218,\n            y_min: 16,\n            y_max: 107,\n            ha: 91,\n            o: 'm 135 23 b 187 45 156 23 168 26 b 249 107 197 55 228 107 b 271 23 262 107 271 86 l 314 23 b 269 150 314 112 298 135 b 204 132 252 158 226 153 b 160 81 183 112 168 88 b 135 68 148 71 147 68 b 89 154 94 68 89 124 l 46 154 b 36 92 45 131 42 105 b 0 68 32 82 23 68 l 0 23 b 68 63 29 23 53 40 b 135 23 84 39 104 23 z',\n        },\n        accSagittal5TinasDown: {\n            x_min: 0,\n            x_max: 218,\n            y_min: -107,\n            y_max: -16,\n            ha: 91,\n            o: 'm 135 -23 b 68 -63 104 -23 84 -39 b 0 -23 53 -40 29 -23 l 0 -68 b 36 -92 23 -68 32 -82 b 46 -154 42 -105 45 -131 l 89 -154 b 135 -68 89 -124 94 -68 b 160 -81 147 -68 148 -71 b 204 -132 168 -88 183 -112 b 269 -150 226 -153 252 -158 b 314 -23 298 -135 314 -112 l 271 -23 b 249 -107 271 -86 262 -107 b 187 -45 228 -107 197 -55 b 135 -23 168 -26 156 -23 z',\n        },\n        accSagittal6TinasUp: {\n            x_min: -7,\n            x_max: 218,\n            y_min: 16,\n            y_max: 106.31676725154982,\n            ha: 90.31676725154982,\n            o: 'm -10 23 l 43 23 b 72 65 43 23 65 55 b 117 107 88 86 105 107 b 135 23 128 107 137 86 l 179 23 b 207 65 179 23 200 55 b 252 107 223 86 240 107 b 271 23 264 107 272 86 l 314 23 b 269 150 314 112 298 135 b 203 130 252 158 220 150 b 173 92 190 115 181 104 b 134 150 167 127 154 140 b 68 130 117 158 85 150 b -10 23 43 101 13 58 z',\n        },\n        accSagittal6TinasDown: {\n            x_min: -7,\n            x_max: 218,\n            y_min: -106.31676725154983,\n            y_max: -16,\n            ha: 90.31676725154983,\n            o: 'm -10 -23 b 68 -130 13 -58 43 -101 b 134 -150 85 -150 117 -158 b 173 -92 154 -140 167 -127 b 203 -130 181 -104 190 -115 b 269 -150 220 -150 252 -158 b 314 -23 298 -135 314 -112 l 271 -23 b 252 -107 272 -86 264 -107 b 207 -65 240 -107 223 -86 b 179 -23 200 -55 179 -23 l 135 -23 b 117 -107 137 -86 128 -107 b 72 -65 105 -107 88 -86 b 43 -23 65 -55 43 -23 z',\n        },\n        accSagittal7TinasUp: {\n            x_min: 0,\n            x_max: 281,\n            y_min: 16,\n            y_max: 106.69999999999997,\n            ha: 90.69999999999997,\n            o: 'm 0 68 l 0 23 b 143 45 105 23 124 26 b 203 107 153 55 183 107 b 226 23 216 107 226 86 l 269 23 b 298 65 269 23 291 55 b 343 107 314 86 331 107 b 361 23 354 107 363 86 l 405 23 b 360 150 405 112 389 135 b 294 130 343 158 311 150 b 264 92 281 115 272 104 b 225 150 258 127 245 140 b 160 132 207 158 181 153 b 115 81 138 112 124 88 b 0 68 104 71 94 68 z',\n        },\n        accSagittal7TinasDown: {\n            x_min: 0,\n            x_max: 281,\n            y_min: -106.69999999999999,\n            y_max: -16,\n            ha: 90.69999999999999,\n            o: 'm 0 -68 b 115 -81 94 -68 104 -71 b 160 -132 124 -88 138 -112 b 225 -150 181 -153 207 -158 b 264 -92 245 -140 258 -127 b 294 -130 272 -104 281 -115 b 360 -150 311 -150 343 -158 b 405 -23 389 -135 405 -112 l 361 -23 b 343 -107 363 -86 354 -107 b 298 -65 331 -107 314 -86 b 269 -23 291 -55 269 -23 l 226 -23 b 203 -107 226 -86 216 -107 b 143 -45 183 -107 153 -55 b 0 -23 124 -26 105 -23 z',\n        },\n        accSagittal8TinasUp: {\n            x_min: 0,\n            x_max: 312,\n            y_min: 16,\n            y_max: 107,\n            ha: 91,\n            o: 'm 135 23 b 187 45 156 23 168 26 b 249 107 197 55 228 107 b 271 23 262 107 271 86 l 314 23 b 343 65 314 23 336 55 b 387 107 359 86 376 107 b 406 23 399 107 408 86 l 449 23 b 405 150 449 112 433 135 b 338 130 387 158 356 150 b 308 92 325 115 317 104 b 269 150 302 127 289 140 b 204 132 252 158 226 153 b 160 81 183 112 168 88 b 135 68 148 71 147 68 b 89 154 94 68 89 124 l 46 154 b 36 92 45 131 42 105 b 0 68 32 82 23 68 l 0 23 b 68 63 29 23 53 40 b 135 23 84 39 104 23 z',\n        },\n        accSagittal8TinasDown: {\n            x_min: 0,\n            x_max: 312,\n            y_min: -107,\n            y_max: -16,\n            ha: 91,\n            o: 'm 135 -23 b 68 -63 104 -23 84 -39 b 0 -23 53 -40 29 -23 l 0 -68 b 36 -92 23 -68 32 -82 b 46 -154 42 -105 45 -131 l 89 -154 b 135 -68 89 -124 94 -68 b 160 -81 147 -68 148 -71 b 204 -132 168 -88 183 -112 b 269 -150 226 -153 252 -158 b 308 -92 289 -140 302 -127 b 338 -130 317 -104 325 -115 b 405 -150 356 -150 387 -158 b 449 -23 433 -135 449 -112 l 406 -23 b 387 -107 408 -86 399 -107 b 343 -65 376 -107 359 -86 b 314 -23 336 -55 314 -23 l 271 -23 b 249 -107 271 -86 262 -107 b 187 -45 228 -107 197 -55 b 135 -23 168 -26 156 -23 z',\n        },\n        accSagittal9TinasUp: {\n            x_min: -7,\n            x_max: 312,\n            y_min: 16,\n            y_max: 106.31676725154982,\n            ha: 90.31676725154982,\n            o: 'm -10 23 l 43 23 b 72 65 43 23 65 55 b 117 107 88 86 105 107 b 135 23 128 107 137 86 l 179 23 b 207 65 179 23 200 55 b 252 107 223 86 240 107 b 271 23 264 107 272 86 l 314 23 b 343 65 314 23 336 55 b 387 107 359 86 376 107 b 406 23 399 107 408 86 l 449 23 b 405 150 449 112 433 135 b 338 130 387 158 356 150 b 308 92 325 115 317 104 b 269 150 302 127 289 140 b 203 130 252 158 220 150 b 173 92 190 115 181 104 b 134 150 167 127 154 140 b 68 130 117 158 85 150 b -10 23 43 101 13 58 z',\n        },\n        accSagittal9TinasDown: {\n            x_min: -7,\n            x_max: 312,\n            y_min: -106.31676725154983,\n            y_max: -16,\n            ha: 90.31676725154983,\n            o: 'm -10 -23 b 68 -130 13 -58 43 -101 b 134 -150 85 -150 117 -158 b 173 -92 154 -140 167 -127 b 203 -130 181 -104 190 -115 b 269 -150 220 -150 252 -158 b 308 -92 289 -140 302 -127 b 338 -130 317 -104 325 -115 b 405 -150 356 -150 387 -158 b 449 -23 433 -135 449 -112 l 406 -23 b 387 -107 408 -86 399 -107 b 343 -65 376 -107 359 -86 b 314 -23 336 -55 314 -23 l 271 -23 b 252 -107 272 -86 264 -107 b 207 -65 240 -107 223 -86 b 179 -23 200 -55 179 -23 l 135 -23 b 117 -107 137 -86 128 -107 b 72 -65 105 -107 88 -86 b 43 -23 65 -55 43 -23 z',\n        },\n        accSagittalFractionalTinaUp: {\n            x_min: -3,\n            x_max: 35,\n            y_min: 73,\n            y_max: 111,\n            ha: 38,\n            o: 'm -4 132 b 23 105 -4 118 9 105 b 50 132 37 105 50 118 b 23 160 50 147 37 160 b -4 132 9 160 -4 147 z',\n        },\n        accSagittalFractionalTinaDown: {\n            x_min: -3,\n            x_max: 35,\n            y_min: -111,\n            y_max: -73,\n            ha: 38,\n            o: 'm -4 -132 b 23 -160 -4 -147 9 -160 b 50 -132 37 -160 50 -147 b 23 -105 50 -118 37 -105 b -4 -132 9 -105 -4 -118 z',\n        },\n        accidentalNarrowReversedFlat: {\n            x_min: 0,\n            x_max: 164,\n            y_min: -194,\n            y_max: 421,\n            ha: 615,\n            o: 'm 236 -279 l 236 606 l 192 606 l 192 179 b 85 243 150 222 114 243 b 0 84 23 243 0 134 b 112 -158 0 3 37 -78 z m 192 112 l 192 -163 l 135 -98 b 82 40 101 -50 82 -3 b 138 144 82 73 96 144 b 192 112 153 144 170 132 z',\n        },\n        accidentalNarrowReversedFlatAndFlat: {\n            x_min: 0,\n            x_max: 414,\n            y_min: -194,\n            y_max: 421,\n            ha: 615,\n            o: 'm 281 606 l 281 -268 l 438 -158 b 596 84 547 -82 596 3 b 475 243 596 154 556 243 b 325 179 435 243 384 222 l 325 606 z m 235 -279 l 235 606 l 190 606 l 190 179 b 85 243 148 222 114 243 b 12 158 52 243 27 215 b 0 84 3 134 0 108 b 112 -158 0 3 37 -78 z m 325 111 b 410 144 359 132 386 144 b 498 36 462 144 498 84 b 413 -107 498 -9 469 -58 l 325 -173 z m 192 112 l 192 -163 l 135 -98 b 81 40 99 -50 81 -3 b 91 94 81 59 84 76 b 137 144 102 127 118 144 b 192 112 153 144 170 132 z',\n        },\n        accidentalWilsonPlus: {\n            x_min: 0,\n            x_max: 281,\n            y_min: -203,\n            y_max: 203,\n            ha: 406,\n            o: 'm 405 268 l 225 98 l 225 292 l 180 292 l 180 56 l 0 -112 l 0 -268 l 180 -98 l 180 -292 l 225 -292 l 225 -56 l 405 112 z',\n        },\n        accidentalWilsonMinus: {\n            x_min: 0,\n            x_max: 281,\n            y_min: -186,\n            y_max: 186,\n            ha: 372,\n            o: 'm 0 112 l 405 -268 l 405 -112 l 0 268 z',\n        },\n    },\n    fontFamily: 'Bravura',\n    resolution: 1000,\n    generatedOn: '2022-06-26T17:36:54.186Z',\n};\n","/**\n * The Bravura font was created by Daniel Spreadbury @ Steinberg.\n * https://github.com/steinbergmedia/bravura/\n */\nexport const BravuraMetrics = {\n    name: 'Bravura',\n    smufl: true,\n    stave: {\n        padding: 12,\n        endPaddingMax: 10,\n        endPaddingMin: 5,\n        unalignedNotePadding: 10,\n    },\n    accidental: {\n        noteheadAccidentalPadding: 1,\n        leftPadding: 2,\n        accidentalSpacing: 3,\n    },\n    clef: {\n        default: {\n            point: 32,\n            width: 26,\n        },\n        small: {\n            point: 26,\n            width: 20,\n        },\n        annotations: {\n            '8va': {\n                smuflCode: 'timeSig8',\n                default: {\n                    point: 18,\n                    treble: {\n                        line: -1.4,\n                        shiftX: 12,\n                    },\n                },\n                small: {\n                    point: 16,\n                    treble: {\n                        line: -0.2,\n                        shiftX: 8,\n                    },\n                },\n            },\n            '8vb': {\n                smuflCode: 'timeSig8',\n                default: {\n                    point: 18,\n                    treble: {\n                        line: 6,\n                        shiftX: 10,\n                    },\n                    bass: {\n                        line: 3.5,\n                        shiftX: 1,\n                    },\n                },\n                small: {\n                    point: 16,\n                    treble: {\n                        line: 5.3,\n                        shiftX: 6,\n                    },\n                    bass: {\n                        line: 3.1,\n                        shiftX: 0.5,\n                    },\n                },\n            },\n        },\n        // These may no longer be necessary\n        lineCount: {\n            '8': { point: 55, shiftY: 14 },\n            '7': { point: 47, shiftY: 8 },\n            '6': { point: 32, shiftY: 1 },\n            '5': { point: 30, shiftY: -6 },\n            '4': { point: 23, shiftY: -12 },\n        },\n    },\n    parenthesis: {\n        default: {\n            point: 39,\n            width: 7,\n        },\n        gracenote: {\n            point: (39 * 3) / 5,\n            width: 3,\n        },\n    },\n    pedalMarking: {\n        up: {\n            point: 40,\n        },\n        down: {\n            point: 34,\n        },\n    },\n    // These are for numeric digits, such as in time signatures\n    digits: {\n        // used by timesig\n        shiftLine: -1,\n        point: 34,\n        // used by tuplets\n        tupletPoint: 22,\n        shiftY: -6,\n    },\n    articulation: {\n        articStaccatissimoAbove: {\n            padding: 2,\n        },\n        articStaccatissimoBelow: {\n            padding: 2,\n        },\n    },\n    tremolo: {\n        default: {\n            point: 25,\n            spacing: 5,\n            offsetYStemUp: -5,\n            offsetYStemDown: 5,\n            offsetXStemUp: 11,\n            offsetXStemDown: 1,\n        },\n        grace: {\n            point: 18,\n            spacing: 4,\n            offsetYStemUp: -5,\n            offsetYStemDown: 5,\n            offsetXStemUp: 7,\n            offsetXStemDown: 1,\n        },\n    },\n    staveRepetition: {\n        symbolText: {\n            offsetX: 12,\n            offsetY: 25,\n            spacing: 5,\n        },\n        coda: {\n            offsetY: 25,\n        },\n        segno: {\n            offsetY: 10,\n        },\n    },\n    // noteHead: {\n    // },\n    stem: {\n        heightAdjustmentForFlag: -3,\n        // These are stem (Y) offsets to the note heads. To shift the\n        // noteheads (x-position) themselves, see glyphs.notehead.custom.\n        noteHead: {\n            noteheadTriangleUpHalf: {\n                offsetYBaseStemUp: 5,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadTriangleUpBlack: {\n                offsetYBaseStemUp: 5,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadTriangleUpWhole: {\n                offsetYBaseStemUp: 5,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadXHalf: {\n                offsetYBaseStemUp: -4,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadXBlack: {\n                offsetYBaseStemUp: -4,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadXWhole: {\n                offsetYBaseStemUp: -4,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadHalf: {\n                offsetYBaseStemUp: -2.55,\n                offsetYBaseStemDown: 2.65,\n            },\n            noteheadBlack: {\n                offsetYBaseStemUp: -2,\n                offsetYBaseStemDown: 2,\n            },\n            noteheadSquareWhite: {\n                offsetYBaseStemDown: -5,\n                offsetYBaseStemUp: 5,\n            },\n        },\n    },\n    // Values under here are used by the Glyph class to reposition and rescale\n    // glyphs based on their category. This should be the first stop for\n    // custom font glyph repositioning.\n    //\n    // The glyph loader first looks up a specific set of settings based on the\n    // glyph code, and if not found, uses the defaults from the category. See\n    // glyphs.textNote for an example of this.\n    //\n    // Details in Glyph.lookupFontMetrics.\n    glyphs: {\n        coda: {\n            point: 20,\n            shiftX: -7,\n            shiftY: 8,\n        },\n        segno: {\n            shiftX: -7,\n        },\n        flag: {\n            shiftX: -0.75,\n            staveTempo: {\n                shiftX: -1,\n            },\n        },\n        clef: {\n            gClef: {\n                default: { scale: 1.1, shiftY: 1 },\n                small: { shiftY: 1.5 },\n            },\n            fClef: {\n                default: { shiftY: -0.5 },\n            },\n        },\n        ornament: {\n            ornamentTurn: {\n                scale: 1.2,\n            },\n            ornamentTurnSlash: {\n                scale: 1.2,\n            },\n        },\n        stringNumber: {\n            verticalPadding: 8,\n            stemPadding: 2,\n            leftPadding: 5,\n            rightPadding: 6,\n        },\n        stroke: {\n            arrowheadBlackDown: {\n                straight: {\n                    shiftX: -4.5,\n                },\n                wiggly: {\n                    shiftX: -1,\n                    shiftY: 1,\n                },\n            },\n            arrowheadBlackUp: {\n                straight: {\n                    shiftX: -0.85,\n                },\n                wiggly: {\n                    shiftX: -1,\n                    shiftY: 1,\n                },\n            },\n        },\n        textNote: {\n            point: 34,\n            breathMarkTick: {\n                point: 36,\n                shiftY: 9,\n            },\n            breathMarkComma: {\n                point: 36,\n            },\n            segno: {\n                point: 30,\n                shiftX: -7,\n                shiftY: 8,\n            },\n            coda: {\n                point: 20,\n                shiftX: -7,\n                shiftY: 8,\n            },\n            ornamentTrill: {\n                shiftX: -8,\n                shiftY: 8,\n            },\n            ornamentTurn: {\n                point: 42,\n            },\n            ornamentTurnSlash: {\n                point: 42,\n            },\n            ornamentMordent: {\n                shiftX: -8,\n            },\n            ornamentShortTrill: {\n                shiftX: -8,\n            },\n        },\n        noteHead: {\n            minPadding: 2,\n            standard: {\n                restQuarterStemUp: {\n                    point: 35,\n                },\n                restQuarterStemDown: {\n                    point: 35,\n                },\n            },\n            custom: {\n                noteheadCircleXStemUp: {\n                    shiftX: 1.5,\n                },\n                noteheadCircleXStemDown: {\n                    shiftX: 0.25,\n                },\n                noteheadDiamondHalfStemUp: {\n                    shiftX: 1.5,\n                },\n                noteheadDiamondBlackStemUp: {\n                    shiftX: 1.5,\n                },\n                noteheadDiamondWholeStemUp: {\n                    shiftX: 1,\n                },\n                noteheadXHalfStemUp: {\n                    shiftX: -2,\n                },\n                noteheadXHalfStemDown: {\n                    shiftX: 1,\n                },\n                noteheadXWholeStemUp: {\n                    shiftX: -4,\n                },\n                noteheadXWholeStemDown: {\n                    shiftX: 1,\n                },\n                noteheadXDoubleWholeStemUp: {\n                    shiftX: -4,\n                },\n                noteheadXDoubleWholeStemDown: {\n                    shiftX: 1,\n                },\n                noteheadSquareWhiteStemDown: {\n                    shiftX: 0.25,\n                },\n                noteheadSquareWhiteStemUp: {\n                    shiftX: -0.75,\n                },\n                noteheadSquareBlackStemUp: {\n                    shiftX: -0.75,\n                },\n                noteheadTriangleUpWholeStemUp: {\n                    shiftX: -0.75,\n                },\n            },\n        },\n        chordSymbol: {\n            global: {\n                superscriptOffset: -400,\n                subscriptOffset: 300,\n                kerningOffset: -250,\n                lowerKerningText: ['D', 'F', 'P', 'T', 'V', 'Y'],\n                upperKerningText: ['A', 'L'],\n                spacing: 100,\n                superSubRatio: 0.66,\n            },\n            csymDiminished: {\n                scale: 0.8,\n                leftSideBearing: -32,\n                advanceWidth: 506,\n                yOffset: 0,\n            },\n            csymHalfDiminished: {\n                scale: 0.8,\n                leftSideBearing: -32,\n                advanceWidth: 506,\n                yOffset: 0,\n            },\n            csymAugmented: {\n                scale: 1,\n                leftSideBearing: 0,\n                advanceWidth: 530,\n                yOffset: 0,\n            },\n            csymParensLeftTall: {\n                scale: 0.8,\n                leftSideBearing: -20,\n                advanceWidth: 184,\n                yOffset: 250,\n            },\n            csymParensRightTall: {\n                scale: 0.8,\n                leftSideBearing: 0,\n                advanceWidth: 189,\n                yOffset: 250,\n            },\n            csymBracketLeftTall: {\n                scale: 0.8,\n                leftSideBearing: 0,\n                advanceWidth: 328,\n                yOffset: 0,\n            },\n            csymBracketRightTall: {\n                scale: 0.8,\n                leftSideBearing: 1,\n                advanceWidth: 600,\n                yOffset: 0,\n            },\n            csymParensLeftVeryTall: {\n                scale: 0.9,\n                leftSideBearing: 50,\n                advanceWidth: 121,\n                yOffset: 350,\n            },\n            csymParensRightVeryTall: {\n                scale: 0.9,\n                leftSideBearing: 0,\n                advanceWidth: 111,\n                yOffset: 350,\n            },\n            csymDiagonalArrangementSlash: {\n                scale: 0.6,\n                leftSideBearing: -1,\n                advanceWidth: 990,\n                yOffset: 0,\n            },\n            csymMinor: {\n                scale: 0.8,\n                leftSideBearing: 0,\n                advanceWidth: 482,\n                yOffset: 0,\n            },\n            csymMajorSeventh: {\n                scale: 0.9,\n                leftSideBearing: 200,\n                yOffset: 0,\n                advanceWidth: 600,\n            },\n            accidentalSharp: {\n                scale: 0.75,\n                leftSideBearing: 20,\n                advanceWidth: 250,\n                yOffset: -302,\n            },\n            accidentalFlat: {\n                scale: 0.9,\n                leftSideBearing: -20,\n                advanceWidth: 226,\n                yOffset: -184,\n            },\n        },\n        jazzOrnaments: {\n            brassScoop: {\n                scale: 1.0,\n                xOffset: -12,\n                yOffset: 0,\n                stemUpYOffset: 0,\n                reportedWidth: 20,\n            },\n            brassDoitMedium: {\n                scale: 1.0,\n                xOffset: 16,\n                yOffset: 0,\n                stemUpYOffset: 0,\n                reportedWidth: 22,\n            },\n            brassFallLipShort: {\n                scale: 1.0,\n                xOffset: 16,\n                yOffset: 0,\n                stemUpYOffset: 0,\n                reportedWidth: 15,\n            },\n            brassLiftMedium: {\n                scale: 1.0,\n                xOffset: 16,\n                yOffset: 5,\n                stemUpYOffset: 0,\n                reportedWidth: 5,\n            },\n            brassFallRoughMedium: {\n                scale: 1.0,\n                xOffset: 16,\n                yOffset: 28,\n                stemUpYOffset: 0,\n                reportedWidth: 5,\n            },\n            brassBend: {\n                scale: 1.0,\n                xOffset: 2,\n                yOffset: -8,\n                stemUpYOffset: 25,\n                reportedWidth: 5,\n            },\n            brassMuteClosed: {\n                scale: 1.0,\n                xOffset: 3,\n                yOffset: -8,\n                stemUpYOffset: 25,\n                reportedWidth: 5,\n            },\n            brassMuteOpen: {\n                scale: 1.0,\n                xOffset: 3,\n                yOffset: -7,\n                stemUpYOffset: 25,\n                reportedWidth: 5,\n            },\n            brassFlip: {\n                scale: 1.0,\n                xOffset: 10,\n                yOffset: 0,\n                stemUpYOffset: 7,\n                reportedWidth: 10,\n            },\n            brassJazzTurn: {\n                scale: 1.0,\n                xOffset: 0,\n                yOffset: 0,\n                stemUpYOffset: 8,\n                reportedWidth: 31,\n            },\n            brassSmear: {\n                scale: 1.0,\n                xOffset: 10,\n                yOffset: 0,\n                stemUpYOffset: 8,\n                reportedWidth: 5,\n            },\n        },\n        tuplet: {\n            noteHeadOffset: 20,\n            stemOffset: 10,\n            bottomLine: 4,\n            topModifierOffset: 15,\n        },\n    },\n};\n","export const CustomFont = {\n    resolution: 1000,\n    fontFamily: 'VexFlowCustom',\n    glyphs: {\n        noteheadSquareWhite: {\n            x_min: 0,\n            x_max: 430.75,\n            ha: 386,\n            o: 'm 0 200 l 0 -200 l 430 -200 l 430 200 l 0 200 l 50 150 l 380 150 l 380 -150 l 50 -150 l 50 150 ',\n        },\n        noteheadSquareBlack: {\n            x_min: 0,\n            x_max: 430.75,\n            ha: 386,\n            o: 'm 0 200 l 0 -200 l 430 -200 l 430 200 l 0 200 ',\n        },\n        accidentalBuyukMucennebFlat: {\n            x_min: -171.5,\n            x_max: 251.8125,\n            ha: 257,\n            o: 'm -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 553 20 616 20 614 b 20 491 20 503 20 491 l 20 491 b 153 535 47 501 149 535 b 174 514 167 535 174 524 b 164 496 174 508 171 501 b 92 470 164 495 132 484 l 20 445 l 20 390 b 20 363 20 378 20 370 b 20 333 20 340 20 333 l 20 333 b 153 377 47 344 149 377 b 174 356 167 377 174 367 b 164 338 174 349 171 342 b 92 312 164 338 132 326 l 20 288 l 20 219 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b -1 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 b -21 30 -21 -212 -21 -212 b -21 273 -21 163 -21 273 b -84 252 -21 273 -50 263 b -152 230 -133 234 -145 230 b -157 231 -155 230 -156 231 b -171 252 -166 234 -171 244 b -160 270 -171 259 -167 266 b -27 316 -159 270 -93 294 l -21 319 l -21 374 b -21 431 -21 406 -21 431 b -84 409 -21 431 -50 421 b -152 388 -133 392 -145 388 b -157 390 -155 388 -156 388 b -171 409 -166 392 -171 401 b -160 428 -171 417 -167 424 b -27 474 -159 428 -93 451 l -21 476 l -21 546 b -20 620 -21 614 -21 616 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 ',\n        },\n        accidentalBakiyeFlat: {\n            x_min: -176.9375,\n            x_max: 251.8125,\n            ha: 257,\n            o: 'm -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 503 20 616 20 614 b 20 391 20 442 20 391 b 84 424 20 391 49 406 l 147 456 l 152 456 b 153 456 153 456 153 456 b 175 435 166 456 175 446 b 172 427 175 433 174 430 b 92 380 170 420 172 421 l 20 342 l 20 245 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b 0 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 b -21 54 -21 -212 -21 -212 b -21 322 -21 201 -21 322 b -85 290 -21 322 -50 308 l -148 256 l -153 256 b -155 256 -155 256 -155 256 b -176 277 -167 256 -176 266 b -174 285 -176 280 -175 283 b -93 333 -171 294 -174 292 l -21 370 l -21 494 b -20 620 -21 616 -21 616 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 ',\n        },\n        accidentalKucukMucennebSharp: {\n            x_min: -1.359375,\n            x_max: 255.890625,\n            ha: 261,\n            o: 'm 118 514 b 127 517 121 517 122 517 b 147 505 136 517 142 513 l 148 502 l 148 403 b 148 306 148 351 148 306 b 174 315 149 306 160 310 l 200 324 l 205 323 b 223 312 213 323 220 319 l 225 308 l 225 260 b 225 245 225 255 225 249 b 220 204 225 208 224 209 b 179 188 216 199 215 199 l 148 177 l 148 124 l 148 70 l 189 84 b 236 98 219 94 230 98 b 247 94 240 98 243 97 b 255 52 254 88 255 87 b 255 33 255 47 255 40 l 254 -12 l 253 -15 b 249 -22 253 -18 250 -20 l 245 -24 l 196 -41 l 148 -58 l 148 -108 b 148 -158 148 -136 148 -158 b 174 -148 148 -158 160 -154 b 204 -140 198 -140 200 -140 l 204 -140 b 224 -152 213 -140 221 -145 b 225 -201 224 -155 225 -177 b 224 -254 225 -226 224 -251 b 157 -284 220 -262 220 -262 l 148 -288 l 148 -395 l 148 -503 l 147 -506 b 127 -519 142 -514 134 -519 b 107 -506 119 -519 111 -514 l 106 -503 l 106 -403 b 106 -303 106 -316 106 -303 b 104 -303 104 -303 104 -303 b 88 -310 104 -303 96 -306 l 63 -319 b 51 -322 59 -320 55 -322 b 36 -315 46 -322 40 -319 b 31 -273 32 -309 31 -312 b 31 -258 31 -269 31 -263 l 31 -210 l 34 -206 b 40 -198 35 -204 38 -199 b 74 -186 42 -197 57 -191 l 106 -173 l 106 -123 b 106 -97 106 -112 106 -104 b 106 -72 106 -76 106 -72 b 104 -72 106 -72 106 -72 b 20 -99 89 -79 23 -99 b 0 -84 10 -99 2 -93 b -1 -37 0 -81 -1 -59 b 0 11 -1 -15 0 9 b 58 40 4 22 2 22 l 106 56 l 106 109 b 106 123 106 115 106 119 b 106 162 106 147 106 162 b 81 155 106 162 93 159 b 50 147 65 149 55 147 b 36 152 43 147 40 148 b 31 194 32 158 31 156 b 31 209 31 198 31 204 l 31 256 l 34 260 b 76 281 38 269 38 269 l 106 292 l 106 396 l 106 502 l 107 505 b 118 514 110 509 114 513 ',\n        },\n        accidentalKoron: {\n            x_min: -20,\n            x_max: 320,\n            ha: 257,\n            o: 'm -8 200 b -8 210 8 200 16 200 l 20 148 -199 l 23 -615 b 0 -629 9 -629 6 -629 l -21 -612 l -21 -201 l -21 216 l -20 200 m 16 200 l 310 0 l 240 0 l 16 140 l 16 -120 l 240 0 l 310 0 l 16 -200 ',\n        },\n        accidentalSori: {\n            x_min: -10.890625,\n            x_max: 299.4375,\n            ha: 294,\n            o: 'm 44 174 b 51 174 47 174 49 174 b 68 173 55 174 61 174 l 287 112 l 551 40 b 615 20 617 22 609 23 b 626 0 622 16 626 8 b 615 -22 626 -9 622 -18 b 613 -23 613 -23 613 -23 b 613 -23 613 -23 613 -23 b 287 -113 613 -24 597 -29 l 68 -174 b 53 -176 61 -176 57 -176 b 39 -172 47 -176 43 -174 b 27 -151 31 -167 27 -159 b 39 -129 27 -141 31 -133 b 230 -74 43 -124 20 -131 l 370 -36 l 468 -9 b 498 0 484 -4 498 -1 b 468 8 498 0 484 2 l 370 34 l 230 73 b 40 126 28 129 43 124 b 27 149 31 131 27 140 b 44 174 27 161 34 170 m 205 110 l 205 300 b 205 330 245 330 245 300 l 245 300 l 245 -300 b 245 -330 205 -330 205 -300 l 205 -300 l 205 110 l 345 90 m 345 90 l 345 330 b 345 360 385 360 385 330 l 385 330 l 385 -270 b 385 -300 345 -300 345 -270 l 345 -270 l 345 90 ',\n        },\n        vexAccidentalMicrotonal2: {\n            x_min: -1.359375,\n            x_max: 386.5625,\n            ha: 394,\n            o: 'm 249 535 b 257 537 251 537 253 537 b 276 524 266 537 273 533 l 277 521 l 279 419 l 279 316 l 304 323 b 337 328 319 326 330 328 b 353 316 347 328 349 324 b 355 266 355 315 355 290 b 353 215 355 241 355 217 b 319 198 349 206 347 205 b 279 187 284 190 279 188 b 279 156 279 187 279 174 b 279 136 279 151 279 144 l 279 84 l 289 87 l 330 98 b 367 105 352 102 362 105 b 378 101 372 105 375 104 b 386 61 385 95 386 94 b 386 40 386 55 386 48 l 386 -5 l 385 -8 b 374 -19 383 -12 378 -18 b 291 -40 372 -19 347 -26 b 279 -43 284 -41 279 -43 b 279 -83 279 -43 279 -59 b 279 -95 279 -87 279 -91 l 279 -145 l 304 -140 b 337 -133 321 -136 330 -133 b 349 -140 343 -133 347 -136 b 355 -181 355 -145 355 -142 l 355 -197 l 355 -210 b 349 -252 355 -249 355 -247 b 300 -269 345 -258 347 -258 b 280 -274 291 -272 281 -273 l 279 -274 l 277 -378 l 277 -483 l 276 -487 b 257 -499 273 -495 265 -499 b 238 -487 249 -499 242 -495 l 236 -483 l 236 -384 l 236 -285 l 235 -285 l 212 -291 l 170 -301 b 148 -308 159 -305 148 -306 b 147 -415 147 -308 147 -313 l 147 -523 l 145 -526 b 126 -538 141 -534 133 -538 b 106 -526 118 -538 110 -534 l 104 -523 l 104 -420 b 103 -317 104 -326 104 -317 b 103 -317 103 -317 103 -317 b 50 -330 92 -322 54 -330 b 31 -317 42 -330 35 -326 b 29 -267 29 -315 29 -315 l 29 -219 l 32 -216 b 92 -192 36 -206 36 -206 l 104 -190 l 104 -138 b 103 -87 104 -91 104 -87 b 103 -87 103 -87 103 -87 b 88 -91 103 -87 96 -88 l 49 -101 b 17 -106 32 -105 23 -106 b 6 -102 13 -106 10 -105 b -1 -62 0 -97 -1 -95 b 0 -41 -1 -56 0 -49 l 0 4 l 1 6 b 10 16 2 11 6 15 b 91 37 12 18 38 24 l 104 41 l 104 93 b 103 144 104 140 104 144 b 103 144 103 144 103 144 b 50 131 92 141 54 131 b 31 144 42 131 35 137 b 29 195 29 147 29 148 l 29 242 l 32 245 b 92 269 36 255 36 255 l 104 273 l 104 377 l 104 481 l 106 485 b 126 498 110 492 118 498 b 134 495 129 498 132 496 b 145 485 138 494 142 489 l 147 481 l 147 383 l 147 283 l 152 284 b 190 294 155 285 171 290 l 230 303 l 236 305 l 236 413 l 236 521 l 238 524 b 249 535 240 528 243 533 m 236 126 b 235 177 236 154 236 177 l 235 177 b 213 172 235 177 225 174 l 170 161 b 147 155 157 158 147 155 b 147 124 147 155 147 142 b 147 102 147 117 147 111 l 147 52 l 153 54 l 228 72 l 236 74 l 236 126 m 236 -105 b 235 -54 236 -65 236 -54 l 235 -54 b 231 -55 235 -54 234 -54 b 172 -69 227 -55 204 -62 l 149 -76 l 147 -76 l 147 -127 l 147 -179 l 152 -177 b 190 -167 155 -177 171 -173 l 230 -158 l 236 -156 l 236 -105 ',\n        },\n        vexAccidentalMicrotonal3: {\n            x_min: 0,\n            x_max: 430.75,\n            ha: 360,\n            o: 'm -146 537 b -138 538 -143 538 -141 538 b -118 525 -129 538 -121 533 b -117 390 -117 522 -117 521 b -115 259 -117 268 -117 259 b -115 259 -115 259 -115 259 b -59 272 -104 263 -62 272 b -39 259 -50 272 -42 267 b -37 209 -38 257 -37 233 b -39 159 -37 185 -38 162 b -85 138 -43 149 -44 149 l -117 131 l -117 21 b -115 -88 -117 -80 -117 -88 b -115 -88 -115 -88 -115 -88 b -59 -75 -104 -84 -62 -75 b -44 -81 -52 -75 -48 -77 b -38 -124 -38 -87 -38 -85 b -38 -138 -38 -124 -38 -138 b -38 -152 -38 -138 -38 -152 b -44 -195 -38 -191 -38 -190 b -85 -209 -48 -200 -48 -200 l -117 -217 l -117 -349 b -118 -486 -117 -481 -117 -482 b -138 -499 -121 -494 -129 -499 b -153 -493 -143 -499 -149 -497 b -159 -415 -158 -487 -159 -496 b -159 -355 -159 -398 -159 -379 b -159 -227 -159 -284 -159 -227 b -205 -238 -159 -227 -180 -232 b -250 -249 -230 -244 -250 -249 b -251 -386 -251 -249 -251 -311 b -252 -525 -251 -521 -251 -522 b -272 -538 -255 -534 -264 -538 b -287 -532 -277 -538 -283 -536 b -293 -452 -292 -527 -293 -536 b -293 -391 -293 -436 -293 -415 b -294 -260 -293 -269 -293 -260 b -294 -260 -294 -260 -294 -260 b -348 -272 -306 -264 -345 -272 b -368 -259 -357 -272 -365 -267 b -369 -209 -369 -257 -369 -233 b -368 -159 -369 -185 -369 -162 b -323 -139 -364 -149 -362 -148 l -293 -131 l -293 -22 b -294 87 -293 80 -293 87 b -294 87 -294 87 -294 87 b -348 75 -306 84 -345 75 b -368 88 -357 75 -365 80 b -369 138 -369 91 -369 114 b -368 188 -369 162 -369 186 b -323 209 -364 198 -362 199 l -293 216 l -293 349 b -292 486 -293 481 -293 482 b -272 499 -288 494 -280 499 b -257 493 -266 499 -261 497 b -251 414 -251 487 -251 496 b -251 354 -251 398 -251 378 b -251 226 -251 284 -251 226 b -205 238 -250 226 -230 231 b -159 249 -180 244 -159 249 b -159 385 -159 249 -159 310 b -157 525 -159 521 -159 522 b -146 537 -156 530 -151 535 z m -159 11 b -159 120 -159 98 -159 120 l -159 120 b -175 116 -160 120 -167 119 b -221 105 -184 114 -204 109 l -251 98 l -251 -12 b -251 -121 -251 -72 -251 -121 b -205 -110 -250 -121 -230 -116 b -159 -99 -180 -104 -159 -99 b -159 11 -159 -99 -159 -49 z m 89 517 b 97 519 92 518 94 519 b 117 505 106 519 114 513 b 119 376 119 502 119 501 l 119 249 l 145 258 b 176 267 169 266 172 267 b 177 267 176 267 177 267 b 196 255 186 267 192 263 l 197 252 l 197 205 b 197 181 197 195 197 187 b 193 149 197 153 197 153 b 152 131 190 144 187 143 l 119 120 l 119 10 b 119 -100 119 -62 119 -100 b 145 -91 120 -100 131 -96 b 173 -82 159 -86 171 -82 b 176 -81 174 -81 175 -81 b 196 -94 185 -81 193 -87 b 198 -151 197 -97 198 -125 b 197 -194 198 -172 197 -192 b 153 -218 193 -203 192 -204 l 119 -230 l 119 -367 l 118 -504 l 117 -507 b 97 -519 113 -514 105 -519 b 82 -512 92 -519 87 -517 b 76 -434 77 -507 76 -516 b 76 -374 76 -418 76 -398 b 76 -245 76 -303 76 -245 b 52 -254 76 -245 65 -249 b 19 -263 34 -260 25 -263 b 6 -257 13 -263 10 -261 b 0 -214 0 -251 0 -253 b 0 -200 0 -210 0 -205 b 0 -188 0 -196 0 -192 b 6 -143 0 -147 0 -149 b 46 -126 10 -139 10 -139 l 76 -115 l 76 -5 b 76 106 76 56 76 106 b 51 98 76 106 64 102 b 18 89 34 92 25 89 b 6 95 13 89 10 91 b 0 139 0 101 0 99 b 0 153 0 143 0 148 b 0 179 0 163 0 172 b 44 225 0 215 3 211 l 76 236 l 76 369 b 78 505 76 501 76 502 b 89 517 80 510 85 515 z ',\n        },\n        vexAccidentalMicrotonal4: {\n            x_min: 0,\n            x_max: 430.75,\n            ha: 360,\n            o: 'm 283 633 b 291 634 286 634 289 634 b 311 621 300 634 308 629 b 313 505 313 618 313 617 b 313 393 313 443 313 393 b 378 425 313 393 343 407 l 443 458 l 448 458 b 449 458 449 458 449 458 b 471 437 462 458 471 448 b 469 429 471 434 470 432 b 387 382 466 421 469 423 l 313 344 l 313 247 l 313 150 l 315 152 b 433 201 353 184 394 201 b 479 193 448 201 464 198 b 549 86 524 177 549 135 b 526 1 549 59 541 29 b 395 -143 504 -39 475 -71 b 316 -214 351 -182 341 -191 b 292 -229 302 -228 300 -229 b 272 -216 283 -229 275 -224 b 271 55 271 -212 271 -212 b 270 323 271 203 270 323 b 205 291 270 323 241 308 l 140 258 l 135 258 b 134 258 135 258 134 258 b 112 279 121 258 112 267 b 114 287 112 281 113 284 b 196 334 117 295 114 293 l 271 371 l 271 495 b 272 621 271 617 271 618 b 283 633 274 626 279 631 z m 404 133 b 391 134 400 134 395 134 b 384 134 388 134 386 134 b 318 88 358 130 335 114 l 313 81 l 313 -37 l 313 -156 l 316 -152 b 439 83 391 -71 439 22 l 439 84 b 404 133 439 115 430 128 z m -8 633 l -8 633 b 0 634 -6 634 -3 634 b 20 621 8 634 17 629 b 21 384 21 618 21 617 l 21 150 l 24 152 b 141 201 62 184 102 201 b 187 193 157 201 172 198 b 257 86 232 177 257 135 b 234 1 257 59 250 29 b 103 -143 212 -39 183 -71 b 24 -214 60 -182 49 -191 b 0 -229 10 -228 8 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 203 l -21 618 l -20 621 b -8 633 -18 626 -13 631 z m 113 133 l 113 133 b 99 134 109 134 103 134 b 93 134 97 134 94 134 b 26 88 66 130 43 114 l 21 81 l 21 -37 l 21 -156 l 25 -152 b 148 83 99 -71 148 22 l 148 84 b 113 133 148 115 138 128 z ',\n        },\n        vexNoteHeadRectBlack: {\n            x_min: 0,\n            x_max: 430.75,\n            ha: 360,\n            o: 'm 0 150 l 0 -150 l 430 -150 l 430 150 l 0 150 ',\n        },\n        vexNoteHeadRectWhite: {\n            x_min: 0,\n            x_max: 430.75,\n            ha: 360,\n            o: 'm 0 150 l 0 -150 l 430 -150 l 430 150 l 0 150 l 50 100 l 380 100 l 380 -100 l 50 -100 l 50 100',\n        },\n    },\n};\n","export const CustomMetrics = {\n    name: 'VexFlowCustom',\n    smufl: false,\n    glyphs: {},\n};\n","export const PetalumaScriptFont = {\n    spacing: 50,\n    glyphs: {\n        ' ': {\n            x_min: 0,\n            x_max: 250,\n            y_min: 0,\n            y_max: 500,\n            ha: 500,\n            leftSideBearing: 0,\n            advanceWidth: 250,\n        },\n        '0': {\n            x_min: 33,\n            x_max: 534,\n            y_min: -13,\n            y_max: 751,\n            ha: 764,\n            leftSideBearing: 33,\n            advanceWidth: 570,\n        },\n        '1': {\n            x_min: 48,\n            x_max: 235,\n            y_min: -17,\n            y_max: 734,\n            ha: 751,\n            leftSideBearing: 48,\n            advanceWidth: 286,\n        },\n        '2': {\n            x_min: 56,\n            x_max: 571,\n            y_min: -19,\n            y_max: 741,\n            ha: 760,\n            leftSideBearing: 56,\n            advanceWidth: 626,\n        },\n        '3': {\n            x_min: 50,\n            x_max: 528,\n            y_min: -7,\n            y_max: 731,\n            ha: 738,\n            leftSideBearing: 50,\n            advanceWidth: 589,\n        },\n        '4': {\n            x_min: 38,\n            x_max: 564,\n            y_min: -13,\n            y_max: 743,\n            ha: 756,\n            leftSideBearing: 38,\n            advanceWidth: 614,\n        },\n        '5': {\n            x_min: 42,\n            x_max: 601,\n            y_min: -34,\n            y_max: 743,\n            ha: 777,\n            leftSideBearing: 42,\n            advanceWidth: 648,\n        },\n        '6': {\n            x_min: 47,\n            x_max: 606,\n            y_min: -16,\n            y_max: 743,\n            ha: 759,\n            leftSideBearing: 47,\n            advanceWidth: 667,\n        },\n        '7': {\n            x_min: 47,\n            x_max: 567,\n            y_min: 5,\n            y_max: 739,\n            ha: 734,\n            leftSideBearing: 0,\n            advanceWidth: 615,\n        },\n        '8': {\n            x_min: 40,\n            x_max: 541,\n            y_min: -15,\n            y_max: 752,\n            ha: 767,\n            leftSideBearing: 40,\n            advanceWidth: 585,\n        },\n        '9': {\n            x_min: 40,\n            x_max: 537,\n            y_min: -52,\n            y_max: 736,\n            ha: 788,\n            leftSideBearing: 40,\n            advanceWidth: 592,\n        },\n        '!': {\n            x_min: 49,\n            x_max: 180,\n            y_min: -7,\n            y_max: 761,\n            ha: 768,\n            leftSideBearing: 49,\n            advanceWidth: 230,\n        },\n        '\"': {\n            x_min: 39,\n            x_max: 304,\n            y_min: 596,\n            y_max: 804,\n            ha: 208,\n            leftSideBearing: 39,\n            advanceWidth: 353,\n        },\n        '#': {\n            x_min: 33,\n            x_max: 599,\n            y_min: -8,\n            y_max: 765,\n            ha: 773,\n            leftSideBearing: 33,\n            advanceWidth: 648,\n        },\n        $: {\n            x_min: 53,\n            x_max: 495,\n            y_min: -111,\n            y_max: 823,\n            ha: 934,\n            leftSideBearing: 53,\n            advanceWidth: 560,\n        },\n        '%': {\n            x_min: 35,\n            x_max: 656,\n            y_min: -128,\n            y_max: 808,\n            ha: 936,\n            leftSideBearing: 35,\n            advanceWidth: 711,\n        },\n        '&': {\n            x_min: 53,\n            x_max: 441,\n            y_min: -3,\n            y_max: 753,\n            ha: 756,\n            leftSideBearing: 53,\n            advanceWidth: 500,\n        },\n        \"'\": {\n            x_min: 43,\n            x_max: 161,\n            y_min: 590,\n            y_max: 811,\n            ha: 221,\n            leftSideBearing: 43,\n            advanceWidth: 217,\n        },\n        '(': {\n            x_min: 41,\n            x_max: 311,\n            y_min: -36,\n            y_max: 845,\n            ha: 881,\n            leftSideBearing: 41,\n            advanceWidth: 308,\n        },\n        ')': {\n            x_min: -8,\n            x_max: 257,\n            y_min: -21,\n            y_max: 852,\n            ha: 873,\n            leftSideBearing: -8,\n            advanceWidth: 280,\n        },\n        '*': {\n            x_min: 59,\n            x_max: 539,\n            y_min: 175,\n            y_max: 589,\n            ha: 414,\n            leftSideBearing: 59,\n            advanceWidth: 601,\n        },\n        '+': {\n            x_min: 33,\n            x_max: 361,\n            y_min: 180,\n            y_max: 587,\n            ha: 407,\n            leftSideBearing: 33,\n            advanceWidth: 400,\n        },\n        ',': {\n            x_min: 15,\n            x_max: 176,\n            y_min: -129,\n            y_max: 92,\n            ha: 221,\n            leftSideBearing: 15,\n            advanceWidth: 205,\n        },\n        '-': {\n            x_min: 40,\n            x_max: 380,\n            y_min: 317,\n            y_max: 452,\n            ha: 135,\n            leftSideBearing: 40,\n            advanceWidth: 422,\n        },\n        '.': {\n            x_min: 48,\n            x_max: 185,\n            y_min: -56,\n            y_max: 84,\n            ha: 140,\n            leftSideBearing: 48,\n            advanceWidth: 227,\n        },\n        '/': {\n            x_min: -58,\n            x_max: 654,\n            y_min: -122,\n            y_max: 844,\n            ha: 966,\n            leftSideBearing: -58,\n            advanceWidth: 626,\n        },\n        ':': {\n            x_min: 65,\n            x_max: 225,\n            y_min: 97,\n            y_max: 536,\n            ha: 439,\n            leftSideBearing: 65,\n            advanceWidth: 302,\n        },\n        ';': {\n            x_min: 13,\n            x_max: 295,\n            y_min: -139,\n            y_max: 536,\n            ha: 675,\n            leftSideBearing: 13,\n            advanceWidth: 334,\n        },\n        '<': {\n            x_min: 28,\n            x_max: 438,\n            y_min: -1,\n            y_max: 607,\n            ha: 608,\n            leftSideBearing: 28,\n            advanceWidth: 475,\n        },\n        '=': {\n            x_min: 40,\n            x_max: 383,\n            y_min: 199.9598640852289,\n            y_max: 541,\n            ha: 341.0401359147711,\n            leftSideBearing: 40,\n            advanceWidth: 422,\n        },\n        '>': {\n            x_min: 35,\n            x_max: 421,\n            y_min: 28,\n            y_max: 632,\n            ha: 604,\n            leftSideBearing: 35,\n            advanceWidth: 466,\n        },\n        '?': {\n            x_min: 45,\n            x_max: 548,\n            y_min: -17,\n            y_max: 767,\n            ha: 784,\n            leftSideBearing: 45,\n            advanceWidth: 592,\n        },\n        '@': {\n            x_min: 51,\n            x_max: 730,\n            y_min: -78,\n            y_max: 753,\n            ha: 831,\n            leftSideBearing: 51,\n            advanceWidth: 781,\n        },\n        A: {\n            x_min: 37,\n            x_max: 554,\n            y_min: -4,\n            y_max: 746,\n            ha: 750,\n            leftSideBearing: 37,\n            advanceWidth: 617,\n        },\n        B: {\n            x_min: 37,\n            x_max: 532,\n            y_min: 3,\n            y_max: 783,\n            ha: 780,\n            leftSideBearing: 37,\n            advanceWidth: 579,\n        },\n        C: {\n            x_min: 37,\n            x_max: 583,\n            y_min: -3,\n            y_max: 775,\n            ha: 778,\n            leftSideBearing: 37,\n            advanceWidth: 623,\n        },\n        D: {\n            x_min: 50,\n            x_max: 530,\n            y_min: -15,\n            y_max: 749,\n            ha: 764,\n            leftSideBearing: 50,\n            advanceWidth: 579,\n        },\n        E: {\n            x_min: 45,\n            x_max: 531,\n            y_min: -1,\n            y_max: 743,\n            ha: 744,\n            leftSideBearing: 45,\n            advanceWidth: 585,\n        },\n        F: {\n            x_min: 45,\n            x_max: 459,\n            y_min: 23,\n            y_max: 727,\n            ha: 704,\n            leftSideBearing: 45,\n            advanceWidth: 510,\n        },\n        G: {\n            x_min: 31,\n            x_max: 577,\n            y_min: -8,\n            y_max: 733,\n            ha: 741,\n            leftSideBearing: 31,\n            advanceWidth: 611,\n        },\n        H: {\n            x_min: 37,\n            x_max: 493,\n            y_min: -22,\n            y_max: 758,\n            ha: 780,\n            leftSideBearing: 37,\n            advanceWidth: 535,\n        },\n        I: {\n            x_min: 47,\n            x_max: 501,\n            y_min: -3,\n            y_max: 731,\n            ha: 734,\n            leftSideBearing: 47,\n            advanceWidth: 541,\n        },\n        J: {\n            x_min: 33,\n            x_max: 531,\n            y_min: -23,\n            y_max: 725,\n            ha: 748,\n            leftSideBearing: 33,\n            advanceWidth: 573,\n        },\n        K: {\n            x_min: 43,\n            x_max: 505,\n            y_min: -10,\n            y_max: 740,\n            ha: 750,\n            leftSideBearing: 43,\n            advanceWidth: 560,\n        },\n        L: {\n            x_min: 49,\n            x_max: 457,\n            y_min: -2,\n            y_max: 746,\n            ha: 748,\n            leftSideBearing: 49,\n            advanceWidth: 510,\n        },\n        M: {\n            x_min: 35,\n            x_max: 699,\n            y_min: 1,\n            y_max: 744,\n            ha: 743,\n            leftSideBearing: 35,\n            advanceWidth: 743,\n        },\n        N: {\n            x_min: 34,\n            x_max: 533,\n            y_min: -17,\n            y_max: 761,\n            ha: 778,\n            leftSideBearing: 34,\n            advanceWidth: 579,\n        },\n        O: {\n            x_min: 41,\n            x_max: 608,\n            y_min: -5,\n            y_max: 735,\n            ha: 740,\n            leftSideBearing: 41,\n            advanceWidth: 667,\n        },\n        P: {\n            x_min: 53,\n            x_max: 451,\n            y_min: -18,\n            y_max: 735,\n            ha: 753,\n            leftSideBearing: 53,\n            advanceWidth: 497,\n        },\n        Q: {\n            x_min: 40,\n            x_max: 599,\n            y_min: -67,\n            y_max: 744,\n            ha: 811,\n            leftSideBearing: 40,\n            advanceWidth: 648,\n        },\n        R: {\n            x_min: 39,\n            x_max: 487,\n            y_min: 16,\n            y_max: 735,\n            ha: 719,\n            leftSideBearing: 39,\n            advanceWidth: 535,\n        },\n        S: {\n            x_min: 35,\n            x_max: 552,\n            y_min: -47,\n            y_max: 708,\n            ha: 755,\n            leftSideBearing: 35,\n            advanceWidth: 604,\n        },\n        T: {\n            x_min: 26,\n            x_max: 656,\n            y_min: -13,\n            y_max: 718,\n            ha: 731,\n            leftSideBearing: 26,\n            advanceWidth: 705,\n        },\n        U: {\n            x_min: 41,\n            x_max: 518,\n            y_min: -20,\n            y_max: 748,\n            ha: 768,\n            leftSideBearing: 41,\n            advanceWidth: 567,\n        },\n        V: {\n            x_min: 47,\n            x_max: 509,\n            y_min: -26,\n            y_max: 744,\n            ha: 770,\n            leftSideBearing: 47,\n            advanceWidth: 567,\n        },\n        W: {\n            x_min: 44,\n            x_max: 789,\n            y_min: -35,\n            y_max: 720,\n            ha: 755,\n            leftSideBearing: 44,\n            advanceWidth: 833,\n        },\n        X: {\n            x_min: 63,\n            x_max: 635,\n            y_min: -10,\n            y_max: 745,\n            ha: 755,\n            leftSideBearing: 63,\n            advanceWidth: 680,\n        },\n        Y: {\n            x_min: 43,\n            x_max: 503,\n            y_min: -21,\n            y_max: 734,\n            ha: 755,\n            leftSideBearing: 43,\n            advanceWidth: 541,\n        },\n        Z: {\n            x_min: 42,\n            x_max: 584,\n            y_min: -10,\n            y_max: 739,\n            ha: 749,\n            leftSideBearing: 42,\n            advanceWidth: 629,\n        },\n        '[': {\n            x_min: 46,\n            x_max: 346,\n            y_min: -150,\n            y_max: 884,\n            ha: 1034,\n            leftSideBearing: 46,\n            advanceWidth: 291,\n        },\n        '\\\\': {\n            x_min: 20,\n            x_max: 616,\n            y_min: -100,\n            y_max: 797,\n            ha: 897,\n            leftSideBearing: 20,\n            advanceWidth: 645,\n        },\n        ']': {\n            x_min: -76,\n            x_max: 226,\n            y_min: -150,\n            y_max: 881,\n            ha: 1031,\n            leftSideBearing: -76,\n            advanceWidth: 297,\n        },\n        '^': {\n            x_min: 43,\n            x_max: 437,\n            y_min: 517,\n            y_max: 812,\n            ha: 295,\n            leftSideBearing: 43,\n            advanceWidth: 478,\n        },\n        _: {\n            x_min: 29,\n            x_max: 563,\n            y_min: -110,\n            y_max: -1,\n            ha: 109,\n            leftSideBearing: 29,\n            advanceWidth: 598,\n        },\n        '`': {\n            x_min: 54,\n            x_max: 321,\n            y_min: 540,\n            y_max: 747,\n            ha: 207,\n            leftSideBearing: 54,\n            advanceWidth: 368,\n        },\n        a: {\n            x_min: 20,\n            x_max: 447,\n            y_min: -17,\n            y_max: 495,\n            ha: 512,\n            leftSideBearing: 20,\n            advanceWidth: 494,\n        },\n        b: {\n            x_min: 37,\n            x_max: 466,\n            y_min: -27,\n            y_max: 770,\n            ha: 797,\n            leftSideBearing: 37,\n            advanceWidth: 510,\n        },\n        c: {\n            x_min: 35,\n            x_max: 456,\n            y_min: -9,\n            y_max: 507,\n            ha: 516,\n            leftSideBearing: 35,\n            advanceWidth: 460,\n        },\n        d: {\n            x_min: 45,\n            x_max: 520,\n            y_min: -15,\n            y_max: 764,\n            ha: 779,\n            leftSideBearing: 45,\n            advanceWidth: 560,\n        },\n        e: {\n            x_min: 33,\n            x_max: 370,\n            y_min: -5,\n            y_max: 501,\n            ha: 506,\n            leftSideBearing: 33,\n            advanceWidth: 397,\n        },\n        f: {\n            x_min: 35,\n            x_max: 411,\n            y_min: -13,\n            y_max: 695,\n            ha: 708,\n            leftSideBearing: 35,\n            advanceWidth: 453,\n        },\n        g: {\n            x_min: 33,\n            x_max: 551,\n            y_min: -257,\n            y_max: 505,\n            ha: 762,\n            leftSideBearing: 33,\n            advanceWidth: 611,\n        },\n        h: {\n            x_min: 32,\n            x_max: 458,\n            y_min: -29,\n            y_max: 743,\n            ha: 772,\n            leftSideBearing: 32,\n            advanceWidth: 491,\n        },\n        i: {\n            x_min: 45,\n            x_max: 167,\n            y_min: -13,\n            y_max: 631,\n            ha: 644,\n            leftSideBearing: 45,\n            advanceWidth: 220,\n        },\n        j: {\n            x_min: -127,\n            x_max: 261,\n            y_min: -231,\n            y_max: 601,\n            ha: 832,\n            leftSideBearing: -127,\n            advanceWidth: 308,\n        },\n        k: {\n            x_min: 39,\n            x_max: 443,\n            y_min: -3,\n            y_max: 700,\n            ha: 703,\n            leftSideBearing: 39,\n            advanceWidth: 497,\n        },\n        l: {\n            x_min: 58,\n            x_max: 168,\n            y_min: -8,\n            y_max: 686,\n            ha: 694,\n            leftSideBearing: 58,\n            advanceWidth: 227,\n        },\n        m: {\n            x_min: 39,\n            x_max: 688,\n            y_min: -14,\n            y_max: 501,\n            ha: 515,\n            leftSideBearing: 39,\n            advanceWidth: 718,\n        },\n        n: {\n            x_min: 45,\n            x_max: 491,\n            y_min: -32,\n            y_max: 512,\n            ha: 544,\n            leftSideBearing: 45,\n            advanceWidth: 541,\n        },\n        o: {\n            x_min: 41,\n            x_max: 424,\n            y_min: -12,\n            y_max: 493,\n            ha: 505,\n            leftSideBearing: 41,\n            advanceWidth: 447,\n        },\n        p: {\n            x_min: 25,\n            x_max: 529,\n            y_min: -260,\n            y_max: 500,\n            ha: 760,\n            leftSideBearing: 25,\n            advanceWidth: 573,\n        },\n        q: {\n            x_min: 53,\n            x_max: 603,\n            y_min: -235,\n            y_max: 514,\n            ha: 749,\n            leftSideBearing: 53,\n            advanceWidth: 623,\n        },\n        r: {\n            x_min: 32,\n            x_max: 407,\n            y_min: -7,\n            y_max: 492,\n            ha: 499,\n            leftSideBearing: 32,\n            advanceWidth: 460,\n        },\n        s: {\n            x_min: 49,\n            x_max: 416,\n            y_min: -12,\n            y_max: 519,\n            ha: 531,\n            leftSideBearing: 49,\n            advanceWidth: 460,\n        },\n        t: {\n            x_min: 32,\n            x_max: 442,\n            y_min: -5,\n            y_max: 684,\n            ha: 689,\n            leftSideBearing: 32,\n            advanceWidth: 469,\n        },\n        u: {\n            x_min: 41,\n            x_max: 487,\n            y_min: -5,\n            y_max: 507,\n            ha: 512,\n            leftSideBearing: 41,\n            advanceWidth: 510,\n        },\n        v: {\n            x_min: 16,\n            x_max: 441,\n            y_min: -20,\n            y_max: 542,\n            ha: 562,\n            leftSideBearing: 16,\n            advanceWidth: 456,\n        },\n        w: {\n            x_min: 39,\n            x_max: 639,\n            y_min: -22,\n            y_max: 505,\n            ha: 527,\n            leftSideBearing: 39,\n            advanceWidth: 661,\n        },\n        x: {\n            x_min: 15,\n            x_max: 505,\n            y_min: -39,\n            y_max: 539,\n            ha: 578,\n            leftSideBearing: 15,\n            advanceWidth: 541,\n        },\n        y: {\n            x_min: -98,\n            x_max: 501,\n            y_min: -242,\n            y_max: 511,\n            ha: 753,\n            leftSideBearing: -98,\n            advanceWidth: 548,\n        },\n        z: {\n            x_min: 27,\n            x_max: 479,\n            y_min: -3,\n            y_max: 494,\n            ha: 497,\n            leftSideBearing: 27,\n            advanceWidth: 494,\n        },\n        '{': {\n            x_min: 0,\n            x_max: 0,\n            y_min: 0,\n            y_max: 0,\n            ha: 0,\n            leftSideBearing: 0,\n            advanceWidth: 308,\n        },\n        '|': {\n            x_min: 0,\n            x_max: 0,\n            y_min: 0,\n            y_max: 0,\n            ha: 0,\n            leftSideBearing: 0,\n            advanceWidth: 308,\n        },\n        '}': {\n            x_min: 0,\n            x_max: 0,\n            y_min: 0,\n            y_max: 0,\n            ha: 0,\n            leftSideBearing: 0,\n            advanceWidth: 308,\n        },\n        '~': {\n            x_min: 0,\n            x_max: 0,\n            y_min: 0,\n            y_max: 0,\n            ha: 0,\n            leftSideBearing: 0,\n            advanceWidth: 308,\n        },\n    },\n    fontFamily: 'PetalumaScript',\n    resolution: 1000,\n    generatedOn: '2020-06-14T18:33:25.407Z',\n};\n","export const RobotoSlabFont = {\n    spacing: 50,\n    glyphs: {\n        ' ': {\n            x_min: 0,\n            x_max: 509,\n            y_min: 0,\n            y_max: 2000,\n            ha: 2000,\n            leftSideBearing: 0,\n            advanceWidth: 509,\n        },\n        '0': {\n            x_min: 121,\n            x_max: 1048,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 121,\n            advanceWidth: 1168,\n        },\n        '1': {\n            x_min: 117,\n            x_max: 767,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 117,\n            advanceWidth: 844,\n        },\n        '2': {\n            x_min: 75.8474576645637,\n            x_max: 1040,\n            y_min: 0,\n            y_max: 1477,\n            ha: 1477,\n            leftSideBearing: 75,\n            advanceWidth: 1131,\n        },\n        '3': {\n            x_min: 74.85365853658536,\n            x_max: 994,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 74,\n            advanceWidth: 1106,\n        },\n        '4': {\n            x_min: 63,\n            x_max: 1114,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 63,\n            advanceWidth: 1187,\n        },\n        '5': {\n            x_min: 96.8448275474953,\n            x_max: 982,\n            y_min: -21,\n            y_max: 1456,\n            ha: 1477,\n            leftSideBearing: 96,\n            advanceWidth: 1081,\n        },\n        '6': {\n            x_min: 121,\n            x_max: 1067,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 121,\n            advanceWidth: 1144,\n        },\n        '7': {\n            x_min: 76,\n            x_max: 1060,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: -30,\n            advanceWidth: 1128,\n        },\n        '8': {\n            x_min: 92,\n            x_max: 1039,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 92,\n            advanceWidth: 1131,\n        },\n        '9': {\n            x_min: 84,\n            x_max: 1026,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 84,\n            advanceWidth: 1154,\n        },\n        '!': {\n            x_min: 143,\n            x_max: 340,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 143,\n            advanceWidth: 483,\n        },\n        '\"': {\n            x_min: 166,\n            x_max: 634,\n            y_min: 1055,\n            y_max: 1560,\n            ha: 505,\n            leftSideBearing: 166,\n            advanceWidth: 770,\n        },\n        '#': {\n            x_min: 63,\n            x_max: 1179,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 63,\n            advanceWidth: 1246,\n        },\n        $: {\n            x_min: 81.92156915727656,\n            x_max: 1012,\n            y_min: -208,\n            y_max: 1693,\n            ha: 1901,\n            leftSideBearing: 81,\n            advanceWidth: 1110,\n        },\n        '%': {\n            x_min: 77,\n            x_max: 1384,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 77,\n            advanceWidth: 1460,\n        },\n        '&': {\n            x_min: 74,\n            x_max: 1242,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 74,\n            advanceWidth: 1289,\n        },\n        \"'\": {\n            x_min: 166,\n            x_max: 324,\n            y_min: 1055,\n            y_max: 1560,\n            ha: 505,\n            leftSideBearing: 166,\n            advanceWidth: 460,\n        },\n        '(': {\n            x_min: 114,\n            x_max: 650,\n            y_min: -463,\n            y_max: 1636,\n            ha: 2099,\n            leftSideBearing: 114,\n            advanceWidth: 662,\n        },\n        ')': {\n            x_min: 11,\n            x_max: 547,\n            y_min: -463,\n            y_max: 1636,\n            ha: 2099,\n            leftSideBearing: 11,\n            advanceWidth: 654,\n        },\n        '*': {\n            x_min: 66,\n            x_max: 893,\n            y_min: 607,\n            y_max: 1456,\n            ha: 849,\n            leftSideBearing: 66,\n            advanceWidth: 958,\n        },\n        '+': {\n            x_min: 73,\n            x_max: 1071,\n            y_min: 146,\n            y_max: 1206,\n            ha: 1060,\n            leftSideBearing: 73,\n            advanceWidth: 1145,\n        },\n        ',': {\n            x_min: 23,\n            x_max: 315,\n            y_min: -311,\n            y_max: 221,\n            ha: 532,\n            leftSideBearing: 23,\n            advanceWidth: 404,\n        },\n        '-': {\n            x_min: 154,\n            x_max: 643,\n            y_min: 538,\n            y_max: 692,\n            ha: 154,\n            leftSideBearing: 154,\n            advanceWidth: 797,\n        },\n        '.': {\n            x_min: 145,\n            x_max: 342,\n            y_min: 0,\n            y_max: 202,\n            ha: 202,\n            leftSideBearing: 145,\n            advanceWidth: 493,\n        },\n        '/': {\n            x_min: 0,\n            x_max: 774,\n            y_min: -125,\n            y_max: 1456,\n            ha: 1581,\n            leftSideBearing: 0,\n            advanceWidth: 824,\n        },\n        ':': {\n            x_min: 145,\n            x_max: 342,\n            y_min: 0,\n            y_max: 1082,\n            ha: 1082,\n            leftSideBearing: 145,\n            advanceWidth: 419,\n        },\n        ';': {\n            x_min: 53,\n            x_max: 345,\n            y_min: -311,\n            y_max: 1082,\n            ha: 1393,\n            leftSideBearing: 53,\n            advanceWidth: 424,\n        },\n        '<': {\n            x_min: 76,\n            x_max: 892,\n            y_min: 107,\n            y_max: 1013,\n            ha: 906,\n            leftSideBearing: 76,\n            advanceWidth: 1017,\n        },\n        '=': {\n            x_min: 147,\n            x_max: 981,\n            y_min: 407,\n            y_max: 987,\n            ha: 580,\n            leftSideBearing: 147,\n            advanceWidth: 1127,\n        },\n        '>': {\n            x_min: 125,\n            x_max: 980,\n            y_min: 87,\n            y_max: 993,\n            ha: 906,\n            leftSideBearing: 125,\n            advanceWidth: 1060,\n        },\n        '?': {\n            x_min: 65.92660602419838,\n            x_max: 890,\n            y_min: 0,\n            y_max: 1477,\n            ha: 1477,\n            leftSideBearing: 65,\n            advanceWidth: 953,\n        },\n        '@': {\n            x_min: 84.3592218305664,\n            x_max: 1705.2346925277395,\n            y_min: -453,\n            y_max: 1431,\n            ha: 1884,\n            leftSideBearing: 84,\n            advanceWidth: 1821,\n        },\n        A: {\n            x_min: 70,\n            x_max: 1463,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 70,\n            advanceWidth: 1533,\n        },\n        B: {\n            x_min: 81,\n            x_max: 1253,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1322,\n        },\n        C: {\n            x_min: 80,\n            x_max: 1174,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 80,\n            advanceWidth: 1290,\n        },\n        D: {\n            x_min: 81,\n            x_max: 1291,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1356,\n        },\n        E: {\n            x_min: 81,\n            x_max: 1190,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1306,\n        },\n        F: {\n            x_min: 81,\n            x_max: 1176,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1256,\n        },\n        G: {\n            x_min: 80,\n            x_max: 1226,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 80,\n            advanceWidth: 1346,\n        },\n        H: {\n            x_min: 81,\n            x_max: 1497,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1578,\n        },\n        I: {\n            x_min: 81,\n            x_max: 604,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 685,\n        },\n        J: {\n            x_min: 60,\n            x_max: 1100,\n            y_min: -21,\n            y_max: 1456,\n            ha: 1477,\n            leftSideBearing: 60,\n            advanceWidth: 1169,\n        },\n        K: {\n            x_min: 81,\n            x_max: 1427,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1501,\n        },\n        L: {\n            x_min: 81,\n            x_max: 1130,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1210,\n        },\n        M: {\n            x_min: 94,\n            x_max: 1888,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 94,\n            advanceWidth: 1982,\n        },\n        N: {\n            x_min: 83,\n            x_max: 1509,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 83,\n            advanceWidth: 1592,\n        },\n        O: {\n            x_min: 70,\n            x_max: 1281,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 70,\n            advanceWidth: 1351,\n        },\n        P: {\n            x_min: 81,\n            x_max: 1242,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1297,\n        },\n        Q: {\n            x_min: 70,\n            x_max: 1348,\n            y_min: -245,\n            y_max: 1477,\n            ha: 1722,\n            leftSideBearing: 70,\n            advanceWidth: 1376,\n        },\n        R: {\n            x_min: 81,\n            x_max: 1285,\n            y_min: 0,\n            y_max: 1455,\n            ha: 1455,\n            leftSideBearing: 81,\n            advanceWidth: 1385,\n        },\n        S: {\n            x_min: 115,\n            x_max: 1116,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 115,\n            advanceWidth: 1206,\n        },\n        T: {\n            x_min: 96,\n            x_max: 1306,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 96,\n            advanceWidth: 1406,\n        },\n        U: {\n            x_min: 70,\n            x_max: 1452,\n            y_min: -21,\n            y_max: 1456,\n            ha: 1477,\n            leftSideBearing: 70,\n            advanceWidth: 1522,\n        },\n        V: {\n            x_min: 65,\n            x_max: 1443,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 65,\n            advanceWidth: 1508,\n        },\n        W: {\n            x_min: 72,\n            x_max: 2057,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 72,\n            advanceWidth: 2129,\n        },\n        X: {\n            x_min: 80,\n            x_max: 1449,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 80,\n            advanceWidth: 1529,\n        },\n        Y: {\n            x_min: 65,\n            x_max: 1396,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 65,\n            advanceWidth: 1461,\n        },\n        Z: {\n            x_min: 90,\n            x_max: 1107,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 90,\n            advanceWidth: 1197,\n        },\n        '[': {\n            x_min: 157,\n            x_max: 541,\n            y_min: -312,\n            y_max: 1664,\n            ha: 1976,\n            leftSideBearing: 157,\n            advanceWidth: 573,\n        },\n        '\\\\': {\n            x_min: 36,\n            x_max: 830,\n            y_min: -125,\n            y_max: 1456,\n            ha: 1581,\n            leftSideBearing: 36,\n            advanceWidth: 841,\n        },\n        ']': {\n            x_min: 23,\n            x_max: 408,\n            y_min: -312,\n            y_max: 1664,\n            ha: 1976,\n            leftSideBearing: 23,\n            advanceWidth: 552,\n        },\n        '^': {\n            x_min: 71,\n            x_max: 802,\n            y_min: 729,\n            y_max: 1456,\n            ha: 727,\n            leftSideBearing: 71,\n            advanceWidth: 864,\n        },\n        _: {\n            x_min: 119,\n            x_max: 1041,\n            y_min: -154,\n            y_max: 0,\n            ha: 154,\n            leftSideBearing: 119,\n            advanceWidth: 1168,\n        },\n        '`': {\n            x_min: 40,\n            x_max: 456,\n            y_min: 1288,\n            y_max: 1560,\n            ha: 272,\n            leftSideBearing: 40,\n            advanceWidth: 496,\n        },\n        a: {\n            x_min: 79,\n            x_max: 1053,\n            y_min: -21,\n            y_max: 1102,\n            ha: 1123,\n            leftSideBearing: 79,\n            advanceWidth: 1132,\n        },\n        b: {\n            x_min: -16,\n            x_max: 1071,\n            y_min: -21,\n            y_max: 1560,\n            ha: 1581,\n            leftSideBearing: -16,\n            advanceWidth: 1145,\n        },\n        c: {\n            x_min: 78,\n            x_max: 988,\n            y_min: -21,\n            y_max: 1102,\n            ha: 1123,\n            leftSideBearing: 78,\n            advanceWidth: 1067,\n        },\n        d: {\n            x_min: 78,\n            x_max: 1156,\n            y_min: -21,\n            y_max: 1560,\n            ha: 1581,\n            leftSideBearing: 78,\n            advanceWidth: 1218,\n        },\n        e: {\n            x_min: 74,\n            x_max: 980,\n            y_min: -21,\n            y_max: 1102,\n            ha: 1123,\n            leftSideBearing: 74,\n            advanceWidth: 1059,\n        },\n        f: {\n            x_min: 64,\n            x_max: 731,\n            y_min: 0,\n            y_max: 1581,\n            ha: 1581,\n            leftSideBearing: 64,\n            advanceWidth: 725,\n        },\n        g: {\n            x_min: 78,\n            x_max: 1133,\n            y_min: -437,\n            y_max: 1102,\n            ha: 1539,\n            leftSideBearing: 78,\n            advanceWidth: 1157,\n        },\n        h: {\n            x_min: 49,\n            x_max: 1255,\n            y_min: 0,\n            y_max: 1560,\n            ha: 1560,\n            leftSideBearing: 49,\n            advanceWidth: 1315,\n        },\n        i: {\n            x_min: 67,\n            x_max: 590,\n            y_min: 0,\n            y_max: 1560,\n            ha: 1560,\n            leftSideBearing: 67,\n            advanceWidth: 652,\n        },\n        j: {\n            x_min: -56,\n            x_max: 381,\n            y_min: -437,\n            y_max: 1560,\n            ha: 1997,\n            leftSideBearing: -56,\n            advanceWidth: 525,\n        },\n        k: {\n            x_min: 64,\n            x_max: 1248,\n            y_min: 0,\n            y_max: 1560,\n            ha: 1560,\n            leftSideBearing: 64,\n            advanceWidth: 1287,\n        },\n        l: {\n            x_min: 64,\n            x_max: 587,\n            y_min: 0,\n            y_max: 1560,\n            ha: 1560,\n            leftSideBearing: 64,\n            advanceWidth: 653,\n        },\n        m: {\n            x_min: 74,\n            x_max: 1905,\n            y_min: 0,\n            y_max: 1102,\n            ha: 1102,\n            leftSideBearing: 74,\n            advanceWidth: 1977,\n        },\n        n: {\n            x_min: 74,\n            x_max: 1278,\n            y_min: 0,\n            y_max: 1102,\n            ha: 1102,\n            leftSideBearing: 74,\n            advanceWidth: 1343,\n        },\n        o: {\n            x_min: 78,\n            x_max: 1046,\n            y_min: -21,\n            y_max: 1102,\n            ha: 1123,\n            leftSideBearing: 78,\n            advanceWidth: 1124,\n        },\n        p: {\n            x_min: 34,\n            x_max: 1119,\n            y_min: -416,\n            y_max: 1102,\n            ha: 1518,\n            leftSideBearing: 34,\n            advanceWidth: 1197,\n        },\n        q: {\n            x_min: 78,\n            x_max: 1135,\n            y_min: -416,\n            y_max: 1102,\n            ha: 1518,\n            leftSideBearing: 78,\n            advanceWidth: 1139,\n        },\n        r: {\n            x_min: 72,\n            x_max: 808,\n            y_min: 0,\n            y_max: 1102,\n            ha: 1102,\n            leftSideBearing: 72,\n            advanceWidth: 854,\n        },\n        s: {\n            x_min: 104,\n            x_max: 933,\n            y_min: -21,\n            y_max: 1102,\n            ha: 1123,\n            leftSideBearing: 104,\n            advanceWidth: 1022,\n        },\n        t: {\n            x_min: 24,\n            x_max: 678,\n            y_min: -17,\n            y_max: 1343,\n            ha: 1360,\n            leftSideBearing: 24,\n            advanceWidth: 730,\n        },\n        u: {\n            x_min: 52,\n            x_max: 1181,\n            y_min: -21,\n            y_max: 1082,\n            ha: 1103,\n            leftSideBearing: 52,\n            advanceWidth: 1245,\n        },\n        v: {\n            x_min: 26,\n            x_max: 1176,\n            y_min: 0,\n            y_max: 1082,\n            ha: 1082,\n            leftSideBearing: 26,\n            advanceWidth: 1206,\n        },\n        w: {\n            x_min: 52,\n            x_max: 1777,\n            y_min: 0,\n            y_max: 1082,\n            ha: 1082,\n            leftSideBearing: 52,\n            advanceWidth: 1823,\n        },\n        x: {\n            x_min: 42,\n            x_max: 1163,\n            y_min: 0,\n            y_max: 1082,\n            ha: 1082,\n            leftSideBearing: 42,\n            advanceWidth: 1203,\n        },\n        y: {\n            x_min: 24,\n            x_max: 1172,\n            y_min: -437,\n            y_max: 1082,\n            ha: 1519,\n            leftSideBearing: 24,\n            advanceWidth: 1192,\n        },\n        z: {\n            x_min: 88,\n            x_max: 960,\n            y_min: 0,\n            y_max: 1082,\n            ha: 1082,\n            leftSideBearing: 88,\n            advanceWidth: 1032,\n        },\n        '{': {\n            x_min: 63,\n            x_max: 671,\n            y_min: -364,\n            y_max: 1597,\n            ha: 1961,\n            leftSideBearing: 63,\n            advanceWidth: 701,\n        },\n        '|': {\n            x_min: 150,\n            x_max: 307,\n            y_min: -270,\n            y_max: 1456,\n            ha: 1726,\n            leftSideBearing: 150,\n            advanceWidth: 451,\n        },\n        '}': {\n            x_min: 27,\n            x_max: 635,\n            y_min: -364,\n            y_max: 1597,\n            ha: 1961,\n            leftSideBearing: 27,\n            advanceWidth: 701,\n        },\n        '~': {\n            x_min: 121,\n            x_max: 1257,\n            y_min: 401,\n            y_max: 803,\n            ha: 402,\n            leftSideBearing: 121,\n            advanceWidth: 1386,\n        },\n    },\n    fontFamily: 'Roboto Slab',\n    resolution: 2048,\n    generatedOn: '2020-06-15T19:12:58.120Z',\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// Utility methods used by the rest of the VexFlow codebase.\nimport { Flow } from './flow';\nimport { log, RuntimeError } from './util';\nexport class Vex {\n    // Users of `Vex.forEach(a, fn)` should use `Array.prototype.forEach()` instead.\n    // static forEach<T>(arr: T[], callbackFn: (value: T, index: number, array: T[]) => void) {\n    //   arr.forEach(callbackFn);\n    // }\n    /**\n     * Take `arr` and return a new list consisting of the sorted, unique,\n     * contents of arr. Does not modify `arr`.\n     */\n    // eslint-disable-next-line\n    static sortAndUnique(arr, cmp, eq) {\n        if (arr.length > 1) {\n            const newArr = [];\n            let last;\n            arr.sort(cmp);\n            for (let i = 0; i < arr.length; ++i) {\n                if (i === 0 || !eq(arr[i], last)) {\n                    newArr.push(arr[i]);\n                }\n                last = arr[i];\n            }\n            return newArr;\n        }\n        else {\n            return arr;\n        }\n    }\n    /** Check if array `arr` contains `obj`. */\n    // eslint-disable-next-line\n    static contains(arr, obj) {\n        let i = arr.length;\n        while (i--) {\n            if (arr[i] === obj) {\n                return true;\n            }\n        }\n        return false;\n    }\n    // Get the 2D Canvas context from DOM element `canvas_sel`.\n    static getCanvasContext(canvasSelector) {\n        if (!canvasSelector) {\n            throw new RuntimeError('BadArgument', 'Invalid canvas selector: ' + canvasSelector);\n        }\n        const canvas = document.getElementById(canvasSelector);\n        if (!(canvas && canvas.getContext)) {\n            throw new RuntimeError('UnsupportedBrowserError', 'This browser does not support HTML5 Canvas');\n        }\n        return canvas.getContext('2d');\n    }\n    /** Benchmark. Run function `f` once and report time elapsed shifted by `s` milliseconds. */\n    // eslint-disable-next-line\n    static benchmark(s, f) {\n        const start_time = new Date().getTime();\n        f();\n        const elapsed = new Date().getTime() - start_time;\n        log(s, elapsed + 'ms');\n    }\n    // Get stack trace.\n    static stackTrace() {\n        const err = new Error();\n        return err.stack;\n    }\n}\nVex.Flow = Flow;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n// If you are adding a new music engraving font, search for instances of ADD_MUSIC_FONT throughout the code base.\n// To compile your new font into vexflow.js, take a look at src/fonts/load_all.ts\n// You can export a font module which can be dynamically loaded by vexflow-core.js (see: Gruntfile.js).\n// ADD_MUSIC_FONT\n// To add a new music engraving font XXX, make a copy of this file and name it load_xxx.ts.\n// Then you will need to generate xxx_glyphs.ts and xxx_metrics.ts.\n// xxx_glyphs.ts is created by tools/fonts/fontgen_smufl.js\n// xxx_metrics.ts is created by hand. You could copy bravura_metrics.ts and modify/remove/add entries where necessary.\nimport { Font } from '../font';\nimport { BravuraFont } from './bravura_glyphs';\nimport { BravuraMetrics } from './bravura_metrics';\nexport function loadBravura() {\n    Font.load('Bravura', BravuraFont, BravuraMetrics);\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font } from '../font';\nimport { CustomFont } from './custom_glyphs';\nimport { CustomMetrics } from './custom_metrics';\nexport function loadCustom() {\n    Font.load('Custom', CustomFont, CustomMetrics);\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n//\n// vexflow-bravura.ts is the entry point for vexflow-bravura.js.\n// This version bundles the Bravura music engraving font.\nimport { Flow } from '../src/flow';\nimport { loadBravura } from '../src/fonts/load_bravura';\nimport { loadCustom } from '../src/fonts/load_custom';\nimport { loadTextFonts } from '../src/fonts/textfonts';\nloadBravura();\nloadCustom();\nFlow.setMusicFont('Bravura', 'Custom');\nloadTextFonts();\n// Re-export all exports from index.ts.\nexport * from '../src/index';\n// Also collect all exports into a default export for CJS projects.\nexport * as default from '../src/index';\n// ADD_MUSIC_FONT\n// To make a vexflow-xxx.js build that ONLY loads your new music font, copy this file and name it vexflow-xxx.ts.\n// Replace these lines:\n//     import { loadXXX } from '../src/fonts/load_xxx';\n//     loadXXX();\n//     Flow.setMusicFont('XXX', 'Custom');\n// Feel free to remove references to Custom if you are not using those glyphs.\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font } from '../font';\nimport { TextFormatter } from '../textformatter';\nimport { PetalumaScriptFont } from './petalumascript_glyphs';\nimport { RobotoSlabFont } from './robotoslab_glyphs';\nexport function loadTextFonts() {\n    // Roboto Slab\n    {\n        const fontData = RobotoSlabFont;\n        const { fontFamily, resolution, glyphs } = fontData;\n        Font.load(fontFamily, fontData);\n        // Previously we used 'H', but it isn't actually the tallest or the widest.\n        // Interestingly, the lowercase 'b' is the tallest glyph.\n        const maxSizeGlyph = 'b';\n        TextFormatter.registerInfo({\n            family: fontFamily,\n            resolution,\n            glyphs,\n            maxSizeGlyph,\n            monospaced: false,\n            bold: false,\n            italic: false,\n            superscriptOffset: 0.66,\n            subscriptOffset: 0.66,\n            serifs: true,\n            description: 'Text font to pair with the Bravura / Gonville music fonts.',\n        });\n    }\n    // PetalumaScript\n    {\n        const fontData = PetalumaScriptFont;\n        const { fontFamily, resolution, glyphs } = fontData;\n        Font.load(fontFamily, fontData);\n        // M is wider, but H is taller. :-)\n        // Lowercase b is also taller in this font.\n        const maxSizeGlyph = 'b';\n        TextFormatter.registerInfo({\n            family: fontFamily,\n            resolution,\n            glyphs,\n            maxSizeGlyph,\n            monospaced: false,\n            bold: false,\n            italic: false,\n            superscriptOffset: 0.66,\n            subscriptOffset: 0.66,\n            serifs: false,\n            description: 'Text font to pair with the Petaluma music font.',\n        });\n    }\n}\n"],"names":["root","factory","exports","module","define","amd","window","globalThis","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","g","Function","e","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","isCategory","category","checkAncestors","constructorFcn","constructor","CATEGORY","getPrototypeOf","isAccidental","Category","Accidental","isAnnotation","Annotation","isBarline","Barline","isDot","Dot","isGraceNote","GraceNote","isGraceNoteGroup","GraceNoteGroup","isNote","Note","isRenderContext","RenderContext","isStaveNote","StaveNote","isStemmableNote","StemmableNote","isTabNote","TabNote","RuntimeError","Error","code","message","super","globalObject","self","defined","x","undefined","log","block","args","line","Array","slice","join","console","warn","err","stack","midLine","a","b","mid_line","n","parseInt","prefix","text","normalizeAngle","Math","PI","Fraction","numerator","denominator","set","static","Number","isNaN","t","GCD","length","LCM","shift","LCMM","simplify","u","d","gcd","add","param1","param2","otherNumerator","otherDenominator","getNumeratorAndDenominator","lcm","subtract","multiply","divide","equals","compare","__staticFractionA","copy","__staticFractionB","greaterThan","greaterThanEquals","lessThan","lessThanEquals","clone","other","quotient","floor","remainder","makeAbs","abs","toString","toSimplifiedString","__staticFractionTmp","toMixedString","s","q","f","parse","str","i","split","BoundingBox","y","w","h","that","getX","getY","getW","getH","setX","setY","setW","setH","move","mergeWith","boundingBox","new_x","new_y","new_w","max","new_h","BoundingBoxComputation","x1","NaN","y1","x2","y2","getX1","getY1","width","height","addPoint","addX","addY","addQuadraticCurve","p0x","p0y","p1x","p1y","p2x","p2y","p01x","denom","it","p01y","addBezierCurve","p3x","p3y","p0","p1","p2","p3","pow","c","b2ac","t1","sqrt","t2","FontWeight","FontStyle","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","apply","fontParser","Fonts","Font","fontName","name","fontSize","SIZE","_a","scaleToPxFrom","pt","parseFloat","unit","replace","toLowerCase","size","weight","style","fromCSSString","family","SANS_SERIF","NORMAL","cssFontShorthand","document","createElement","font","fontFamily","fontWeight","fontStyle","fontInfo","st","trim","wt","sz","scaleFactor","parsedWeight","ITALIC","woffURL","includeWoff2","fontFace","FontFace","load","fonts","host","WEB_FONT_HOST","files","WEB_FONT_FILES","fontPath","loadWebFont","data","metrics","setData","setMetrics","getName","getData","getMetrics","hasData","getResolution","resolution","getGlyphs","glyphs","lookupMetric","defaultValue","keyParts","currObj","SERIF","px","em","in","mm","cm","PetalumaScript","Index","id","type","class","Registry","index","defaultRegistry","registry","clear","setIndexValue","elem","updateIndex","oldValue","getElementById","getAttribute","register","setAttribute","onRegister","_b","getElementsByAttribute","attribute","index_attr","index_attr_val","keys","map","k","getElementsByType","getElementsByClass","className","onUpdate","info","includes","Element","children","attrs","newID","el","getCategory","classes","rendered","getDefaultRegistry","ID","addChildElement","child","push","setStyle","setGroupStyle","forEach","getStyle","applyStyle","context","save","shadowColor","setShadowColor","shadowBlur","setShadowBlur","fillStyle","setFillStyle","strokeStyle","setStrokeStyle","lineWidth","setLineWidth","restoreStyle","restore","drawWithStyle","checkContext","draw","hasClass","addClass","removeClass","isRendered","setRendered","getAttributes","oldID","getBoundingBox","getContext","setContext","setFont","toCSSString","textFont","defaultTextFont","TEXT_FONT","fontIsObject","fontIsString","fontIsUndefined","sizeWeightStyleAreUndefined","assign","validate","getFont","resetFont","setFontSize","getFontSize","fontSizeInPoints","convertSizeToPointValue","fontSizeInPixels","convertSizeToPixelValue","RESOLUTION","durations","durationAliases","keySignatures","C","num","Am","F","acc","Dm","Bb","Gm","Eb","Cm","Ab","Fm","Db","Bbm","Gb","Ebm","Cb","Abm","G","Em","D","Bm","A","E","B","clefs","treble","line_shift","bass","tenor","alto","soprano","percussion","subbass","french","notesInfo","int_val","CN","accidental","CB","CBB","DN","DB","DBB","EN","EB","EBB","FN","FB","FBB","GN","GB","GBB","AN","AB","ABB","BN","BB","BBB","R","rest","X","octave","shift_right","accidentals","parenRightPaddingAdjustment","bb","db","bs","bss","bbs","ashs","afhf","accSagittal5v7KleismaUp","accSagittal5v7KleismaDown","accSagittal5CommaUp","accSagittal5CommaDown","accSagittal7CommaUp","accSagittal7CommaDown","accSagittal25SmallDiesisUp","accSagittal25SmallDiesisDown","accSagittal35MediumDiesisUp","accSagittal35MediumDiesisDown","accSagittal11MediumDiesisUp","accSagittal11MediumDiesisDown","accSagittal11LargeDiesisUp","accSagittal11LargeDiesisDown","accSagittal35LargeDiesisUp","accSagittal35LargeDiesisDown","accSagittalSharp25SDown","accSagittalFlat25SUp","accSagittalSharp7CDown","accSagittalFlat7CUp","accSagittalSharp5CDown","accSagittalFlat5CUp","accSagittalSharp5v7kDown","accSagittalFlat5v7kUp","accSagittalSharp","accSagittalFlat","accSagittalSharp5v7kUp","accSagittalFlat5v7kDown","accSagittalSharp5CUp","accSagittalFlat5CDown","accSagittalSharp7CUp","accSagittalFlat7CDown","accSagittalSharp25SUp","accSagittalFlat25SDown","accSagittalSharp35MUp","accSagittalFlat35MDown","accSagittalSharp11MUp","accSagittalFlat11MDown","accSagittalSharp11LUp","accSagittalFlat11LDown","accSagittalSharp35LUp","accSagittalFlat35LDown","accSagittalDoubleSharp25SDown","accSagittalDoubleFlat25SUp","accSagittalDoubleSharp7CDown","accSagittalDoubleFlat7CUp","accSagittalDoubleSharp5CDown","accSagittalDoubleFlat5CUp","accSagittalDoubleSharp5v7kDown","accSagittalDoubleFlat5v7kUp","accSagittalDoubleSharp","accSagittalDoubleFlat","accSagittal7v11KleismaUp","accSagittal7v11KleismaDown","accSagittal17CommaUp","accSagittal17CommaDown","accSagittal55CommaUp","accSagittal55CommaDown","accSagittal7v11CommaUp","accSagittal7v11CommaDown","accSagittal5v11SmallDiesisUp","accSagittal5v11SmallDiesisDown","accSagittalSharp5v11SDown","accSagittalFlat5v11SUp","accSagittalSharp7v11CDown","accSagittalFlat7v11CUp","accSagittalSharp55CDown","accSagittalFlat55CUp","accSagittalSharp17CDown","accSagittalFlat17CUp","accSagittalSharp7v11kDown","accSagittalFlat7v11kUp","accSagittalSharp7v11kUp","accSagittalFlat7v11kDown","accSagittalSharp17CUp","accSagittalFlat17CDown","accSagittalSharp55CUp","accSagittalFlat55CDown","accSagittalSharp7v11CUp","accSagittalFlat7v11CDown","accSagittalSharp5v11SUp","accSagittalFlat5v11SDown","accSagittalDoubleSharp5v11SDown","accSagittalDoubleFlat5v11SUp","accSagittalDoubleSharp7v11CDown","accSagittalDoubleFlat7v11CUp","accSagittalDoubleSharp55CDown","accSagittalDoubleFlat55CUp","accSagittalDoubleSharp17CDown","accSagittalDoubleFlat17CUp","accSagittalDoubleSharp7v11kDown","accSagittalDoubleFlat7v11kUp","accSagittal23CommaUp","accSagittal23CommaDown","accSagittal5v19CommaUp","accSagittal5v19CommaDown","accSagittal5v23SmallDiesisUp","accSagittal5v23SmallDiesisDown","accSagittalSharp5v23SDown","accSagittalFlat5v23SUp","accSagittalSharp5v19CDown","accSagittalFlat5v19CUp","accSagittalSharp23CDown","accSagittalFlat23CUp","accSagittalSharp23CUp","accSagittalFlat23CDown","accSagittalSharp5v19CUp","accSagittalFlat5v19CDown","accSagittalSharp5v23SUp","accSagittalFlat5v23SDown","accSagittalDoubleSharp5v23SDown","accSagittalDoubleFlat5v23SUp","accSagittalDoubleSharp5v19CDown","accSagittalDoubleFlat5v19CUp","accSagittalDoubleSharp23CDown","accSagittalDoubleFlat23CUp","accSagittal19SchismaUp","accSagittal19SchismaDown","accSagittal17KleismaUp","accSagittal17KleismaDown","accSagittal143CommaUp","accSagittal143CommaDown","accSagittal11v49CommaUp","accSagittal11v49CommaDown","accSagittal19CommaUp","accSagittal19CommaDown","accSagittal7v19CommaUp","accSagittal7v19CommaDown","accSagittal49SmallDiesisUp","accSagittal49SmallDiesisDown","accSagittal23SmallDiesisUp","accSagittal23SmallDiesisDown","accSagittal5v13MediumDiesisUp","accSagittal5v13MediumDiesisDown","accSagittal11v19MediumDiesisUp","accSagittal11v19MediumDiesisDown","accSagittal49MediumDiesisUp","accSagittal49MediumDiesisDown","accSagittal5v49MediumDiesisUp","accSagittal5v49MediumDiesisDown","accSagittal49LargeDiesisUp","accSagittal49LargeDiesisDown","accSagittal11v19LargeDiesisUp","accSagittal11v19LargeDiesisDown","accSagittal5v13LargeDiesisUp","accSagittal5v13LargeDiesisDown","accSagittalSharp23SDown","accSagittalFlat23SUp","accSagittalSharp49SDown","accSagittalFlat49SUp","accSagittalSharp7v19CDown","accSagittalFlat7v19CUp","accSagittalSharp19CDown","accSagittalFlat19CUp","accSagittalSharp11v49CDown","accSagittalFlat11v49CUp","accSagittalSharp143CDown","accSagittalFlat143CUp","accSagittalSharp17kDown","accSagittalFlat17kUp","accSagittalSharp19sDown","accSagittalFlat19sUp","accSagittalSharp19sUp","accSagittalFlat19sDown","accSagittalSharp17kUp","accSagittalFlat17kDown","accSagittalSharp143CUp","accSagittalFlat143CDown","accSagittalSharp11v49CUp","accSagittalFlat11v49CDown","accSagittalSharp19CUp","accSagittalFlat19CDown","accSagittalSharp7v19CUp","accSagittalFlat7v19CDown","accSagittalSharp49SUp","accSagittalFlat49SDown","accSagittalSharp23SUp","accSagittalFlat23SDown","accSagittalSharp5v13MUp","accSagittalFlat5v13MDown","accSagittalSharp11v19MUp","accSagittalFlat11v19MDown","accSagittalSharp49MUp","accSagittalFlat49MDown","accSagittalSharp5v49MUp","accSagittalFlat5v49MDown","accSagittalSharp49LUp","accSagittalFlat49LDown","accSagittalSharp11v19LUp","accSagittalFlat11v19LDown","accSagittalSharp5v13LUp","accSagittalFlat5v13LDown","accSagittalDoubleSharp23SDown","accSagittalDoubleFlat23SUp","accSagittalDoubleSharp49SDown","accSagittalDoubleFlat49SUp","accSagittalDoubleSharp7v19CDown","accSagittalDoubleFlat7v19CUp","accSagittalDoubleSharp19CDown","accSagittalDoubleFlat19CUp","accSagittalDoubleSharp11v49CDown","accSagittalDoubleFlat11v49CUp","accSagittalDoubleSharp143CDown","accSagittalDoubleFlat143CUp","accSagittalDoubleSharp17kDown","accSagittalDoubleFlat17kUp","accSagittalDoubleSharp19sDown","accSagittalDoubleFlat19sUp","accSagittalShaftUp","accSagittalShaftDown","accSagittalAcute","accSagittalGrave","accSagittal1MinaUp","accSagittal1MinaDown","accSagittal2MinasUp","accSagittal2MinasDown","accSagittal1TinaUp","accSagittal1TinaDown","accSagittal2TinasUp","accSagittal2TinasDown","accSagittal3TinasUp","accSagittal3TinasDown","accSagittal4TinasUp","accSagittal4TinasDown","accSagittal5TinasUp","accSagittal5TinasDown","accSagittal6TinasUp","accSagittal6TinasDown","accSagittal7TinasUp","accSagittal7TinasDown","accSagittal8TinasUp","accSagittal8TinasDown","accSagittal9TinasUp","accSagittal9TinasDown","accSagittalFractionalTinaUp","accSagittalFractionalTinaDown","accidentalNarrowReversedFlat","accidentalNarrowReversedFlatAndFlat","accidentalWilsonPlus","accidentalWilsonMinus","articulations","between_lines","av","aboveCode","belowCode","ao","ah","am","ornaments","mordent","mordent_inverted","turn","turn_inverted","tr","upprall","downprall","prallup","pralldown","upmordent","downmordent","lineprall","prallprall","scoop","doit","fall","doitLong","fallLong","bend","plungerClosed","plungerOpen","flip","jazzTurn","smear","Tables","MUSIC_FONT_STACK","clef","keyOctaveGlyph","params","options","octave_shift","duration","sanitizeDuration","pieces","toUpperCase","clefProperties","stroke","int_value","customNoteHeadProps","glyphName","codeNoteHead","displaced","integer","noteValue","fret","scale","glyph","shift_y","glyphMetrics","Glyph","TABLATURE_FONT_SCALE","textWidth","getWidth","artic","spec","keySpec","notes","acc_list","durationNumber","durationToFraction","ticks","durationCodes","glyphTypeProperties","code_head","common","NOTATION_FONT_SCALE","SOFTMAX_FACTOR","STEM_WIDTH","STEM_HEIGHT","STAVE_LINE_THICKNESS","RENDER_PRECISION_PLACES","SLASH_NOTEHEAD_WIDTH","STAVE_LINE_DISTANCE","TEXT_HEIGHT_OFFSET_HACK","accidentalMap","accidentalColumnsTable","second_on_bottom","spaced_out_tetrachord","spaced_out_pentachord","very_spaced_out_pentachord","spaced_out_hexachord","very_spaced_out_hexachord","unicode","sharp","String","fromCharCode","flat","natural","triangle","degrees","circle","validTypes","m","ci","cx","sf","sb","sq","tu","td","TIME4_4","num_beats","beat_value","stem","stem_offset","flag","stem_up_extension","stem_down_extension","tabnote_stem_up_extension","tabnote_stem_down_extension","dot_shiftY","line_above","line_below","position","leger_code_head","beam_count","stem_beam_extension","code_flag_upstem","code_flag_downstem","OutlineCode","ModifierPosition","GlyphCacheEntry","fontStack","point","loadMetrics","bbox","getOutlineBoundingBox","outline","x_shift","y_shift","lookupFontMetric","GlyphOutline","originX","originY","precision","round","nextX","nextY","parts","MOVE","LINE","QUADRATIC","BEZIER","topGlyphs","botGlyphs","originShift","setOptions","reset","lookupGlyph","x_min","x_max","ha","cached_outline","ctx","x_pos","y_pos","cache","lookup","customScale","renderOutline","go","beginPath","moveTo","lineTo","quadraticCurveTo","bezierCurveTo","fill","bboxComp","penX","penY","getCode","setPoint","setStave","stave","getXShift","setXShift","getYshift","setYShift","checkMetrics","metricsScale","setOriginX","xShift","setOriginY","yShift","setOrigin","render","xPos","yPos","checkStave","renderToStave","getYForGlyphs","Map","entries","CURRENT_CACHE_KEY","entry","Modifier","text_line","Position","LEFT","spacingFromNextModifier","PositionString","center","CENTER","above","ABOVE","below","BELOW","left","right","RIGHT","setWidth","getNote","note","checkAttachedNote","setNote","getIndex","checkIndex","setIndex","getModifierContext","modifierContext","checkModifierContext","setModifierContext","getPosition","setPosition","setTextLine","setSpacingFromNextModifier","getSpacingFromNextModifier","alignSubNotesWithNote","subNotes","tickContext","getTickContext","getStave","subNoteXOffset","modLeftPx","modRightPx","subNote","subTickContext","setXOffset","Music","NUM_TONES","canonical_notes","roots","root_values","root_indices","diatonic_intervals","diatonic_accidentals","unison","m2","M2","m3","M3","p4","dim5","p5","m6","M6","b7","M7","intervals","b2","min2","S","H","maj2","T","W","b3","min3","maj3","b5","aug4","b6","aug5","maj6","m7","min7","dom7","maj7","scales","major","minor","ionian","dorian","phyrgian","lydian","mixolydian","aeolian","locrian","scaleTypes","M","noteValues","root_index","cn","cb","cbb","dn","dbb","en","eb","ebb","fn","fb","fbb","gn","gb","gbb","an","ab","abb","bn","bbb","isValidNoteValue","isValidIntervalValue","interval","getNoteParts","noteString","match","exec","getKeyParts","keyString","getNoteValue","getIntervalValue","intervalString","getCanonicalNoteName","getCanonicalIntervalName","intervalValue","getRelativeNoteValue","direction","sum","getRelativeNoteName","rootValue","multiplier","reverse_interval","relativeNoteName","getScaleTones","tones","nextNote","getIntervalBetween","note1","note2","difference","createScaleMap","keySignature","keySigParts","scaleName","keySigString","noteLocation","scaleMap","rootName","noteName","L","DEBUG","render_options","font_scale","parenLeftPadding","parenRightPadding","accidentalCodes","cautionary","state","musicFont","currentMusicFont","noteheadAccidentalPadding","leftShift","left_shift","accidentalSpacing","additionalPadding","accList","prevNote","shiftL","props","getKeyProps","getLeftDisplacedHeadPx","lineSpace","getSpacingBetweenLines","getYForLine","accLine","sort","lineList","previousLine","accShift","flatLine","dblSharpLine","numAcc","column","totalColumns","noFurtherConflicts","groupStart","groupEnd","checkCollision","getGroupLine","getGroupLines","indexes","lineDifference","indexA","indexB","item","notColliding","indexPairs","every","line1","line2","groupLength","groupMember","endCase","patternLength","collisionDetected","columnWidths","columnXOffsets","totalShift","accCount","lastAccOnLine","clearance","clearanceRequired","collision","voices","tickPositions","tickNoteMap","voice","tickPosition","getTickables","shouldIgnoreTicks","notesAtPosition","getTicks","music","scaleMapKey","tickPos","tickables","modifiedPitches","processNote","isRest","staveNote","keyIndex","accidentalString","pitch","sameAccidental","previouslyModified","indexOf","getModifiers","modifier","splice","addModifier","getGraceNotes","fontScale","parenLeft","parenRight","parenWidth","setAsCautionary","start","getModifierStartXY","accX","accY","Stem","stem_up_y_offset","stem_down_y_offset","stem_up_y_base_offset","stem_down_y_base_offset","x_begin","x_end","y_top","y_bottom","stem_extension","stem_direction","hide","isStemlet","stemletHeight","renderHeightAdjustment","UP","DOWN","WIDTH","HEIGHT","setNoteHeadXBounds","setDirection","setExtension","ext","getExtension","setYBounds","getHeight","y_offset","getExtents","isStemUp","ys","stemHeight","innerMostNoteheadY","min","outerMostNoteheadY","topY","baseY","setVisibility","isVisible","setStemlet","adjustHeightForFlag","adjustHeightForBeam","stem_x","stem_y","y_base_offset","stemletYOffset","TextFormatter","textWidthCache","formatterInfo","serifs","monospaced","italic","bold","superscriptOffset","subscriptOffset","maxSizeGlyph","cacheKey","updateParams","registeredFonts","requestedFont","candidates","requestedFamilies","requestedFamily","startsWith","formatter","values","isBold","isItalic","perfectMatch","find","partialMatch","fontSizeInPt","overwrite","updateCacheKey","BOLD","getGlyphMetrics","character","maxHeight","getWidthForCharacterInEm","advanceWidth","getWidthForTextInEm","cachedWidths","getWidthForTextInPx","AnnotationHorizontalJustify","AnnotationVerticalJustify","horizontalJustification","verticalJustification","TOP","minAnnotationPadding","annotations","leftWidth","rightWidth","maxLeftGlyphWidth","maxRightGlyphWidth","annotation","textFormatter","create","verticalSpaceNeeded","glyphWidth","getGlyph","stemDirection","hasStem","getStemDirection","lines","draw_stem","getStem","getNoteType","getNumLines","VerticalJustify","noteLine","getLineNumber","leastString","top_text_line","BOTTOM","greatestString","curBottom","rightOverlap","right_shift","leftOverlap","setVerticalJustification","just","VerticalJustifyString","getJustification","setJustification","HorizontalJustifyString","classString","openGroup","text_width","measureText","text_height","getStemX","stem_ext","spacing","has_stem","checkStem","getYs","reduce","yt","getYForTopText","getYForBottomText","getTopLineTopY","extents","getStemExtents","fillText","closeGroup","HorizontalJustify","centerStem","CENTER_STEM","top","bottom","roundToNearestHalf","mathFn","isWithinLines","getRoundingFunction","ceil","isStaveOrGraceNote","Articulation","maxGlyphWidth","getIncrement","articulation","increment","curTop","maxWidth","articWidth","overlap","builder","articNameToCode","staccato","tenuto","accent","articString","getFactory","articulationCodes","textLine","canSitBetweenLines","staffSpace","isTab","shouldSitOutsideStaff","initialOffset","isOnStemTip","getInitialOffset","padding","stemTipY","stemBaseY","getTopY","INITIAL_OFFSET","getBottomY","offsetDirection","articLine","snappedLine","snapLineToStaff","setRawFont","drawDot","color","arc","closePath","Tickable","_preFormatted","_postFormatted","intrinsicTicks","tickMultiplier","modifiers","tupletStack","align_center","center_x_shift","ignore_ticks","formatterMetrics","freedom","iterations","space","used","mean","deviation","setIgnoreTicks","checkTickContext","getFormatterMetrics","getCenterXShift","isCenterAligned","setCenterXShift","centerXShift","setCenterAlignment","getVoice","setVoice","getTuplet","tuplet","getTupletStack","resetTuplet","noteCount","notesOccupied","getNoteCount","getNotesOccupied","applyTickMultiplier","pop","setTuplet","addToModifierContext","mc","addMember","setTickContext","tc","preFormat","preFormatted","postFormat","postFormatted","getIntrinsicTicks","setIntrinsicTicks","getTickMultiplier","setDuration","getAbsoluteX","noteStruct","parsedNoteStruct","parseNoteStruct","JSON","stringify","keyProps","noteType","customTypes","duration_override","getGlyphProps","customGlyphs","playNote","leftDisplacedHeadPx","rightDisplacedHeadPx","annotation_spacing","glyph_font_scale","stroke_px","xStart","xPre1","xAbs","xPost1","notePx","xPost2","xEnd","xFreedomRight","xWidth","yy","spaceDeviation","durationString","dots","durationProps","parseDuration","durationToTicks","currentTicks","getPlayNote","setPlayNote","addStroke","setYs","getRightDisplacedHeadPx","setLeftDisplacedHeadPx","setRightDisplacedHeadPx","isTopNote","getLineForRest","getGlyphWidth","getDuration","isDotted","getModifiersByType","getBeam","beam","checkBeam","hasBeam","setBeam","signature","filter","getRightParenthesisPx","getLeftParenthesisPx","getFirstDotPx","getMembers","getState","glyphPx","getNoteStartX","getTieRightX","tieStartX","getTieLeftX","tieEndX","getKeys","StaveModifierPosition","BarlineType","ChordSymbolHorizontalJustify","ChordSymbolVerticalJustify","SymbolTypes","SymbolModifiers","StaveModifier","placeGlyphOnLine","customShift","getPadding","setPadding","setLayoutMetrics","layoutMetrics","getLayoutMetrics","thickness","TYPE","widths","SINGLE","DOUBLE","END","REPEAT_BEGIN","REPEAT_END","REPEAT_BOTH","NONE","paddings","layoutMetricsMap","xMin","xMax","paddingLeft","paddingRight","BEGIN","setType","typeString","single","double","end","repeatBegin","repeatEnd","repeatBoth","none","getType","drawVerticalBar","drawVerticalEndBar","drawRepeatBar","double_bar","staveCtx","botY","getBottomLineBottomY","fillRect","begin","dot_x","dot_radius","dot_y","BarNote","barline","Bend","release","phrase","tap","line_width","line_style","bend_width","release_width","updateWidth","bends","last_width","stringPos","setTap","getText","getTextHeight","totalWidth","additional_width","draw_width","lowestY","bend_height","annotation_y","renderBend","cp_x","cp_y","renderRelease","renderArrowHead","yBase","renderText","render_x","last_bend","last_bend_draw_width","last_drawn_width","ChordSymbol","symbolBlocks","horizontal","vertical","useKerning","reportWidth","superSubRatio","global","NO_TEXT_FORMAT","val","noFormat","glyphCode","engravingFontResolution","spacingBetweenBlocks","metric","getMetricForGlyph","yOffset","leftSideBearing","kerningOffset","chordSymbol","lowerKerningText","upperKerningText","symbolModifier","SUPERSCRIPT","SUBSCRIPT","minPadding","symbols","nonSuperWidth","symbol","fontAdj","scaleSize","glyphAdj","symbolWidth","lineSpaces","vAlign","j","sup","isSuperscript","sub","isSubscript","superSubScale","adj","symbolType","GLYPH","superSubFontSize","getWidthForGlyph","getYShiftForGlyph","getXShiftForGlyph","TEXT","getYOffsetForText","over","prev","setEnableKerning","updateKerningAdjustments","updateOverBarAdjustments","getVertical","getReportWidth","getHorizontal","setReportWidth","barIndex","findIndex","xoff","yoff","symIndex","accum","getKerningAdjustment","currSymbol","prevSymbol","adjustment","preKernUpper","preKernLower","some","xx","kerningOffsetPixels","getSymbolBlock","_c","symbolBlock","glyphArgs","glyphPoints","addSymbolBlock","parameters","addText","addTextSuperscript","addTextSubscript","addGlyphSuperscript","addGlyph","addGlyphOrText","char","addLine","setVertical","vj","setHorizontal","hj","yMax","y_max","stem_base","isSuper","isSub","curY","smallerFontSize","diminished","dim","halfDiminished","augmented","majorSeventh","leftParen","rightParen","leftBracket","rightBracket","leftParenTall","rightParenTall","symbolTypes","symbolModifiers","radius","all","dot","setDotShiftY","dot_list","max_shift_map","note_id","dot_shift","x_width","last_line","last_note","prev_dotted_space","half_shiftY","forceFlagRight","FretHandFinger","finger","x_offset","nums","nums_list","prev_note","shiftLeft","shiftRight","pos","textHeight","shiftR","numShiftL","numShiftR","xWidthL","xWidthR","lastLine","lastNote","num_shift","numWidth","fingerings","fingeringString","number","Fingering","fingering","setFretHandFinger","getFretHandFinger","setOffsetX","setOffsetY","NoteHead","custom_glyph","stem_up_x_offset","stem_down_x_offset","note_type","glyph_code","custom_glyph_code","slashed","isDisplaced","getLine","setLine","displacementStemAdjustment","fontShift","displacedFontShift","half_spacing","min_y","getYForNote","head_x","categorySuffix","staveSpace","durationToNumber","breve_lines","drawSlashNoteHead","renderGlyph","setStem","buildStem","buildFlag","hasFlag","flagCode","getBaseCustomNoteHeadGlyph","getStemLength","getStemExtension","getBeamCount","getStemMinimumLength","setStemDirection","offsets","offsetYBaseStemUp","offsetYTopStemUp","offsetYBaseStemDown","offsetYTopStemDown","getCenterGlyphX","stem_extension_override","setStemLength","drawStem","stemOptions","shiftRestVertical","dir","delta","maxLine","minLine","setKeyLine","getKeyLine","sortedKeyProps","ledgerLineStyle","use_default_head_x","_noteHeads","LEDGER_LINE_OFFSET","calculateKeyProps","auto_stem","autoStem","STEM_UP","STEM_DOWN","minNoteheadPadding","notesList","minL","stemMax","stemMin","maxL","isrest","voice_shift","getVoiceShiftWidth","is_displaced","noteU","noteM","noteL","voiceXShift","lineSpacing","lineDiff","whiteNoteHeadCount","blackNoteHeadCount","centerRest","noteHeadStyles","noteHead","buildNoteHeads","noteHeadStyle","head","calcNoteDisplacements","noteProps","notehead","calculateOptimalStemDirection","keyProperties","minY","maxY","halfLineSpacing","frac","resultLine","thisLine","isChord","getNoteHeadBounds","setNoteDisplaced","getRightShift","restLine","isInnerNoteIndex","setStemStyle","getStemStyle","setLedgerLineStyle","getLedgerLineStyle","setFlagStyle","flagStyle","getFlagStyle","setKeyStyle","noteHeadPadding","shouldDrawFlag","nonDisplacedX","displacedX","highestDisplacedLine","lowestDisplacedLine","yTop","Infinity","yBottom","highestLine","lowestLine","highestNonDisplacedLine","lowestNonDisplacedLine","displaced_x","non_displaced_x","highest_line","lowest_line","highest_displaced_line","lowest_displaced_line","highest_non_displaced_line","lowest_non_displaced_line","getNoteHeadBeginX","getNoteHeadEndX","noteHeads","note_heads","drawLedgerLines","doubleWidth","min_x","drawLedgerLine","normal","ledgerWidth","getDefaultLedgerLineStyle","drawModifiers","noteheadStyle","hasNoBeam","drawFlag","_d","_e","noteStemHeight","flagX","flagY","getStaveNoteScale","pointerBBox","drawNoteHeads","super_stem_extension","mid_line_distance","lines_over_octave_from_mid_line","spacing_between_lines","xBegin","shouldRenderStem","stemX","StaveTie","setNotes","cp1","cp2","text_shift_x","first_x_shift","last_x_shift","tie_spacing","first_note","first_indices","last_indices","isPartial","renderTie","first_ys","last_ys","last_x_px","first_x_px","first_y_px","last_y_px","top_cp_y","bottom_cp_y","center_x","getTieStartX","getTieEndX","TabTie","VoiceMode","Voice","time","voiceTime","resolutionMultiplier","mode","STRICT","ticksUsed","largestTickWidth","softmaxFactor","totalTicks","smallestTickCount","Mode","getTotalTicks","getTicksUsed","getLargestTickWidth","getSmallestTickCount","getMode","setMode","getResolutionMultiplier","getActualResolution","tickable","setStrict","strict","SOFT","isComplete","FULL","setSoftmaxFactor","factor","reCalculateExpTicksUsed","expTicksUsed","softmax","tickValue","v","exp","addTickable","addTickables","grace_notes","show_slur","slur","slur_y_shift","beams","gracenote_groups","group_list","gracenote_group","is_stavenote","formatWidth","group_shift","Formatter","joinVoices","format","getMinTotalWidth","beamNotes","Beam","beam_width","partial_beam_length","graceNote","TieClass","NoteSubGroup","groups","group","TickContext","tickID","currentTick","maxTicks","maxTickable","minTicks","minTickable","xBase","xOffset","tickablesByVoice","totalLeftPx","totalRightPx","tContexts","tContext","contexts","getTickID","getXBase","setXBase","getXOffset","getMaxTicks","getMinTicks","getMaxTickable","getMinTickable","getTickableForVoice","voiceIndex","getTickablesByVoice","getCenterAlignedTickables","getCurrentTick","setCurrentTick","tick","Ornament","delayed","accidentalLowerPadding","accidentalUpperPadding","ornament","ornamentCodes","adjustForStemDirection","reportedWidth","stemUpYOffset","ornamentAlignWithNoteHead","ornamentNoteTransition","ornamentRelease","ornamentAttack","ornamentArticulation","jazzOrnaments","setDelayed","setUpperAccidental","accid","accidentalUpper","setLowerAccidental","accidentalLower","stemDir","stemExtents","isPlacedOnNoteheadSide","glyphYBetweenLines","glyphX","glyphY","delayXShift","startX","nextContext","getNextContext","Parenthesis","parentheses","x_widthL","x_widthR","parenthesis","isHTMLCanvas","element","HTMLCanvasElement","toDataURL","isHTMLDiv","HTMLDivElement","appendChild","CanvasContext","context2D","canvas","CANVAS_BROWSER_SIZE_LIMIT","limit","clearRect","cls","setBackgroundFillStyle","blur","getTransform","setLineCap","capType","lineCap","setLineDash","dash","resize","devicePixelRatio","sanitizeCanvasDims","rect","cp1x","cp1y","cp2x","cp2y","cpx","cpy","startAngle","endAngle","counterclockwise","fontBoundingBoxAscent","fontBoundingBoxDescent","actualBoundingBoxAscent","actualBoundingBoxDescent","ATTRIBUTES_TO_IGNORE","path","SVG_NS","TWO_PI","SVGContext","backgroundFillStyle","fontCSSString","svg","parent","pen","defaultFontAttributes","attributes","shadow_attributes","state_stack","svgElementType","createElementNS","lineDash","applyAttributes","visibleWidth","visibleHeight","setViewBox","viewBox_or_minX","viewBoxString","attrNamesToIgnore","nodeName","attrName","setAttributeNS","lastChild","removeChild","rectangle","x0","cos","y0","sin","large","sweep","getShadowStyle","sa","measureTextCache","txt","textContent","savedState","fontAttributes","RendererBackends","RendererLineEndType","TextJustification","VoltaType","measureImpl","getBBox","Renderer","arg0","arg1","backend","maybeElement","Backends","CANVAS","SVG","elementId","background","renderer","lastContext","buildContext","fromX","fromY","toX","toY","dashPattern","dx","dy","angle","atan2","idx","dashLength","nx","ny","LineEndType","StringNumber","string_number","dashed","leg","drawCircle","stringNumber","shift_left","glyphLine","num_shiftR","num_width","setLineEndType","setStringNumber","setLastNote","setDashed","setDrawCircle","stemPadding","verticalPadding","leftPadding","rightPadding","len","pattern","drawDashedLine","Stroke","all_voices","strokes","strokeList","string","getPositions","strokeShift","addEndNote","note_end","line_space","arrow","arrow_shift_x","arrow_y","text_y","Type","BRUSH_DOWN","BRUSH_UP","ROLL_DOWN","RASQUEDO_DOWN","ROLL_UP","RASQUEDO_UP","ARPEGGIO_DIRECTIONLESS","strokeLine","Vibrato","harsh","vibrato_width","wave_height","wave_width","wave_girth","setVibratoWidth","vibratos","vibrato","setHarsh","vx","vy","renderVibrato","opts","num_waves","ModifierContext","members","formatted","member","getLeftShift","Clef","types","tab","attachment","numLines","shiftY","KeySignature","cancelKeySpec","alterKeySpec","setKeySig","glyphFontScale","xPositions","paddingForced","convertToGlyph","nextAcc","accGlyphData","extraWidth","xPosition","cancelKey","convertToCancelAccList","cancel_accList","different_types","naturals","cancelled","concat","addToStave","convertAccLines","customLines","offset","alterKey","convertToAlterAccList","firstAccidentalType","cancelAccList","getEndClef","getClef","Repetition","symbol_type","setShiftX","setShiftY","CODA_RIGHT","drawCodaFixed","CODA_LEFT","drawSymbolText","SEGNO_LEFT","drawSignoFixed","SEGNO_RIGHT","DC","DC_AL_CODA","DC_AL_FINE","DS","DS_AL_CODA","DS_AL_FINE","FINE","TO_CODA","draw_coda","text_x","symbol_x","modifierWidth","getVerticalBarWidth","StaveSection","section","drawRect","shift_x","setStaveSection","textMeasurements","StaveTempo","tempo","setTempo","bpm","stem_height","TextNote","superscript","subscript","smooth","justification","struct","GLYPHS","segno","mordent_upper","mordent_lower","p","z","coda","pedal_open","pedal_close","caesura_straight","caesura_curved","breath","Justification","StaveText","setStaveText","setText","getBottomLineY","Volta","volta","top_y","vert_height","BEGIN_END","TimeSignatureGlyph","timeSignature","topDigits","botDigits","topWidth","timeSigType","topGlyph","botWidth","botGlyph","topStartX","botStartX","start_x","topLine","bottomLine","TimeSignature","timeSpec","customPadding","validate_args","fontLineShift","parseTimeSpec","numbers","test","assertIsValidTimeSig","makeTimeSignatureGlyph","getInfo","setTimeSig","SORT_ORDER_BEG_MODIFIERS","SORT_ORDER_END_MODIFIERS","Stave","end_x","measure","endClef","vertical_bar_width","num_lines","fill_style","left_bar","right_bar","spacing_between_lines_px","space_above_staff_ln","space_below_staff_ln","top_text_position","bottom_text_position","line_config","bounds","defaultLedgerLineStyle","resetLines","addEndModifier","defaultPadding","setDefaultLedgerLineStyle","visible","setNoteStartX","getNoteEndX","setNumLines","mod","setMeasure","getModifierXShift","begBarline","setRepetitionType","setVoltaType","number_t","setSection","staveSection","headroom","getLineForY","setBegBarType","setEndBarType","setClef","clefSpec","addClef","setEndClef","setKeySignature","addKeySignature","setEndKeySignature","setTimeSignature","timeSignatures","addTimeSignature","setEndTimeSignature","addEndClef","addEndTimeSignature","addTrebleGlyph","noPosition","noCategory","sortByCategory","items","order","temp","endBarline","begModifiers","endModifiers","lastBarlineIdx","getConfigForLines","setConfigForLine","line_number","setConfigForLines","lines_configuration","staves","maxX","drawBoldDoubleLine","topX","StaveConnector","BOLD_DOUBLE_LEFT","BOLD_DOUBLE_RIGHT","variableWidth","top_stave","bottom_stave","texts","newType","content","SINGLE_RIGHT","THIN_DOUBLE","attachment_height","SINGLE_LEFT","BRACE","x3","y3","cpx1","cpy1","cpx2","cpy2","cpx3","cpy3","cpx4","cpy4","cpx5","cpy5","cpx6","cpy6","cpx7","cpy7","cpx8","cpy8","BRACKET","singleRight","singleLeft","brace","bracket","boldDoubleLeft","boldDoubleRight","thinDouble","sumArray","arr","createContexts","makeContext","addToContext","tickToContextMap","tickList","integerTicks","newContext","array","list","getRestLineForNextNoteGroup","currRestLine","currNoteIndex","nextRestLine","noteIndex","formatterOptions","globalSoftmax","maxIterations","justifyWidth","totalCost","durationStats","minTotalWidth","hasMinTotalWidth","tickContexts","modifierContexts","contextGaps","total","gaps","lossHistory","paddingBetween","accumulator","stavePadding","gap","toFixed","auto_beam","align_rests","applyAndGetBeams","formatToStave","tabstave","tabnotes","autobeam","notevoice","tabvoice","alignAllNotes","alignTuplets","currTickable","prevTickable","alignRests","AlignRestsToNotes","preCalculateMinTotalWidth","unalignedPadding","unalignedCtxCount","wsum","dsum","createTickContexts","contextList","contextMap","wavg","wvar","ll","wpads","davg","dvar","dpads","padmax","unalignedPad","createModifierContexts","contextArray","renderingContext","voicesParam","evaluate","firstContext","calculateIdealDistances","adjustedJustifyWidth","backTickable","prevContext","backVoices","matchingVoices","maxNegativeShiftPx","expectedDistance","thisTickable","insideLeftEdge","backMetrics","insideRightEdge","fromTickable","fromTickablePx","shiftToIdealDistances","idealDistances","centerX","spaceAccum","contextX","ideal","errorPx","negativeShiftPx","configMinPadding","configMaxPadding","targetWidth","distances","actualWidth","minDistance","mdCalc","di","calcMinDistance","paddingMaxCalc","curTargetWidth","lastTickablePadding","lastTickable","tickWidth","paddingMax","paddingMin","prevTick","prevMetrics","currMetrics","leftNoteEdge","rightNote","rightMetrics","stats","count","updateStats","totalDeviation","tune","alpha","current","cost","postFormatContexts","optionsParam","TupletLocation","Tuplet","numerator_glyphs","denom_glyphs","num_notes","beats_occupied","beatsOccupiedDeprecationWarning","notes_occupied","bracketed","ratioed","setTupletLocation","location","LOCATION_TOP","resolveGlyphs","attach","LOCATION_BOTTOM","NESTING_OFFSET","detach","setBracketed","setRatioed","getNotes","getBeatsOccupied","setBeatsOccupied","beats","setNotesOccupied","unshift","getNestedTupletCount","maxTupletCount","countTuplets","minTupletCount","tupletCount","getYPosition","nested_tuplet_y_offset","topModifierOffset","modLines","modY","noteHeadOffset","stemOffset","lineCheck","nn","bottom_y","addGlyphWidth","notation_start_x","colon_x","colon_radius","calculateStemDirection","lineSum","keyProp","BEAM_LEFT","BEAM_RIGHT","BEAM_BOTH","slope","forcedPartialDirections","stem_weight","memo","break_on_indices","max_slope","min_slope","slope_iterations","slope_cost","show_stemlets","stemlet_extension","flat_beams","min_flat_beam_offset","time_sig","beatTotal","beatValue","generateBeams","config","tickGroups","unprocessedNotes","currentTickGroup","noteGroups","currentGroup","nextTickGroup","nextGroup","currentGroupTotalTicks","unprocessedNote","ticksPerGroup","vf_notes","unbeamable","createGroups","sanitizedGroups","tempGroup","isFirstOrLast","breaksOnEachRest","beam_rests","breaksOnFirstOrLastRest","beam_middle_only","breakOnStemChange","maintain_stem_directions","prevDirection","isUnbeamableDuration","sanitizeGroups","findFirstNote","applyStemDirection","beamedNoteGroups","beamable","allTuplets","uniqueTuplets","noteTuplet","getTuplets","secondary_breaks","secondary_break_ticks","flat_beam_offset","beamCount","breakSecondaryAt","indices","setPartialBeamSideAt","side","unsetPartialBeamSideAt","getSlopeY","calculateSlope","firstNote","initialSlope","firstStemTipY","firstStemX","getStemSlope","minCost","MAX_VALUE","bestSlope","totalStemExtension","yShiftTemp","adjustedStemTipY","diff","idealSlope","calculateFlatSlope","extremeY","extremeBeamCount","currentExtreme","extremeTest","newOffset","getBeamYToDraw","beamY","applyStemExtensions","beamedStemTipY","preBeamExtension","beamExtension","totalBeamWidth","lookupBeamDirection","prev_tick","next_tick","forcedBeamDirection","lookup_duration","prev_note_gets_beam","next_note_gets_beam","note_gets_beam","getBeamLines","tick_of_duration","beam_started","beam_lines","current_beam","previous_should_break","tick_tally","should_break","next_note","beam_alone","beam_direction","last_beam","drawStems","drawBeamLines","valid_beam_durations","beamThickness","beamLines","beam_line","startBeamX","startBeamY","lastBeamX","lastBeamY","ClefNote","clef_obj","abs_x","Crescendo","extend_left","extend_right","decrescendo","setHeight","setDecrescendo","decresc","tick_context","next_context","begin_x","half_height","reverse","renderHairpin","CurvePosition","Curve","from","to","NEAR_HEAD","position_end","invert","cps","nearHead","nearTop","NEAR_TOP","renderCurve","first_x","first_y","last_x","last_y","cp0x","cp0y","cp_spacing","end_metric","Parser","flattenMatches","matchedString","results","grammar","errorPos","expect","matchFail","returnPos","matchSuccess","matchToken","token","noSpace","regexp","RegExp","success","incrementPos","expectOne","rule","maybe","allMatches","oneMatch","localPos","or","gotOne","numMatches","expectOneOrMore","more","expectZeroOrMore","ruleFunc","bind","oneOrMore","zeroOrMore","matches","run","EasyScore","EasyScoreGrammar","PIECE","PIECES","EOL","CHORDORNOTE","PARAMS","commitPiece","COMMA","DURATION","DOTS","OPTS","CHORD","SINGLENOTE","LPAREN","NOTES","RPAREN","addChord","NOTE","NOTENAME","ACCIDENTAL","OCTAVE","addSingleNote","MICROTONES","ACCIDENTALS","DOT","setNoteDots","SLASH","MAYBESLASH","TYPES","setNoteType","DURATIONS","setNoteDuration","LBRACKET","KEYVAL","KEYVALS","RBRACKET","KEY","EQUALS","VAL","addNoteOption","SVAL","DVAL","Piece","chord","Builder","commitHooks","elements","rollingDuration","resetPiece","getElements","addCommitHook","commitHook","piece","addNote","standardAccidentals","notePiece","GhostNote","buildAndAttach","setId","commaSeparatedRegex","setClass","defaults","easyScoreHook","throwOnError","parser","ERROR_MSG","parameter","GlyphNote","ignoreTicks","setGlyph","SCALE","slash","ret","staveNoteScale","offsetScale","slashBBox","calcBeamedNotesSlashBBox","noteHeadBounds","defaultStemExtention","defaultOffsetY","slashStemOffset","slashBeamOffset","protrusions","beam_slope","scaleX","beam_angle","atan","iPointOnBeam","slash_angle","protrusion_stem_dx","protrusion_stem_dy","protrusion_beam_dx","protrusion_beam_dy","stem0X","stemY","KeySigNote","semibreve_rest","MultiMeasureRest","number_of_measures","xs","hasPaddingLeft","hasPaddingRight","hasLineThickness","hasSymbolSpacing","padding_left","padding_right","line_thickness","symbol_spacing","use_symbols","show_number","number_line","number_glyph_point","serif_thickness","semibreve_rest_glyph_scale","getXs","drawLine","spacingBetweenLines","lineThicknessHalf","serifThickness","bot","leftIndented","rightIndented","lineTop","lineBottom","drawSymbols","n4","n2","n1","get_semibreve_rest","rest_scale","rest_width","yMiddle","timeSig","drawPedalGlyph","glyph_data","PedalMarking","custom_depress_text","custom_release_text","bracket_height","text_margin_right","bracket_line_width","pedal","MIXED","setCustomText","depress","drawBracketed","prev_x","prev_y","is_pedal_depressed","next_is_same","prev_is_same","drawText","pedal_depress","pedal_release","mixed","CODES","RepeatNote","drawArrowHead","StaveLine","line_dash","rounded_end","draw_start_arrow","draw_end_arrow","arrowhead_length","arrowhead_angle","text_position_vertical","TextVerticalPosition","text_justification","applyLineStyle","applyFontStyle","drawArrowLine","pt1","pt2","both_arrows","distance","ratio","end_y","start_y","line_angle","angle1","angle2","top_x","bottom_x","start_position","end_position","first_index","last_index","upwards_slope","notehead_width","vertical_position","System","spaceBetweenStaves","autoWidth","noJustification","debugFormatter","formatIterations","noPadding","details","formatOptions","addConnector","connector","addStave","staveOptions","spaceAbove","spaceBelow","debugNoteMetrics","options_details","allVoices","allStaves","debugNoteMetricsYs","part","lastY","formatBegModifiers","plotDebugging","plotMetrics","positions","ghost","draw_dots","draw_stem_through_stave","setGhost","tabToGlyph","getStemY","stemDownLine","stemStartLine","flag_x","flag_y","drawStemThrough","stemThrough","stemLines","unused_strings","up_stem","down_stem","line_spacing","total_lines","stem_lines","strings","containsLastString","containsFirstString","line_ys","isTopBound","isBottomBound","getPartialStemLines","strings_used","stem_through","getUnusedStringGroups","drawPositions","tab_x","render_stem","TabStave","addTabGlyph","TextBracket","TextBracketPosition","stop","show_bracket","underline_superscript","Positions","PositionsString","main_measure","main_width","main_height","super_y","super_measure","super_width","super_height","line_y","TextDynamics","sequence","glyph_font_size","total_width","letter","letter_x","current_letter","TimeSigNote","timeSigInfo","VibratoBracket","bracket_data","stop_x","Factory","renderQ","systems","initRenderer","getVoices","ghostNote","textNote","barNote","clefNote","timeSigNote","keySigNote","hJustify","vJustify","kerning","upperAccidental","lowerAccidental","numMeasures","multiMeasureRest","secondaryBeamBreaks","partialBeamDirections","curve","tie","vibratoBracket","textBracket","system","GraceTabNote","KeyManager","setKey","getKey","scaleMapByValue","originalScaleMapByValue","getAccidental","selectNote","scaleNote","modparts","change","valueNote","originalValueNote","StaveHairpin","hairpin","left_shift_px","right_shift_px","right_shift_ticks","left_shift_ticks","ppt","pixelsPerTick","l_shift_px","r_shift_px","hairpin_options","setRenderOptions","dis","staff_height","l_shift","r_shift","CRESC","DECRESC","TabSlide","first_fret","last_fret","SLIDE_UP","SLIDE_DOWN","slide_y","Tremolo","y_spacing_scale","extra_stroke_scale","y_spacing","Tuning","tuningString","tuningValues","setTuning","names","standard","dagdad","dropd","standardBanjo","noteToInteger","getValueForString","stringNum","getValueForFret","fretNum","stringValue","getNoteForFret","integerToNote","Flow","BUILD","VERSION","DATE","fontNames","fontModuleOrPath","hasKeySignature","getKeySignatures","BravuraFont","bracketTop","y_min","bracketBottom","barlineTick","breathMarkTick","gClef","cClef","fClef","unpitchedPercussionClef1","timeSig0","timeSig1","timeSig2","timeSig3","timeSig4","timeSig5","timeSig6","timeSig7","timeSig8","timeSig9","timeSigCommon","timeSigCutCommon","timeSigPlus","timeSigPlusSmall","timeSigMinus","timeSigParensRight","timeSigParensRightSmall","timeSigParensLeft","timeSigParensLeftSmall","noteheadDoubleWhole","noteheadWhole","noteheadHalf","noteheadBlack","noteheadXDoubleWhole","noteheadXWhole","noteheadXHalf","noteheadXBlack","noteheadCircleXDoubleWhole","noteheadCircleXWhole","noteheadCircleXHalf","noteheadCircleX","noteheadCircledDoubleWhole","noteheadCircledWhole","noteheadCircledHalf","noteheadCircledBlack","noteheadDoubleWholeSquare","noteheadSquareWhite","noteheadSquareBlack","noteheadTriangleDownDoubleWhole","noteheadTriangleDownWhole","noteheadTriangleDownHalf","noteheadTriangleDownBlack","noteheadTriangleUpDoubleWhole","noteheadTriangleUpWhole","noteheadTriangleUpHalf","noteheadTriangleUpBlack","noteheadSlashedDoubleWhole1","noteheadSlashedWhole1","noteheadSlashedHalf1","noteheadSlashedBlack1","noteheadSlashedDoubleWhole2","noteheadSlashedWhole2","noteheadSlashedHalf2","noteheadSlashedBlack2","noteheadDiamondDoubleWhole","noteheadDiamondWhole","noteheadDiamondHalf","noteheadDiamondBlack","noteheadParenthesis","noteheadParenthesisRight","noteheadParenthesisLeft","noteheadMoonBlack","noteheadTriangleLeftBlack","noteheadTriangleRightBlack","noteheadTriangleRoundDownBlack","augmentationDot","tremolo1","flag8thUp","flag8thDown","flag16thUp","flag16thDown","flag32ndUp","flag32ndDown","flag64thUp","flag64thDown","flag128thUp","flag128thDown","accidentalFlat","accidentalNatural","accidentalSharp","accidentalDoubleSharp","accidentalDoubleFlat","accidentalParensLeft","accidentalParensRight","accidentalQuarterToneFlatStein","accidentalThreeQuarterTonesFlatZimmermann","accidentalQuarterToneSharpStein","accidentalThreeQuarterTonesSharpStein","accidentalBuyukMucennebFlat","accidentalBakiyeFlat","accidentalKomaSharp","accidentalKucukMucennebSharp","accidentalKoron","accidentalSori","articAccentAbove","articAccentBelow","articTenutoAbove","articTenutoBelow","articStaccatoAbove","articStaccatoBelow","articStaccatissimoAbove","articStaccatissimoBelow","articMarcatoAbove","articMarcatoBelow","fermataAbove","fermataBelow","fermataLongAbove","fermataLongBelow","fermataVeryLongAbove","fermataVeryLongBelow","fermataShortAbove","fermataShortBelow","breathMarkComma","breathMarkUpbow","caesura","caesuraCurved","restMaxima","restDoubleWhole","restWhole","restWholeLegerLine","restHalf","restHalfLegerLine","restQuarter","rest8th","rest16th","rest32nd","rest64th","rest128th","dynamicPiano","dynamicMezzo","dynamicForte","dynamicRinforzando","dynamicSforzando","dynamicZ","ornamentTrill","ornamentTurn","ornamentTurnSlash","ornamentMordent","ornamentShortTrill","ornamentTremblement","ornamentPrecompAppoggTrill","ornamentPrecompSlideTrillDAnglebert","ornamentPrecompSlideTrillBach","ornamentPrecompTrillSuffixDandrieu","ornamentPrecompDoubleCadenceUpperPrefix","ornamentPrecompDoubleCadenceUpperPrefixTurn","ornamentPrecompTrillLowerSuffix","brassScoop","brassDoitMedium","brassFallLipShort","brassLiftMedium","brassFallRoughMedium","brassBend","brassMuteClosed","brassMuteOpen","brassFlip","brassJazzTurn","brassSmear","stringsDownBow","stringsUpBow","stringsHarmonic","pluckedSnapPizzicatoAbove","pluckedSnapPizzicatoBelow","pluckedLeftHandPizzicato","keyboardPedalPed","keyboardPedalUp","pictChokeCymbal","wiggleArpeggiatoUp","arrowheadBlackUp","arrowheadBlackDown","arpeggiatoUp","arpeggiatoDown","repeat1Bar","repeat2Bars","repeat4Bars","repeatBarSlash","csymDiminished","csymHalfDiminished","csymAugmented","csymMajorSeventh","csymMinor","csymParensLeftTall","csymParensRightTall","csymBracketLeftTall","csymBracketRightTall","csymParensLeftVeryTall","csymParensRightVeryTall","csymDiagonalArrangementSlash","generatedOn","BravuraMetrics","smufl","endPaddingMax","endPaddingMin","unalignedNotePadding","default","small","smuflCode","shiftX","lineCount","gracenote","pedalMarking","up","down","digits","shiftLine","tupletPoint","tremolo","offsetYStemUp","offsetYStemDown","offsetXStemUp","offsetXStemDown","grace","staveRepetition","symbolText","offsetX","offsetY","heightAdjustmentForFlag","staveTempo","straight","wiggly","restQuarterStemUp","restQuarterStemDown","custom","noteheadCircleXStemUp","noteheadCircleXStemDown","noteheadDiamondHalfStemUp","noteheadDiamondBlackStemUp","noteheadDiamondWholeStemUp","noteheadXHalfStemUp","noteheadXHalfStemDown","noteheadXWholeStemUp","noteheadXWholeStemDown","noteheadXDoubleWholeStemUp","noteheadXDoubleWholeStemDown","noteheadSquareWhiteStemDown","noteheadSquareWhiteStemUp","noteheadSquareBlackStemUp","noteheadTriangleUpWholeStemUp","CustomFont","vexAccidentalMicrotonal2","vexAccidentalMicrotonal3","vexAccidentalMicrotonal4","vexNoteHeadRectBlack","vexNoteHeadRectWhite","CustomMetrics","PetalumaScriptFont","$","I","J","K","N","O","Q","U","V","Y","Z","_","l","RobotoSlabFont","Vex","cmp","eq","newArr","last","canvasSelector","start_time","Date","getTime","setMusicFont","fontData","registerInfo","description","loadTextFonts"],"sourceRoot":""}